{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.e8403bdbde8456bb5731.hot-update.js","sources":["webpack:///./components/forms/Tasks.js","webpack:///./components/forms/Taskstyles.js"],"sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {StyledTask} from './Taskstyles';\nimport InstructionsPopup from '../InstructionsPopup';\n\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Tasks extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Permissions</Typography>\n                        <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                PDF upload\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_ppt}\n                                style={{ color: '#134381' }}\n                                name=\"ppt_filename\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                    Yes\n                                        <input\n                                   \n                                        onChange={handleChange}                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                    No\n                                        <input\n                                      \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                        <Button \n                            onClick={() => console.log(values)}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\n\nexport const StyledTask = styled(Form)`\n        display: flex;\n        flex-flow: column;\n        justify-content: space-between;\n        align-items: center;\n        min-width: 100%;\n\n     \n     a{\n            cursor: pointer;\n            font-family: ${props => props.theme.MPBold};\n            color: ${props => props.theme.primary};\n        }\n     .MuiInput-underline:before {\n                    border-bottom: none;\n                }   \n\n    .MuiInput-underline:after {\n        color: ${props => props.theme.primary};\n    }\n\n    .MuiFormHelperText-root {\n        font-size: 1.5rem;\n    }\n\n    .MuiInputBase-root {\n        font-family: ${props => props.theme.MPBoldIt};\n            font-size: 2rem;\n            color: ${props => props.theme.primary};\n    }\n   \n        .task{\n             color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPLight};\n        font-size: 2rem;\n\n         &-radio{\n            text-align: end;\n        }\n\n        &-notes{\n        display: flex;\n        flex-flow: column;\n        justify-content: space-between;\n        align-items: center;\n        min-width: 100%;\n\n        &-label{\n            min-width: 100%;\n            font-family: ${props => props.theme.MPLight};\n            font-size: 2.6rem;\n            color: ${props => props.theme.primary};\n        \n        \n        \n        }\n        &-input{\n            margin: 2rem 0;\n            min-width: 100%;\n            min-height: 15rem;\n            font-family: ${props => props.theme.MPBoldIt};\n            font-size: 2rem;\n            color: ${props => props.theme.primary};\n\n        }\n        }\n            \n        &-field{\n            margin: 1rem 0;\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n\n\n            &-copy{\n                width: 100%;\n                display: flex;\n                flex-flow: column;\n            }  \n            &_action{\n                align-self: flex-end;\n                 display: flex;\n                justify-content: flex-end;\n                align-items: flex-end;\n            }\n        }\n\n      \n\n        &-checkboxField{\n            min-width: 100%;\n            font-family: ${props => props.theme.MPLight};\n            font-size: 2.6rem;\n            color: ${props => props.theme.primary};\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin-bottom: 1rem;\n\n\n            .MuiIconButton-colorSecondary:hover {\n                background-color: transparent;\n            }\n           \n\n            .MuiSvgIcon-root {\n            font-size: 4rem;\n            }\n            &-label{\n            }\n            &-box{\n                align-self: flex-end;\n            }\n        }\n        &-label{\n            min-width: 33.3%;\n            font-family: ${props => props.theme.MPLight};\n            font-size: 2.6rem;\n            color: ${props => props.theme.primary};\n        }\n        &-input{\n            min-width: 66.6%;\n            font-family: ${props => props.theme.MPBoldIt};\n            font-size: 2rem;\n            color: ${props => props.theme.primary};\n        }\n\n        &-link{\n            cursor: pointer;\n            font-family: ${props => props.theme.MPBoldIt};\n            font-size: 1.7rem;\n            color: ${props => props.theme.primary};\n        }\n      \n       \n        &-title{\n        color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPSemibold};\n        font-size: 3rem;\n        align-self: flex-start;\n        margin: 2rem 0;\n        }\n        }\n    `;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAeA;AACA;AAjBA;AAAA;AAAA;AAmcA;AArEA;AAwEA;AApGA;AACA;AADA;AAAA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AAOA;AAAA;AAQA;AAAA;AAEA;AAAA;AAIA;AAAA;AACA;AAAA;AAgBA;AAAA;AAEA;AAAA;AASA;AAAA;AAEA;AAAA;AA6BA;AAAA;AAEA;AAAA;AAuBA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}