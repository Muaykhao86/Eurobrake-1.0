{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.da0472b2e53f7f10b080.hot-update.js","sources":["webpack:///./components/CountDownBanner.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '../components/Button';\n\n\nconst CDBanner = styled.div`\n    position: relative;\n    align-self: flex-end;\n    z-index: 10;\n    background-color: #134381;\n    margin-top: 0;\n    min-width: 100%;\n    min-height: 20vh;\n      @media only screen \n        and (max-device-width: 768px) \n        and (-webkit-min-device-pixel-ratio: 2) {\n    min-height: 10vh;\n    }\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white; \n`;\n\nconst CDContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 2rem; \n\n`;\n\nconst CDItem = styled.div`\n    position: relative;\n    top: -1.5rem;\n    display: flex;\n    flex-flow: column;\n    align-content: flex-start;\n    align-items: flex-start;\n\n.timer{\n    position: relative;\n    font-size: 7rem;\n    font-family: ${props => props.theme.MPBlack};\n    margin: 0 1rem ;\n}\n\n    span{\n    position: absolute;\n    top: 8.8rem;\n    font-size: 1.7rem;\n    font-family: ${props => props.theme.MPLight};\n    padding-left: 2rem;\n    }\n\n    span:not(.noPad){\n        padding-left: 5rem;\n    }\n`;\n\nclass CountDownBanner extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            days: '',\n            hours: '',\n            minutes: '',\n            seconds: '',\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.interval = setInterval(() => {\n            const countDownDate = new Date(\"Jun 2, 2020 08:00:00\").getTime();\n            const now = new Date().getTime();\n            const distance = countDownDate - now;\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance / (1000 * 60 * 60)) % 24);\n            const minutes = Math.floor((distance / (1000 * 60)) % 60);\n            const seconds = Math.floor((distance / 1000) % 60);\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { days, hours, minutes, seconds } = this.state\n\n        return (\n            <CDBanner>\n                <CDContainer>\n                    <CDItem>\n                       <Typography className=\"timer\">{days || '0' }</Typography>\n                        <span className=\"noPad\">Days</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{hours > 9 ? ': '+ hours : `: 0` + hours}</Typography>\n                        <span>Hours</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{minutes > 9 ? ': '+ minutes : `: 0` + minutes}</Typography>\n                        <span>Minutes</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{seconds > 9 ? ': '+ seconds : `: 0` + seconds}</Typography>\n                        <span>Seconds</span>\n                    </CDItem>\n            <Link href=\"/ticketPortal\">\n                    <Button style={{marginLeft: '5rem', minHeight: '8rem'}}>Book Now</Button>\n            </Link>\n                </CDContainer>\n            </CDBanner>\n\n        )\n    }\n};\n\nexport default CountDownBanner;\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAWA;AAAA;AAQA;AAAA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA7DA;AACA;AA6DA;AAEA;;;;A","sourceRoot":""}