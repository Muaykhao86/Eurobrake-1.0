{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.258700a3ea4f79f33a53.hot-update.js","sources":["webpack:///./components/forms/TaskType/Poster.js"],"sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport {StyledTask} from '../Taskstyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Poster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        \n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload your Poster PDF</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your poster PDF using the form below.</Typography>\n\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            \n                            </Field>\n                        </div>\n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.poster_filename}\n                                style={{ color: '#134381' }}\n                                name=\"pitchvideo_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n                       \n\n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_pitchvideo}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAeA;AACA;AAjBA;AAAA;AAAA;AAmaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAhHA;AAmHA;AA9IA;AACA;AADA;AAAA;;;;A","sourceRoot":""}