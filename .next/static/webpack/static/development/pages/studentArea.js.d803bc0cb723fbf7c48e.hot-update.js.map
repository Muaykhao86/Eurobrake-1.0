{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.d803bc0cb723fbf7c48e.hot-update.js","sources":["webpack:///./components/forms/TaskType/PPT.js","webpack:///./components/forms/TaskType/PitchVideo.js","webpack:///./pages/studentArea.js"],"sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class PPT extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your PowerPoint persentation using the form below</Typography>\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            \n                            </Field>\n                        </div>\n                         <div className=\"task-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                File upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.ppt_filename}\n                                style={{ color: '#134381' }}\n                                name=\"ppt_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n","import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class PitchVideo extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        pitchvideo_filename: '',\n        ok_to_publish_pitchvideo: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload Pitch Video Slide</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your pitch video as a PowerPoint slide using the form below</Typography>\n                       \n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.pitchvideo_filename}\n                                style={{ color: '#134381' }}\n                                name=\"pitchvideo_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n\n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_pitchvideo}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n","import React ,{useEffect} from 'react'\nimport styled from 'styled-components';\nimport HeroSection from '../components/HeroSection';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\nimport {StyledPage, StyledBanner, StyledContainer} from '../components/styles/PageStyles';\nimport {FixedDates} from '../components/Dates';\nimport { GetForm } from '../components/forms/FormActions';\nimport {Paper} from '../components/forms/TaskType/Paper';\nimport {PitchVideo} from '../components/forms/TaskType/PitchVideo';\nimport {PPT} from '../components/forms/TaskType/PPT';\nimport {Permissions} from '../components/forms/TaskType/Permissions';\nimport {LoginForm} from '../components/forms/LoginForm';\n\n\n\n// * NEED TO SORT OUT A PAGE TO TEST FORMSA AND LINKS FORM ONE PAGE WOITH PIUT BEIN ONLINE AL THE TIME\n\nexport default () => (\n    <>\n    <HeroSection>\n        Complete your task\n    </HeroSection>\n    <StyledPage>\n    </StyledPage>\n    </>\n)\n        {/* <Paper/> */}\n\n   \n// export default () => {\n\n//   const GetDef = async (type, paper) => {\n//       console.log({type, paper})\n//             const formData = await  GetForm(`https://prelude.eurobrake.net/authors/tasks/${type}/${paper}?definition=1`);\n//             const res = await formData;\n//            return  console.log({res});\n//     }\n//   const GetDefAbstract = async (paper) => {\n//       console.log({paper})\n//             const formData = await  GetForm(`https://prelude.eurobrake.net/authors/edit/${paper}?definition=1`);\n//             const res = await formData;\n//            return  console.log({res});\n//     }\n//   const GetDefAuthor = async () => {\n//             const formData = await  GetForm(`https://prelude.eurobrake.net/authors/author?definition=1`);\n//             const res = await formData;\n//            return  console.log({res});\n//     }\n\n// return (\n// <>\n//     <HeroSection max=\"60%\"  >\n//     Testing of the forms     \n//     </HeroSection>\n//     <StyledPage >\n// //         <Typography>Get some definitions</Typography>\n// <Paper/>\n//         <button onClick={() => GetDef('paper','EB2020-MDS-001')}>Tech paper</button>\n// //        {/* presets: {}\n// // __csrf_token: \"a1a18d88b90168cb0c3da91c40c6db779d5750f5,e20751081fe215e40f0ca53fdbd618ec1ea4989a,1578920366\"\n// // status: \"success\"\n// // form: Array(5)\n// // 0:\n// // required: \"Please make sure you read the instructions and that your document complies with the Technical Paper Template, then confirm by checking the box below.\"\n// // options: Array(1)\n// // 0:\n// // value: \"yes\"\n// // label: \"I have read the instructions and my document complies with the Technical Paper Template\"\n// // __proto__: Object\n// // length: 1\n// // __proto__: Array(0)\n// // name: \"accept\"\n// // type: \"checkbox\"\n// // __proto__: Object\n// // 1:\n// // required: \"Please upload your document in PDF format.\"\n// // accept_filetypes: [\"pdf\"]\n// // name: \"technicalpaper_filename\"\n// // label: \"PDF upload:\"\n// // type: \"file\"\n// // divider: 1\n// // allow_preset: 0\n// // __proto__: Object\n// // 2:\n// // name: \"author_notes\"\n// // label: \"Notes for reviewers:\"\n// // type: \"textarea\"\n// // divider: 1\n// // __proto__: Object\n// // 3:\n// // html: \"<p>Please confirm that you agree to assign copyright, by checking the box below. <a href=\"#\">Click here</a> to read the copyright guidelines.</p>\"\n// // wide: 1\n// // type: \"html\"\n// // divider: 1\n// // __proto__: Object\n// // 4:\n// // required: \"Please confirm your agreement to assign copyright by checking the box below.\"\n// // options: [{…}]\n// // name: \"copyright\"\n// // type: \"checkbox\"\n// // __proto__: Object\n// // length: 5\n// // __proto__: Array(0)\n// // expects: \"formdata\"\n// // logintoken: \"NjXwJEQG2nGrgZ894P7oh7\" */}\n//         <button onClick={() => GetDef('ppt','EB2020-MDS-002')}>PPT</button>\n// //         {/*presets: {}\n// // __csrf_token: \"7b93eaa451b408e1cf83dbae998f29f1072de6f7,422d0986d94f6957c0b0ba6cb380ce638dd654aa,1578919293\"\n// // status: \"success\"\n// // form: Array(3)\n// // 0:\n// // required: \"Please make sure you read the instructions and that your document complies, then confirm by checking the box below.\"\n// // options: Array(1)\n// // 0: {value: \"yes\", label: \"I have read the instructions and followed the guidance\"}\n// // length: 1\n// // __proto__: Array(0)\n// // name: \"accept\"\n// // type: \"checkbox\"\n// // __proto__: Object\n// // 1:\n// // required: \"Please upload your presentation in PowerPoint format.\"\n// // accept_filetypes: Array(2)\n// // 0: \"ppt\"\n// // 1: \"pptx\"\n// // length: 2\n// // __proto__: Array(0)\n// // name: \"ppt_filename\"\n// // label: \"PowerPoint upload:\"\n// // type: \"file\"\n// // divider: 1\n// // allow_preset: 0\n// // __proto__: Object\n// // 2:\n// // name: \"author_notes\"\n// // label: \"Notes for reviewers:\"\n// // type: \"textarea\"\n// // divider: 1\n// // __proto__: Object\n// // length: 3\n// // __proto__: Array(0)\n// // expects: \"formdata\"\n// // logintoken: \"6rL0apksDdqXRS5KzKUHXN\" */}\n//         <button onClick={() => GetDef('permissions','EB2020-MDS-002')}>permissions</button>\n// // {/* presets: {}\n// // __csrf_token: \"4857efa581698029ebe300bc0db7fadf1830c9e6,9abd2676c8ddcca5e1006b05bc5aac9f0ca72953,1578919565\"\n// // status: \"success\"\n// // form: Array(2)\n// // 0:\n// // html: \"<p>We would like to support you to promote your work to EuroBrake attendees by making your poster PDF available on a private area of the conference website via a password protected link sent round after the event.</p>\"\n// // type: \"html\"\n// // __proto__: Object\n// // 1:\n// // required: \"Please indicate whether you grant permission to include your presentation in the conference downloads.\"\n// // options: Array(2)\n// // 0: {value: \"yes\", label: \"Yes, I grant permission for my presentation to be included\"}\n// // 1: {value: \"no\", label: \"No, I do not grant permission\"}\n// // length: 2\n// // __proto__: Array(0)\n// // name: \"ok_to_publish_ppt\"\n// // label: \"Grant permission?\"\n// // type: \"radio\"\n// // __proto__: Object\n// // length: 2\n// // __proto__: Array(0)\n// // expects: \"json\"\n// // logintoken: \"6rL0apksDdqXRS5KzKUHXN\"\n// // __proto__: Object */}\n//         <button onClick={() => GetDef('poster-accept','EB2020-MDS-003')}>poster-accept</button>\n// // {/* presets: {}\n// // __csrf_token: \"f2857af069ab04253a9ae1f6599314c0d06f6bbc,3133ab2d1025f7de2177ae9a57f037e02b754187,1578920435\"\n// // status: \"success\"\n// // form: Array(1)\n// // 0:\n// // required: \"Please indicate whether you accept the invitation to make a poster presentation.\"\n// // options: Array(2)\n// // 0: {value: \"yes\", label: \"Yes, I will make a poster presentation\"}\n// // 1: {value: \"no\", label: \"No, please withdraw my paper from EuroBrake 2020\"}\n// // length: 2\n// // __proto__: Array(0)\n// // name: \"accept_poster_invitation\"\n// // label: \"Accept invitation?\"\n// // type: \"radio\"\n// // __proto__: Object\n// // length: 1\n// // __proto__: Array(0)\n// // expects: \"json\"\n// // logintoken: \"NjXwJEQG2nGrgZ894P7oh7\" */}\n//         <button onClick={() => GetDef('poster','EB2020-MDS-002')}>poster</button>\n// // {/* // ? NEED TO TESXT WIOTH A VALID PAPER */}\n// //         <button onClick={() => GetDef('pitchvideo','EB2020-MDS-002')}>pitchvideo</button>\n// // {/* // ? NEED TO TESXT WIOTH A VALID PAPER  */}\n//         <button onClick={() => GetDef('bio','EB2020-MDS-002')}>bio</button>\n// // {/* presets: {}\n// // __csrf_token: \"efbea024ec39ce5aa6b54418fdd348d8a129e247,85f49fed2d31dee1a6ac1ecd663c3001f541c5f0,1578920492\"\n// // status: \"success\"\n// // form: Array(1)\n// // 0:\n// // required: \"Please enter a short biography of the presenting author.\"\n// // notes: \"Please enter a short biography of the presenting author (maximum 100 words). This will be used by the chair of your session to introduce you when you present your paper.   See <a href=\"#\">Guidelines for writing your biography</a>.\"\n// // name: \"biography\"\n// // label: \"Biography:\"\n// // type: \"textarea\"\n// // __proto__: Object\n// // length: 1\n// // __proto__: Array(0)\n// // expects: \"json\"\n// // logintoken: \"NjXwJEQG2nGrgZ894P7oh7\"\n// // __proto__: Object */}\n//         <button onClick={() => GetDefAbstract('EB2020-MDS-002')}>abstract</button>\n//         <button onClick={() => GetDefAuthor()}>author details</button>\n\n//     </StyledPage>\n// </>\n// )}  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAeA;AACA;AAjBA;AAAA;AAAA;AAmaA;AA7EA;AAgFA;AA5GA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAeA;AACA;AAjBA;AAAA;AAAA;AAmBA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAIA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AA5FA;AA+FA;AA1HA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;A","sourceRoot":""}