{"version":3,"file":"static/webpack/static/development/pages/f/[id]/[formType].js.e696c406e9008681704b.hot-update.js","sources":["webpack:///./components/forms/Contact.js"],"sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {ContactSchema} from './FormControl';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const ContactForm = (props) => {\n    const { presets, csrf, apiUrl, paperId} = props;\n\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = 'contact';\n    const url = 'https://prelude.eurobrake.net/contact';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={ContactSchema}\n            enableReinitialize\n        >\n             {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendForm({values, url, csrf, FT});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n\n                return (\n                    <StyledForm>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label\">\n                                Title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"firstname\"\n                                className=\"form-label\">\n                                First name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fisrstname}\n                                style={{ }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"lastname\"\n                                className=\"form-label\">\n                                Last name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"jobtitle\"\n                                className=\"form-label\">\n                                Job title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"company\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"address\"\n                                className=\"form-notes-label\">\n                                Address:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.address}\n                                style={{ }}\n                                name=\"address\"\n                                component=\"textarea\"\n                            />\n                            {errors.address && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.address}</label>}\n\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"enquiry\"\n                                className=\"form-notes-label\">\n                                Your message:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.enquiry}\n                                style={{ }}\n                                name=\"enquiry\"\n                                component=\"textarea\"\n                            />\n                            {errors.enquiry && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.enquiry}</label>}\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    firstneme: '',\n    lastname: '',\n    jobtitle: '',\n    company: '',\n    address: '',\n    email: '',\n    enquiry: ''\n};\n\n\n\n"],"mappings":"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","sourceRoot":""}