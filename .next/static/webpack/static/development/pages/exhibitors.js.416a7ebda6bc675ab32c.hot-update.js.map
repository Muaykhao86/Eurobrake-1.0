{"version":3,"file":"static/webpack/static/development/pages/exhibitors.js.416a7ebda6bc675ab32c.hot-update.js","sources":["webpack:///./pages/exhibitors.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nimport ExhibitorCard from '../components/exhibitors/ExhibitorCard';\nimport {expo} from '../components/exhibitors/testexpo';\nimport HeroSection from '../components/HeroSection';\n\nconst StyledPage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    margin-top: 10rem;\n    max-width: ${props => props.theme.maxWidth};\n    background-color: ${props => props.theme.white};\n\n    h1{\n        font-family: ${props => props.theme.MPBlack};\n        color: ${props => props.theme.primary};\n        font-size: 4.4rem;\n    }\n`;\n\n\nconst StyledExhibitors = styled.div`\n    display: flex;\n    flex-flow: wrap; \n    justify-content: center;\n`;\n\n\n\nexport default class ExhibitorList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            exhibitors: [],\n            companies: [],\n        }\n    }\n\n    // static async getInitialProps() {\n    //     const res = await fetch('https://prelude.eurobrake.net/exhibitors');\n    //     const data = await res.json().catch(error => console.log(error));\n    //     return {\n    //         exhibitors: data\n    //     };\n    // };\n\n    componentDidMount() {\n\n        const exhibitors = expo;\n        // this.props.exhibitors.exhibitors;\n        const company = exhibitors.map((ex, i) => ex.company);\n        this.setState({ companies: company });\n    }\n\n    render() {\n        const exhibitors = expo;\n        \n        // this.props.exhibitors.exhibitors;\n        return (\n            <Fragment>\n            <HeroSection>\n                EuroBrake 2020 Exhibitor Directory\n            </HeroSection>\n            <StyledPage>\n                <h1>Get to know the exhibitors</h1>\n                <StyledExhibitors>\n                    {exhibitors.map((company, i) => {\n                        return (\n                            <ExhibitorCard \n                            key={i} \n                            name={company.company} \n                            image={company.logo}\n                            booth={company.booth}\n                            country={company.country}\n                            height={100}\n                            summary={company.description}\n                            website={company.website}\n                            phone={company.phone}\n                            email={company.email}\n                            />\n                        )\n                    })}\n                </StyledExhibitors>\n            </StyledPage>\n            </Fragment>\n        )\n    }\n}\n\n// ON THIS PAGE!!!\n// HAVE A BIG CARD LIST OF ALL EXHIBITORS\n// DISPLAY LOGO NAME AND BOOTH\n// THEN ON CLICK SHOW POPUP PORTAL WITH THE REST OPF THEIR DETAILS\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAKA;;;;AA1DA;AA8DA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}