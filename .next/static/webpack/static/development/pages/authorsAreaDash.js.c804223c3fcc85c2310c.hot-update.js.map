{"version":3,"file":"static/webpack/static/development/pages/authorsAreaDash.js.c804223c3fcc85c2310c.hot-update.js","sources":["webpack:///./pages/authorsAreaDash.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { withAuthSync, logout, login } from '../utils/auth'\nimport HeroSection from '../components/HeroSection';\nimport { Button } from '../components/Button';\nimport { StyledBanner, StyledContainer} from '../components/styles/PageStyles';\nimport { Link } from '@material-ui/core';\n\n\n\nconst StyledPage = styled.div`\n    display: flex;\n    \n    flex-direction: column;\n    align-self: center;\n    min-width: ${props => props.theme.maxWidth};\n    background-color: ${props => props.theme.white};\n    margin-top: 7rem;\n    .authors{\n            \n        \n        color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPLight};\n        font-size: 2rem;\n    &-title{\n        color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPSemibold};\n        font-size: 4.4rem;\n        margin-top: 3rem;\n    }\n    &_sub-title{\n        color: ${props => props.theme.primary};\n        font-size: 3.5rem;\n        font-family: ${props => props.theme.MPLightIt};\n        padding-bottom: .5rem;\n    }\n    &-bold{\n        font-family: ${props => props.theme.MPBold};\n    }\n    &-it{\n        font-family: ${props => props.theme.MPLightIt};\n    }\n    &_action-box{\n        display: flex;\n        justify-content: space-between;\n    }\n}\n`;\n\nconst StyledBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex: 1 1 auto;\n    min-height: 15rem;\n    background-color: #D4DDE8;\n    padding: 1rem;\n`;\n\n\n\nconst FilledBanner = () => (\n\n    <StyledBanner>\n        <StyledContainer >\n\n            <Typography className=\"banner-heading\"  >Welcome to the Author's Area</Typography>\n            <Typography className=\"banner-sub\" sfs=\"3rem\">Submit your review ready papers by 26 January 2020</Typography>\n            <div className=\"banner_bottom\">\n                <ExpandMoreOutlinedIcon className=\"banner_bottom-icon\" />\n                <Typography varient=\"h3\" className=\"banner_bottom-details\">Submit your review ready papers by 26 January 2020</Typography>\n            </div>\n        </StyledContainer>\n    </StyledBanner>\n)\n\nclass AuthorsAreaDash extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasForm: false,\n            formData: undefined,\n            error: '',\n            userLoggedIn: false,\n        }\n\n\n    }\n\n    componentDidMount = () => {\n        const { userLoggedIn } = this.state;\n        const { logintoken } = cookie.get();\n        console.log('cdm', logintoken)\n        logintoken && !userLoggedIn ? this.setState(prev => ({\n            userLoggedIn: !prev\n        })) : null\n    }\n\n    getAbstractForm = async (e) => {\n        e.preventDefault()\n        console.log('click');\n        const { logintoken } = cookie.get();\n        console.log(logintoken)\n        try {\n            const apiUrl = 'https://prelude.eurobrake.net/submit';\n            const response = await fetch(apiUrl, {\n                credentials: 'include',\n                headers: {\n                    Authorization: `Bearer ${logintoken}`,\n                }\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n                this.setState(prev => (\n                    {\n                        hasForm: !prev,\n                        formData: data.form\n                    }));\n                // console.log(data.form);\n                // console.log('stringify',JSON.stringify(data.form));\n                console.log(data)\n\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            this.setState({ error: error.message });\n        }\n    }\n\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        // const {name} = this.props.authorData;\n        const { userLoggedIn, hasForm } = this.state;\n        console.log({ userLoggedIn, hasForm });\n        return (\n            <>\n                <HeroSection banner={FilledBanner}>\n                    Author's Area Dashboard\n            </HeroSection>\n                <StyledPage>\n                    <div className=\"authors\">\n\n                    <Typography className=\"authors-title\">Hi {'*USERNAME*'}</Typography>\n                    <Typography gutterBottom className=\"authors_sub-title\">Welcome to the Author's Area</Typography>\n                    <div className=\"authors_action-box\">\n                    <Button\n                        bcolor=\"#134381\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        padding=\"0.5rem 2rem\"\n                        style={{ margin: \".5rem 0\" }}\n                        fontSize=\"1.7rem\"\n                        >\n                        <CreateIcon style={{fontSize: '3rem', marginRight: '1rem'}}/>\n                        EDIT PROFILE\n                    </Button>\n                    <Link href=\"/authorsAreaInstructions\">\n                    <Button\n                        bcolor=\"#134381\"\n                        padding=\"0.5rem 2rem\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \".5rem\" }}\n                        fontSize=\"1.7rem\"\n                        >\n                        <AssignmentIcon style={{fontSize: '3rem', marginRight: '.5rem'}}/>\n                        INSTRUCTIONS & TEMPLATES\n                    </Button>\n                    </Link>\n                    <Button\n                        bcolor=\"#134381\"\n                        padding=\"0.5rem 2rem\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \".5rem 0\" }}\n                        fontSize=\"1.7rem\"\n                        onClick={logout}>\n                        <ExitToAppIcon style={{fontSize: '3rem', marginRight: '.5rem'}}/>\n                        logout\n                    </Button>\n                    </div>\n                    <Typography gutterBottom className=\"authors-title\" style={{fontSize: '3rem', borderTop: '2px solid #134381', borderBottom: '2px solid #134381' }}>Your Abstracts</Typography>\n                    <StyledBox>\n                    <Typography gutterBottom className=\"authors-it\" style={{fontSize: '2rem'}}>You haven't submitted any abstracts yet</Typography>\n                    </StyledBox>\n                    </div>\n                </StyledPage>\n            </>\n\n        )\n\n    }\n}\n\n// AuthorsAreaDash.getInitialProps = async ctx => {\n//     // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n//     const { logintoken } = cookies(ctx);\n//     const apiUrl = 'https://prelude.eurobrake.net/dashboard ';\n//     const redirectOnError = () =>\n//         process.browser\n//             ? Router.push('/authorsArea')\n//             : ctx.res.writeHead(301, { Location: '/authorsArea' })\n//     if (logintoken) {\n//         try {\n//             // console.log({logintoken}, 'getIProps right before fetch call')\n//             const response = await fetch(apiUrl, {\n//                 credentials: 'include',\n//                 cache: 'no-cache',\n//                 headers: {\n//                     Authorization: 'Bearer ' + logintoken,\n//                 }\n//             })\n//             const data = await response.json()\n//             // console.log('Authors response Data =>', data.status, data);\n//             if (data.status === 'success') {\n//                 console.log('res.ok', data)\n//                 return { authorData: data }\n//             }\n//             else {\n//                 console.log('not reading success')\n//                 // https://github.com/developit/unfetch#caveats\n//                 return redirectOnError()\n//             }\n//         } catch (error) {\n//             // Implementation or Network error\n//             console.log(error)\n//             return redirectOnError()\n//         }\n//     }\n\n// }\n\n// export default withAuthSync(AuthorsAreaDash)\nexport default AuthorsAreaDash\n\n\n// !\n// ?\n// *\n// todo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AACA;AAcA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAMA;AANA;AAAA;AAQA;AACA;AACA;AADA;AAFA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAEA;AACA;AAFA;AADA;AAMA;AACA;AACA;AADA;AAtBA;AAAA;AACA;AADA;AA0BA;AACA;AA3BA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA+BA;AACA;AAEA;AAAA;AAAA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AAAA;AACA;AADA;AA6DA;AACA;AACA;AACA;AACA;AAGA;AACA;AAnpIA;AAwIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAIA;AACA;AACA;;;;A","sourceRoot":""}