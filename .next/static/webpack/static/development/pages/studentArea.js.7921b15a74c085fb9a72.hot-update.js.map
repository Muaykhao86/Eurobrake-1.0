{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.7921b15a74c085fb9a72.hot-update.js","sources":["webpack:///./components/forms/Abstract.js"],"sourcesContent":["import React, { Component, useState, useRef, useEffect } from 'react'\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage, } from 'formik';\nimport { TextField, RadioGroup, Select, Checkbox, } from 'formik-material-ui';\nimport { AddCircle, RemoveCircle, ArrowUpwardRounded, ArrowDownwardRounded, } from '@material-ui/icons';\nimport cookie from 'js-cookie';\nimport  Typography  from '@material-ui/core/Typography';\nimport { Button } from '../Button';\nimport {titles, countries} from './FormSelects';\nimport {AbstractSchema} from './FormControl';\nimport {StyledForm} from './Formstyles';\nimport {SendForm} from './FormActions';\n\n\n\nexport const AbstractForm = (props) => {\n    const [presenter, setPresenter] = useState('');\n  \n    // if edit = true send back a preset form if not send a blank\n    // * above- dont think i need this now, can just check if there aere presets and if not just use epty schema\n    const { presets, csrf, apiUrl, paperId} = props;\n    const url = `https://prelude.eurobrake.net/authors/submit/${paperId}`;\n    console.log({ presets, apiUrl})\n    // ? If they choose to edit a abstarct paper we pass the paper code and il get its presets to fill in\n    return (\n        <Formik\n            initialValues={presets || emptyInitial}\n            \n            validationSchema={AbstractSchema}\n            enableReinitialize\n        >\n            {({ values, isSubmitting, isValidating, handleChange, setFieldValue }) => {\n          \n                const allNo = ({name}) => {\n                    if(process.browser){\n                    const radios = document.querySelectorAll('input[name*=\"is_presenting_author\"]');\n                    {/* console.log(name) */}\n                    radios.forEach(input => {\n                        input.name !== name && setFieldValue(input.name, input.value) &&\n                        console.log('gonna change...', input.name, 'cos it aint the same as...', name, ) \n                    })}\n                }\n\n\n                const onPresenterChange = (event) => {\n                    const { target } = event;\n                    const value = target.value;\n                    const name = target.name;\n                    {/* value === 'no' ? setPresenter('') : setPresenter(name); */}\n                    setFieldValue(name, value);\n                    allNo({ name });\n                    return console.log({ values })\n                }\n\n                const onSubmit = async () => {\n                  values.__csrf_token = csrf;\n                  {/* await SendForm({values, csrf, url}) */}\n                    console.log('sending', values, url)\n                    \n                    }\n                // ? NEED TO REDIRECT AFTER FORM SUBMISSION\n                // ? NEED TO DO VALIDATION\n                // ? sECONDARY AUTHORS => IF THERE ARE NONE WE NEED THE OPTION TO ADD IN A NEW ONE\n                return (\n                    <StyledForm>\n                        <Typography className=\"form-title\">Primary Author</Typography>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Title\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_title}\n                                style={{ color: '#134381' }}\n                                name=\"author_title\"\n                                component={Select}\n                            >\n                                {titles.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                First Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_firstname}\n                                style={{ color: '#134381' }}\n                                name=\"author_firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Last Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_lastname}\n                                style={{ color: '#134381' }}\n                                name=\"author_lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_email}\n                                style={{ color: '#134381' }}\n                                name=\"author_email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Job Title:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_jobtitle}\n                                style={{ color: '#134381' }}\n                                name=\"author_jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_company}\n                                style={{ color: '#134381' }}\n                                name=\"author_company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Address:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address1}\n                                style={{ color: '#134381' }}\n                                name=\"author_address1\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address2}\n                                style={{ color: '#134381' }}\n                                name=\"author_address2\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address3}\n                                style={{ color: '#134381' }}\n                                name=\"author_address3\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                City:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_city}\n                                style={{ color: '#134381' }}\n                                name=\"author_city\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                State/ County/ Province:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_scp}\n                                style={{ color: '#134381' }}\n                                name=\"author_scp\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Postal/ Zip code:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_postal}\n                                style={{ color: '#134381' }}\n                                name=\"author_postal\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Country\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_country}\n                                style={{ color: '#134381' }}\n                                name=\"author_country\"\n                                component={Select}\n                            >\n                                {countries.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Phone:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_phone}\n                                style={{ color: '#134381' }}\n                                name=\"author_phone\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Is this the presenting author?\n                        </label>\n                            <Field\n                                className=\"form-field\"\n                                value={values.is_presenting_author}\n                                style={{ color: '#134381' , alignSelf: 'flexStart', margin: '0'}}\n                                name=\"is_presenting_author\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: ' 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                        <input\n                                        checked={values.is_presenting_author === 'yes'}\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"yes\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    Yes\n                                </label>\n                                <label\n                                    style={{ margin: '1rem 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                        <input\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        checked={values.is_presenting_author !== 'yes'}\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"no\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    No\n                                </label>\n                            </Field>\n                        </div>\n                        {/* // ! new section added back in // NEED TO CONFIRM IF OK  */}\n                        <Typography className=\"form-title\">Your Abstract</Typography> \n                         <div className=\"form-field\">\n                             <label\n                                 htmlFor=\"label\"\n                                 className=\"form-label\">\n                                 Paper Title:\n                         </label>\n                             <Field\n                                 className=\"form-input\"\n                                 onClick={handleChange}\n                                 value={values.papertitle}\n                                 style={{ color: '#134381' }}\n                                 name=\"papertitle\"\n                                 component={TextField}\n                             />\n                         </div>\n                         <div className=\"form-field\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"form-label\">\n                                 Abstract:\n                         </label>\n                             <Field\n                                 className=\"form-input\"\n                                 onClick={handleChange}\n                                 value={values.abstract}\n                                 style={{ color: '#134381' , minHeight: '15rem'}}\n                                 name=\"abstract\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                        { values.abstract && <label style={{position: 'absolute', bottom: '-3rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{'Words' + ' ' + values.abstract.match(/[\\w\\d\\’\\'-]+/gi).length}</label>}\n\n                       \n                        <Typography className=\"form-title\">Secondary Author(s)</Typography>\n                            <FieldArray name={`secondary_authors`} >\n                                {({ swap, push, remove, setSubmitting }) => (\n                                    values.secondary_authors &&\n                                    values.secondary_authors.length > 0 ?\n                                    (\n                                        values.secondary_authors.map((author, index) => {\n                                            const {is_presenting_author} = author; \n                                            {/* const second = `values.secondary_authors[${index}].is_presenting_author`; */}\n                                           return (\n                                            <div key={index} className=\"form-secondary\">\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Title:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].title`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].title`}\n                                                        component={Select}\n                                                        >\n                                {titles.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        First Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].firstname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].firstname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Last Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].lastname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].lastname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Email:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].email`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].email`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Company:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].company`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].company`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Country:\n                                                    </label>\n                                                     <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].country`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].country`}\n                                                        component={Select}\n                                                    >\n                                {countries.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                                                    </Field>\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Is this the presenting Author?\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-field\"\n                                                        style={{ color: '#134381', alignSelf: 'flexStart', margin: '0' }}\n                                                        value={`secondary_authors[${index}].is_presenting_author`}\n                                                        component={RadioGroup}\n                                                        name={`secondary_authors[${index}].is_presenting_author`}\n                                                    >\n                                                        <label\n                                                            style={{ margin: '0' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"form-label\">\n                                                                <input\n                                                                checked={is_presenting_author === 'yes'}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"yes\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                                style={{ margin: '1rem' }}\n\n                                                            />\n                                                            Yes\n                                                        </label>\n                                                        <label\n                                                            style={{ margin: '1rem 0 ' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"form-label\">\n                                                                <input\n                                                                checked={is_presenting_author !== 'yes'}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"no\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                                style={{ margin: '1rem' }}\n\n                                                            />\n                                                            No\n                                                        </label>\n                                                    </Field>\n                                                </div>\n                                                <div className=\"form-field_action\">\n\n                                                <Button \n                                                padding=\"1rem\"\n                                                bcolor=\"transparent\"\n                                                abs=\"false\"\n                                                bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"add\" onClick={() => {\n                                                    push({\n                                                        title: '',\n                                                        firstname: '',\n                                                        lastname: '',\n                                                        email: '',\n                                                        company: '',\n                                                        country: '',\n                                                        is_presenting_author: ''\n                                                    });\n                                                }}>\n                                                    <AddCircle style={{ color: 'green'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                                <Button \n                                                padding='1rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"remove\" onClick={() => values.secondary_authors.length >= 1 && remove(index)}>\n                                                    <RemoveCircle style={{ color: 'red' , fontSize: '3rem', margin: '.5rem 0' }} />\n                                                </Button>\n                                                <Button \n                                                padding='1rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"upgrade\" onClick={() => values.secondary_authors.length > 1 && index !== 0 && swap(index, index - 1)}>\n                                                    <ArrowUpwardRounded style={{ color: 'red' , fontSize: '3rem', margin: '.5rem 0' }} />\n                                                </Button>\n                                                <Button \n                                                padding='1rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"downgrade\" onClick={() => values.secondary_authors.length > 1 && index !== values.secondary_authors.length - 1 && swap(index, index + 1)}>\n                                                    <ArrowDownwardRounded style={{ color: 'red'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                                </div>\n                                            </div>\n                                        )})\n                                    )\n                                    :\n                                    (\n                                                <Button \n                                                abs=\"false\"\n                                                bs=\"false\"\n                                                bcolor=\"transparent\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"add\" onClick={() => {\n                                                    push({\n                                                        title: '',\n                                                        firstname: '',\n                                                        lastname: '',\n                                                        email: '',\n                                                        company: '',\n                                                        country: '',\n                                                        is_presenting_author: ''\n                                                    });\n                                                }}>\n                                                    <AddCircle style={{ color: 'green'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                    ) \n                                    )}\n                            </FieldArray>\n                        <Button \n                                onClick={onSubmit}\n                                bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"1.7rem\">Submit</Button>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n                       \n\nconst presetEG = {\n    abstract: \"lorem ipsum\",\n    author_address1: \"10 Hamilton Road\",\n    author_address2: null,\n    author_address3: null,\n    author_city: \"Sidcup\",\n    author_company: \"Article Seven Limited\",\n    author_country: \"GB\",\n    author_email: \"andrew@article7.co.uk\",\n    author_firstname: \"Andrew\",\n    author_jobtitle: \"Director\",\n    author_lastname: \"Green\",\n    author_phone: \"+44 20 8305 1224\",\n    author_postal: \"DA15 7HB\",\n    author_scp: \"Kent\",\n    author_title: \"Mr.\",\n    consider_for_journal: \"no\",\n    is_presenting_author: \"yes\",\n    keywords: \"lorem, ipsum\",\n    papertitle: \"Duis aute irure dolor\",\n    presentationtype_full: \"programme\",\n    previouspapers: null,\n    secondary_authors: [\n        {\n            company: \"Article Seven\",\n            country: \"GB\",\n            email: \"ava@article7.co.uk\",\n            firstname: \"Ava\",\n            is_presenting_author: \"no\",\n            lastname: \"Green\",\n            ref: \"2399A3C8-1823-11EA-BBE7-BDC53B013130\",\n            title: null,\n        }],\n    submission_type: \"full\",\n    subtheme: [\"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\"],\n    theme: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n    __csrf_token: \"5d159fb224ed613dce89a64553f36f5eda1fa97c,2caaa318bb55c8c19d660a1e420d1c602dfc59f9,1576603105\"\n}\n\nconst emptyInitial = {\n    author_title: '',\n    author_firstname: '',\n    author_lastname: '',\n    author_email: '',\n    author_jobtitle: '',\n    author_company: '',\n    author_address1: '',\n    author_address2: '',\n    author_address3: '',\n    author_city: '',\n    author_scp: '',\n    author_postal: '',\n    author_country: '',\n    author_phone: '',\n    is_presenting_author: '',\n    submission_type: '',\n    presentationtype_full: '',\n    papertitle: '',\n    theme: '',\n    subtheme: [],\n    abstract: '',\n    keywords: '',\n    previouspapers: '',\n    consider_for_journal: '',\n    secondary_authors: [{\n        title: '',\n        firstname: '',\n        lastname: '',\n        email: '',\n        company: '',\n        country: '',\n        is_presenting_author: '',\n        // ref: ''\n    }],\n    __csrf_token: '',\n\n}\n\n// ! NOT NEEDED ANYMORE !!!! \n//  <h1>Your Abstract</h1>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Submission Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.submission_type}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"submission_type\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a full technical paper submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"full\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make an oral-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"oral\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a poster-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n\n//                             </Field>\n//                         </div>\n//                         {values.submission_type === 'full' && <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Presentation Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.presentationtype_full}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"presentationtype_full\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an oral presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"programme\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an poster presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n//                             </Field>\n//                         </div>}\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Paper Title:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.papertitle}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"papertitle\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Which topic does your paper belong to?\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.theme}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"theme\"\n//                                 component={RadioGroup}\n//                             >\n//                                 {themes.map(theme =>\n//                                     <label\n//                                         style={{ margin: '1rem' }}\n//                                         htmlFor=\"label\"\n//                                         className=\"form-label\">\n//                                         {theme.label}\n//                                         <Field\n//                                             type=\"radio\"\n//                                             name=\"theme\"\n//                                             value={theme.value}\n//                                         />\n//                                     </label>)}\n//                             </Field>\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Please choose up to three sub-topics for your paper:\n//                         </label>\n//                             {\n//                                 values.theme === 'BC50E220-9412-11E8-85AF-D97B4D95EBB1' ?\n//                                     subTheme1.map((sub, i) => (\n//                                         <label\n//                                             htmlFor=\"label\"\n//                                             className=\"form-label\">\n//                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                             {sub.label}\n//                                         </label>\n//                                     )\n//                                     )\n//                                     :\n//                                     values.theme === '48C9561C-7865-11E7-AA75-C89000D85D50' ?\n//                                         subTheme2.map((sub, i) => (\n//                                             <label\n//                                                 htmlFor=\"label\"\n//                                                 className=\"form-label\">\n//                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                 {sub.label}\n//                                             </label>\n//                                         )\n//                                         )\n//                                         :\n//                                         values.theme === '5D49D9C2-7865-11E7-9112-887F12D54550' ?\n//                                             subTheme3.map((sub, i) => (\n//                                                 <label\n//                                                     htmlFor=\"label\"\n//                                                     className=\"form-label\">\n//                                                     <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                     {sub.label}\n//                                                 </label>\n//                                             )\n//                                             )\n//                                             :\n//                                             values.theme === '7C15061A-7865-11E7-8178-84D2A73AF9BC' ?\n//                                                 subTheme4.map((sub, i) => (\n//                                                     <label\n//                                                         htmlFor=\"label\"\n//                                                         className=\"form-label\">\n//                                                         <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                         {sub.label}\n//                                                     </label>\n//                                                 )\n//                                                 )\n//                                                 :\n//                                                 values.theme === '925B5F3C-7865-11E7-8659-8C8422753A7C' ?\n//                                                     subTheme5.map((sub, i) => (\n//                                                         <label\n//                                                             htmlFor=\"label\"\n//                                                             className=\"form-label\">\n//                                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                             {sub.label}\n//                                                         </label>\n//                                                     )\n//                                                     )\n//                                                     :\n//                                                     values.theme === 'B6F53F20-7865-11E7-A9B1-FC3D434D4D51' ?\n//                                                         subTheme6.map((sub, i) => (\n//                                                             <label\n//                                                                 htmlFor=\"label\"\n//                                                                 className=\"form-label\">\n//                                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                                 {sub.label}\n//                                                             </label>\n//                                                         )\n//                                                         )\n//                                                         : null\n//                             }\n//                             <ErrorMessage component={Typography} name=\"subtheme\" style={{ color: 'red', fontSize: '1.5rem' }} />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Abstract:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.abstract}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"abstract\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Keywords:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.keywords}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"keywords\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Previous Papers:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.previouspapers}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"previouspapers\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.consider_for_journal}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"consider_for_journal\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n\n\n\n// * DEFINITION \n\n// form: Array(26)\n// 0:\n// title: \"Primary Author\"\n// type: \"heading\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide your first name.\"\n// name: \"author_firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide your second (family) name.\"\n// name: \"author_lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide your email address.\"\n// name: \"author_email\"\n// label: \"Email address:\"\n// type: \"email\"\n// divider: 1\n// __proto__: Object\n// 5:\n// required: \"Please provide your job title.\"\n// name: \"author_jobtitle\"\n// label: \"Job title:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 6:\n// required: \"Please provide your company or organisation.\"\n// name: \"author_company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 7:\n// required: \"Please provide your street address.\"\n// name: \"author_address1\"\n// label: \"Address:\"\n// type: \"text\"\n// __proto__: Object\n// 8:\n// name: \"author_address2\"\n// type: \"text\"\n// __proto__: Object\n// 9:\n// name: \"author_address3\"\n// type: \"text\"\n// __proto__: Object\n// 10:\n// required: \"Please provide your city.\"\n// name: \"author_city\"\n// label: \"City:\"\n// type: \"text\"\n// __proto__: Object\n// 11:\n// name: \"author_scp\"\n// label: \"State/county/province:\"\n// type: \"text\"\n// __proto__: Object\n// 12:\n// name: \"author_postal\"\n// label: \"Postal/zip code:\"\n// type: \"text\"\n// __proto__: Object\n// 13:\n// required: \"Please provide your country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 14:\n// required: \"Please provide your telephone number, including international code.\"\n// notes: \"Please include the international code.\"\n// name: \"author_phone\"\n// label: \"Telephone:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 15:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// 16:\n// title: \"Your Abstract\"\n// type: \"heading\"\n// __proto__: Object\n// 17:\n// name: \"papertitle\"\n// required: \"Please provide the title of your proposed submission.\"\n// notes: \"Please use Title Case. DO NOT use block capitals.\"\n// type: \"textarea\"\n// label: \"Title of your proposed submission:\"\n// divider: 0\n// __proto__: Object\n// 18:\n// html: \"↵\t\t\t\t\t<p class=\"f_intro\"><strong>Please type or paste the text of your abstract below (maximum 750 words).</strong></p> ↵\t \t\t\t\t<p class=\"f_intro\">Your abstract should clearly set out the main scientific, technical, economic and / or practical points to be addressed in your paper. In particular your abstract should indicate those aspects of the work which are new, innovative and unique.</p>↵\t\t\t\t\"\n// type: \"html\"\n// divider: 1\n// __proto__: Object\n// 19:\n// required: \"Please provide the abstract for your submission.\"\n// name: \"abstract\"\n// label: \"Your abstract:\"\n// type: \"textarea\"\n// __proto__: Object\n// 20:\n// name: \"keywords\"\n// required: \"Please provide some keywords for your abstract.\"\n// notes: \"Please separate keywords with commas.  Please do not use block capitals.\"\n// type: \"textarea\"\n// label: \"Please enter around 5 keywords that describe the main focus of your abstract:\"\n// divider: 1\n// __proto__: Object\n// 21:\n// name: \"previouspapers\"\n// label: \"Please give details of any previous papers you have published on this subject (if applicable)\"\n// type: \"textarea\"\n// divider: 1\n// __proto__: Object\n// 22:\n// options: (2) [{…}, {…}]\n// name: \"consider_for_journal\"\n// default: \"no\"\n// notes: \"Please note that your paper may require additional revisions in order to meet the qualifying criteria.\"\n// type: \"radio\"\n// label: \"Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?\"\n// divider: 1\n// __proto__: Object\n// 23:\n// title: \"Secondary Author(s)\"\n// type: \"heading\"\n// __proto__: Object\n// 24:\n// fields: Array(8)\n// 0:\n// name: \"ref\"\n// type: \"hidden\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide each secondary author's first name.\"\n// name: \"firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide each secondary author's last name.\"\n// name: \"lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide each secondary author's email address.\"\n// name: \"email\"\n// label: \"Email address:\"\n// type: \"email\"\n// __proto__: Object\n// 5:\n// required: \"Please provide each secondary author's company or organisation.\"\n// name: \"company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 6:\n// required: \"Please provide each secondary author's country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 7:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// length: 8\n// __proto__: Array(0)\n// name: \"secondary_authors\"\n// type: \"repeater\"\n// __proto__: Object\n// 25:\n// label: \"Submit changes\"\n// type: \"submit\"\n// divider: 1\n// __proto__: Object\n// length: 26\n// __proto__: Array(0)\n// expects: \"json\"\n// logintoken: \"w070P7OsRIoxRr6KfcafJl\"\n// __proto__: Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAN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":""}