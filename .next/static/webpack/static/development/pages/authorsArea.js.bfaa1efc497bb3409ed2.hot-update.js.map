{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.bfaa1efc497bb3409ed2.hot-update.js","sources":["webpack:///./components/forms/FormActions.js","webpack:///./components/forms/LoginForm.js"],"sourcesContent":["import cookie from 'js-cookie';\n\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function SendFile({ csrf, file }) {\n    const formData = new FormData();\n    const { logintoken } = cookie.get();\n    formData.append('__csrf_token', csrf);\n    formData.append('filename', file);\n    console.log({ logintoken, csrf, file })\n    if (logintoken && csrf && file) {\n        try {\n            const apiUrl = 'https://prelude.eurobrake.net/upload';\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            // this.setState({ error: error.message });\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, formData, url }) {\n    const form = JSON.stringify(formData);\n    const { logintoken } = cookie.get();\n    if (logintoken && csrf && formData) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/login' ){\n          onSubmit = async (e) => {\n        e.preventDefault()\n        const { username, password, error } = this.state;\n        // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n        // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n        const formData = {\n            username: username,\n            password: password,\n        }\n        try {\n            const response = await fetch('https://prelude.eurobrake.net/login', {\n                method: 'POST', \n                credentials: 'include',\n                body: JSON.stringify(formData),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n            \n       \n\n            if (data2.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            this.setState({ error: error.message });\n         }\n        }\n    }\n    return\n}\n","import React, { Component } from 'react'\nimport {StyledForm} from './Formstyles';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../../utils/auth';\nimport {Button} from '../Button';\nimport {SendForm} from './FormActions';\n\n\nexport const LoginForm = () => {\n    \n \n   \n        return (\n           \n                   <StyledForm className=\"login_form\">\n                        <div className=\"login_form-field\">\n                            <label \n                            htmlFor=\"label\" \n                            className=\"login_form-label\">\n                                Email:\n                            </label>\n                            <TextField\n                            style={{color: '#134381'}}\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.saveToState} \n                            value={this.state.username} />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label \n                            className=\"login_form-label\"\n                             htmlFor=\"label\">\n                                Password:\n                            </label>\n                            <TextField\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState} \n                            value={this.state.password} />\n                        </div>\n                        <Button \n                        onClick={() => SendForm({url: 'https://prelude.eurobrake.net/login'})} \n                        value=\"Submit\" \n                        bcolor=\"#134381\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \"3rem 0\"}}\n                        fs=\"1.8rem\"\n                        padding=\".5rem 6rem\"\n                        >Login</Button>\n                        <a className=\"login_form-link\" href=\"\">Forgotten your password?</a>\n                   </StyledForm>\n          \n             \n        )\n    }\n\n\n"],"mappings":"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","sourceRoot":""}