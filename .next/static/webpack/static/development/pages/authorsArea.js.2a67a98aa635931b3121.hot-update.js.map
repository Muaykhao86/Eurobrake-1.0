{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.2a67a98aa635931b3121.hot-update.js","sources":["webpack:///./components/Forms.js"],"sourcesContent":["import React, { Component, useState, useRef, useEffect } from 'react'\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage, } from 'formik';\nimport { TextField, RadioGroup, Select, Checkbox } from 'formik-material-ui';\nimport { AddCircle, RemoveCircle, ArrowUpwardRounded, ArrowDownwardRounded, } from '@material-ui/icons';\nimport * as Yup from 'yup';\nimport cookie from 'js-cookie';\nimport styled from 'styled-components';\nimport { Button } from './Button'\nimport { Typography } from '@material-ui/core';\n\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data.__csrf_token;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function SendFile({ csrf, file }) {\n    const formData = new FormData();\n    const { logintoken } = cookie.get();\n    formData.append('__csrf_token', csrf);\n    formData.append('filename', file);\n    console.log({ logintoken, csrf, file })\n    if (logintoken && csrf && file) {\n        try {\n            const apiUrl = 'https://prelude.eurobrake.net/upload';\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            // this.setState({ error: error.message });\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, formData, url }) {\n    const form = JSON.stringify(formData);\n    const { logintoken } = cookie.get();\n    if (logintoken && csrf && formData) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    return\n}\n\n\nconst AbstractSchema = Yup.object().shape({\n    author_firstname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_lastname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_email: Yup.string()\n        .email()\n        .required('Required'),\n    author_jobtitle: Yup.string()\n        .required('Required'),\n    author_company: Yup.string()\n        .required('Required'),\n    author_address1: Yup.string()\n        .required('Required'),\n    author_address2: Yup.string()\n        .required('Required'),\n    author_address3: Yup.string()\n        .required('Required'),\n    author_city: Yup.string()\n        .required('Required'),\n    author_scp: Yup.string()\n        .required('Required'),\n    author_postal: Yup.string()\n        .required('Required'),\n    author_country: Yup.string()\n        .required('Required'),\n    author_phone: Yup.string()\n        .required('Required'),\n    is_presenting_author: Yup.string()\n        .required('Required'),\n    submission_type: Yup.string()\n        .required('Required'),\n    presentationtype_full: Yup.string(),\n    papertitle: Yup.string()\n        .required('Required'),\n    theme: Yup.string()\n        .required('Required'),\n    subtheme: Yup.array().max(3, 'Please select max of three subthemes!')\n        .required('Required'),\n    abstract: Yup.string()\n        .required('Required'),\n    keywords: Yup.string()\n        .required('Required'),\n    previouspapers: Yup.string()\n        .required('Required'),\n    consider_for_journal: Yup.string()\n        .required('Required'),\n    secondary_authors: Yup.array()\n        .of(Yup.object().shape({\n            title: Yup.string()\n                .required('Required'),\n            firstname: Yup.string()\n                .required('Required'),\n            lastname: Yup.string()\n                .required('Required'),\n            email: Yup.string()\n                .email()\n                .required('Required'),\n            company: Yup.string()\n                .required('Required'),\n            country: Yup.string()\n                .required('Required'),\n            is_presenting_author: Yup.string()\n                .required('Required'),\n        }))\n});\n\nconst StyledForm = styled(Form)`\n        display: flex;\n        flex-flow: column;\n        justify-content: space-between;\n        align-items: center;\n        min-width: 100%;\n\n    \n\n    .MuiInput-underline:after {\n        color: ${props => props.theme.primary};\n    }\n\n    .MuiFormHelperText-root {\n        font-size: 1.5rem;\n    }\n\n    .MuiInputBase-root {\n        font-family: ${props => props.theme.MPBoldIt};\n            font-size: 2rem;\n            color: ${props => props.theme.primary};\n    }\n    input:-internal-autofill-selected {\n\n    }\n        .login_form{\n\n        &-field{\n            margin: 1rem 0;\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-end;\n        }\n        &-label{\n            font-family: ${props => props.theme.MPLight};\n            font-size: 2.6rem;\n            color: ${props => props.theme.primary};\n        }\n        &-input{\n            min-width: 40rem;\n            font-family: ${props => props.theme.MPBoldIt};\n            font-size: 2rem;\n            color: ${props => props.theme.primary};\n        }\n        &-link{\n            font-family: ${props => props.theme.MPBoldIt};\n            font-size: 1.7rem;\n            color: ${props => props.theme.primary};\n        }\n        &-radio{\n            text-align: end;\n        }\n    \n        }\n    `;\n// !    FUNCTIONS\n// MAXTHREE CHECKBOX\n// ? Handled by yup atm => doesnt disable but brings msg and stops submit\n// ONLYONE PRESENTING\n// ? ONLY GONE AND DONE IT N I?? \n\n\nexport const AbstractForm = () => {\n    const [presenter, setPresenter] = useState('');\n    useEffect(() => {\n\n        console.log('presenter is changing')\n\n    }, [presenter])\n\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            onSubmit={(values, actions) => {\n                setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    actions.setSubmitting(false);\n                }, 1000)\n            }}\n            validationSchema={AbstractSchema}\n            enableReinitialize\n        >\n            {({ values, isSubmitting, isValidating, handleChange, setFieldValue }) => {\n\n                const allNo = ({name}) => {\n                    if(process.browser){\n                    const radios = document.querySelectorAll('input[name*=\"is_presenting_author\"]');\n                    {/* console.log(name) */}\n                    radios.forEach(input => {\n                        input.name !== name && setFieldValue(input.name, input.value) &&\n                        console.log('gonna change...', input.name, 'cos it aint the same as...', name, ) \n                    })}\n                }\n\n\n                const onPresenterChange = (event) => {\n                    const { target } = event;\n                    const value = target.value;\n                    const name = target.name;\n                    value === 'no' ? setPresenter('') : setPresenter(name);\n                    setFieldValue(name, value);\n                    allNo({ name });\n                    return console.log({ values })\n                }\n\n\n                return (\n                    <StyledForm>\n                        <h1>Primary Author</h1>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Title\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_title}\n                                style={{ color: '#134381' }}\n                                name=\"author_title\"\n                                component={Select}\n                            >\n                                {titles.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                First Name:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_firstname}\n                                style={{ color: '#134381' }}\n                                name=\"author_firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Last Name:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_lastname}\n                                style={{ color: '#134381' }}\n                                name=\"author_lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_email}\n                                style={{ color: '#134381' }}\n                                name=\"author_email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Job Title:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_jobtitle}\n                                style={{ color: '#134381' }}\n                                name=\"author_jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_company}\n                                style={{ color: '#134381' }}\n                                name=\"author_company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Address:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_address1}\n                                style={{ color: '#134381' }}\n                                name=\"author_address1\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n\n                            </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_address2}\n                                style={{ color: '#134381' }}\n                                name=\"author_address2\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n\n                            </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_address3}\n                                style={{ color: '#134381' }}\n                                name=\"author_address3\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                City:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_city}\n                                style={{ color: '#134381' }}\n                                name=\"author_city\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                State/county/province:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_scp}\n                                style={{ color: '#134381' }}\n                                name=\"author_scp\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Postal/Zip code:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_postal}\n                                style={{ color: '#134381' }}\n                                name=\"author_postal\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Country\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_country}\n                                style={{ color: '#134381' }}\n                                name=\"author_country\"\n                                component={Select}\n                            >\n                                {countries.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Phone:\n                        </label>\n                            <Field\n                                className=\"login_form-input\"\n                                onClick={handleChange}\n                                value={values.author_phone}\n                                style={{ color: '#134381' }}\n                                name=\"author_phone\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"login_form-label\">\n                                Is this the presenting author?\n                        </label>\n                            <Field\n                                className=\"login_form-radio\"\n                                value={values.is_presenting_author}\n                                style={{ color: '#134381' }}\n                                name=\"is_presenting_author\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"login_form-label\">\n                                    Yes\n                                        <input\n                                        checked={presenter === 'is_presenting_author'}\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"login_form-label\">\n                                    No\n                                        <input\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        checked={presenter !== 'is_presenting_author'}\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <h1>Secondary Author(s)</h1>\n                        <div className=\"\">\n                            <FieldArray name={`secondary_authors`} >\n                                {({ swap, push, remove, setSubmitting }) => (\n                                    values.secondary_authors &&\n                                    values.secondary_authors.length > 0 &&\n                                    (\n                                        values.secondary_authors.map((authors, index) => (\n                                            <div key={index}>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Title:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].title`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].title`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        First Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].firstname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].firstname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Last Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].lastname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].lastname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Email:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].email`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].email`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Company:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].company`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].company`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Country:\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].country`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].country`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"login_form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"login_form-label\">\n                                                        Is this the presenting Author?\n                                                    </label>\n                                                    <Field\n                                                        className=\"login_form-radio\"\n                                                        style={{ color: '#134381' }}\n                                                        value={`secondary_authors[${index}].is_presenting_author`}\n                                                        component={RadioGroup}\n                                                        name={`secondary_authors[${index}].is_presenting_author`}\n                                                    >\n                                                        <label\n                                                            style={{ margin: '1rem' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"login_form-label\">\n                                                            Yes\n                                                                <input\n                                                                checked={presenter == `secondary_authors[${index}].is_presenting_author`}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"yes\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                            />\n                                                        </label>\n                                                        <label\n                                                            style={{ margin: '1rem' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"login_form-label\">\n                                                            No\n                                                                <input\n                                                                checked={presenter != `secondary_authors[${index}].is_presenting_author`}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"no\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                            />\n                                                        </label>\n                                                    </Field>\n                                                </div>\n                                                <Button type=\"add\" onClick={() => {\n                                                    push({\n                                                        title: '',\n                                                        firstname: '',\n                                                        lastname: '',\n                                                        email: '',\n                                                        company: '',\n                                                        country: '',\n                                                        is_presenting_author: ''\n                                                    });\n                                                }}>\n                                                    <AddCircle style={{ color: 'green' }} />\n                                                </Button>\n                                                <Button type=\"remove\" onClick={() => values.secondary_authors.length > 1 && remove(index)}>\n                                                    <RemoveCircle style={{ color: 'red' }} />\n                                                </Button>\n                                                <Button type=\"upgrade\" onClick={() => values.secondary_authors.length > 1 && index !== 0 && swap(index, index - 1)}>\n                                                    <ArrowUpwardRounded style={{ color: 'red' }} />\n                                                </Button>\n                                                <Button type=\"downgrade\" onClick={() => values.secondary_authors.length > 1 && index !== values.secondary_authors.length - 1 && swap(index, index + 1)}>\n                                                    <ArrowDownwardRounded style={{ color: 'red' }} />\n                                                </Button>\n                                            </div>\n                                        ))\n\n\n                                    ))}\n                            </FieldArray>\n                        </div>\n                        <Button type=\"submit\" \n                         bcolor=\"#134381\"\n                                padding=\"0.5rem 2rem\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"1.7rem\">Submit</Button>\n                        {console.log('main', values.is_presenting_author, 'second', values.secondary_authors)}\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n// ! NOT NEEDED ANYMORE !!!! £$!*er\n//  <h1>Your Abstract</h1>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Submission Type:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.submission_type}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"submission_type\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make a full technical paper submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"full\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make an oral-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"oral\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make a poster-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n\n//                             </Field>\n//                         </div>\n//                         {values.submission_type === 'full' && <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Presentation Type:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.presentationtype_full}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"presentationtype_full\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     My full paper submission will be accompanied by an oral presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"programme\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     My full paper submission will be accompanied by an poster presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n//                             </Field>\n//                         </div>}\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Paper Title:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.papertitle}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"papertitle\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Which topic does your paper belong to?\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.theme}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"theme\"\n//                                 component={RadioGroup}\n//                             >\n//                                 {themes.map(theme =>\n//                                     <label\n//                                         style={{ margin: '1rem' }}\n//                                         htmlFor=\"label\"\n//                                         className=\"login_form-label\">\n//                                         {theme.label}\n//                                         <Field\n//                                             type=\"radio\"\n//                                             name=\"theme\"\n//                                             value={theme.value}\n//                                         />\n//                                     </label>)}\n//                             </Field>\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Please choose up to three sub-topics for your paper:\n//                         </label>\n//                             {\n//                                 values.theme === 'BC50E220-9412-11E8-85AF-D97B4D95EBB1' ?\n//                                     subTheme1.map((sub, i) => (\n//                                         <label\n//                                             htmlFor=\"label\"\n//                                             className=\"login_form-label\">\n//                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                             {sub.label}\n//                                         </label>\n//                                     )\n//                                     )\n//                                     :\n//                                     values.theme === '48C9561C-7865-11E7-AA75-C89000D85D50' ?\n//                                         subTheme2.map((sub, i) => (\n//                                             <label\n//                                                 htmlFor=\"label\"\n//                                                 className=\"login_form-label\">\n//                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                 {sub.label}\n//                                             </label>\n//                                         )\n//                                         )\n//                                         :\n//                                         values.theme === '5D49D9C2-7865-11E7-9112-887F12D54550' ?\n//                                             subTheme3.map((sub, i) => (\n//                                                 <label\n//                                                     htmlFor=\"label\"\n//                                                     className=\"login_form-label\">\n//                                                     <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                     {sub.label}\n//                                                 </label>\n//                                             )\n//                                             )\n//                                             :\n//                                             values.theme === '7C15061A-7865-11E7-8178-84D2A73AF9BC' ?\n//                                                 subTheme4.map((sub, i) => (\n//                                                     <label\n//                                                         htmlFor=\"label\"\n//                                                         className=\"login_form-label\">\n//                                                         <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                         {sub.label}\n//                                                     </label>\n//                                                 )\n//                                                 )\n//                                                 :\n//                                                 values.theme === '925B5F3C-7865-11E7-8659-8C8422753A7C' ?\n//                                                     subTheme5.map((sub, i) => (\n//                                                         <label\n//                                                             htmlFor=\"label\"\n//                                                             className=\"login_form-label\">\n//                                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                             {sub.label}\n//                                                         </label>\n//                                                     )\n//                                                     )\n//                                                     :\n//                                                     values.theme === 'B6F53F20-7865-11E7-A9B1-FC3D434D4D51' ?\n//                                                         subTheme6.map((sub, i) => (\n//                                                             <label\n//                                                                 htmlFor=\"label\"\n//                                                                 className=\"login_form-label\">\n//                                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                                 {sub.label}\n//                                                             </label>\n//                                                         )\n//                                                         )\n//                                                         : null\n//                             }\n//                             <ErrorMessage component={Typography} name=\"subtheme\" style={{ color: 'red', fontSize: '1.5rem' }} />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Abstract:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.abstract}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"abstract\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Keywords:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.keywords}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"keywords\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Previous Papers:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.previouspapers}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"previouspapers\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.consider_for_journal}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"consider_for_journal\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n\nconst titles = [\n    { value: \"\", label: \"—\" },\n    { value: \"Mr.\", label: \"Mr.\" },\n    { value: \"Ms.\", label: \"Ms.\" },\n    { value: \"Mrs.\", label: \"Mrs.\" },\n    { value: \"Dr.\", label: \"Dr.\" },\n    { value: \"Dr.-Ing.\", label: \"Dr.-Ing.\" },\n    { value: \"Dr. Eng.\", label: \"Dr. Eng.\" },\n    { value: \"Prof.\", label: \"Prof.\" },\n    { value: \"Prof. Dr.\", label: \"Prof. Dr.\" },\n    { value: \"Prof. Dr.-Ing.\", label: \"Prof. Dr.-Ing.\" },\n    { value: \"Ing.\", label: \"Ing.\" },\n    { value: \"Dipl.-Ing.\", label: \"Dipl.-Ing.\" },\n    { value: \"Ir.\", label: \"Ir.\" }\n];\n\nconst countries = [\n    { value: \"\", label: \"—\" },\n    { value: \"DZ\", label: \"Algeria\" },\n    { value: \"AR\", label: \"Argentina\" },\n    { value: \"AU\", label: \"Australia\" },\n    { value: \"AT\", label: \"Austria\" },\n    { value: \"BD\", label: \"Bangladesh\" },\n    { value: \"BY\", label: \"Belarus\" },\n    { value: \"BE\", label: \"Belgium\" },\n    { value: \"BA\", label: \"Bosnia and Herzegovina\" },\n    { value: \"BR\", label: \"Brazil\" },\n    { value: \"BG\", label: \"Bulgaria\" },\n    { value: \"CA\", label: \"Canada\" },\n    { value: \"CL\", label: \"Chile\" },\n    { value: \"CN\", label: \"China\" },\n    { value: \"HK\", label: \"China - Hong Kong\" },\n    { value: \"CO\", label: \"Colombia\" },\n    { value: \"HR\", label: \"Croatia\" },\n    { value: \"CZ\", label: \"Czech Republic\" },\n    { value: \"DK\", label: \"Denmark\" },\n    { value: \"EC\", label: \"Ecuador\" },\n    { value: \"EG\", label: \"Egypt\" },\n    { value: \"EE\", label: \"Estonia\" },\n    { value: \"FI\", label: \"Finland\" },\n    { value: \"MK\", label: \"Fmr. Yugoslav Republic of Macedonia\" },\n    { value: \"FR\", label: \"France\" },\n    { value: \"GE\", label: \"Georgia\" },\n    { value: \"DE\", label: \"Germany\" },\n    { value: \"GR\", label: \"Greece\" },\n    { value: \"HU\", label: \"Hungary\" },\n    { value: \"IS\", label: \"Iceland\" },\n    { value: \"IN\", label: \"India\" },\n    { value: \"ID\", label: \"Indonesia\" },\n    { value: \"IR\", label: \"Iran (Islamic Republic of)\" },\n    { value: \"IQ\", label: \"Iraq\" },\n    { value: \"IE\", label: \"Ireland\" },\n    { value: \"IL\", label: \"Israel\" },\n    { value: \"IT\", label: \"Italy\" },\n    { value: \"JP\", label: \"Japan\" },\n    { value: \"KG\", label: \"Kyrgyzstan\" },\n    { value: \"LV\", label: \"Latvia\" },\n    { value: \"LT\", label: \"Lithuania\" },\n    { value: \"LU\", label: \"Luxembourg\" },\n    { value: \"MY\", label: \"Malaysia\" },\n    { value: \"MT\", label: \"Malta\" },\n    { value: \"MX\", label: \"Mexico\" },\n    { value: \"MN\", label: \"Mongolia\" },\n    { value: \"MA\", label: \"Morocco\" },\n    { value: \"NP\", label: \"Nepal\" },\n    { value: \"NL\", label: \"Netherlands\" },\n    { value: \"NZ\", label: \"New Zealand\" },\n    { value: \"NG\", label: \"Nigeria\" },\n    { value: \"NO\", label: \"Norway\" },\n    { value: \"PK\", label: \"Pakistan\" },\n    { value: \"PE\", label: \"Peru\" },\n    { value: \"PH\", label: \"Philippines\" },\n    { value: \"PL\", label: \"Poland\" },\n    { value: \"PT\", label: \"Portugal\" },\n    { value: \"KR\", label: \"Republic of Korea\" },\n    { value: \"PA\", label: \"Republic of Panama\" },\n    { value: \"RO\", label: \"Romania\" },\n    { value: \"RU\", label: \"Russian Federation\" },\n    { value: \"SA\", label: \"Saudi Arabia\" },\n    { value: \"RS\", label: \"Serbia\" },\n    { value: \"SG\", label: \"Singapore\" },\n    { value: \"SK\", label: \"Slovakia\" },\n    { value: \"SI\", label: \"Slovenia\" },\n    { value: \"ZA\", label: \"South Africa\" },\n    { value: \"ES\", label: \"Spain\" },\n    { value: \"LK\", label: \"Sri Lanka\" },\n    { value: \"SE\", label: \"Sweden\" },\n    { value: \"CH\", label: \"Switzerland\" },\n    { value: \"TW\", label: \"Taiwan\" },\n    { value: \"TH\", label: \"Thailand\" },\n    { value: \"TN\", label: \"Tunisia\" },\n    { value: \"TR\", label: \"Turkey\" },\n    { value: \"TM\", label: \"Turkmenistan\" },\n    { value: \"UA\", label: \"Ukraine\" },\n    { value: \"AE\", label: \"United Arab Emirates\" },\n    { value: \"GB\", label: \"United Kingdom\" },\n    { value: \"US\", label: \"United States\" },\n    { value: \"UZ\", label: \"Uzbekistan\" },\n    { value: \"VE\", label: \"Venezuela\" },\n    { value: \"VN\", label: \"Viet Nam\" },\n];\n\nconst themes = [\n    { value: \"BC50E220-9412-11E8-85AF-D97B4D95EBB1\", label: \"Intelligent Braking and Braking Control\" },\n    { value: \"48C9561C-7865-11E7-AA75-C89000D85D50\", label: \"Environmentally-friendly Braking Systems\" },\n    { value: \"5D49D9C2-7865-11E7-9112-887F12D54550\", label: \"Fundamentals of Brakes\" },\n    { value: \"7C15061A-7865-11E7-8178-84D2A73AF9BC\", label: \"Manufacturing and Markets\" },\n    { value: \"925B5F3C-7865-11E7-8659-8C8422753A7C\", label: \"Materials and Design\" },\n    { value: \"B6F53F20-7865-11E7-A9B1-FC3D434D4D51\", label: \"Simulation, Testing, Innovative Development Processes\" },\n];\n\nconst subThemes = [\n    { value: \"06CE3888-9414-11E8-AE34-9BA1BE5E3471\", label: \"Brake Systems for Highly Automated Road and Rail Vehicles\" },\n    { value: \"0DD80384-9414-11E8-A380-9320CF01B393\", label: \"Braking for Electric and Hybrid Vehicles\" },\n    { value: \"1BFDEE9C-9414-11E8-A7E0-A07B6C067014\", label: \"Innovative Parking Brake Systems\" },\n    { value: \"1C01065E-9414-11E8-A93F-A546BD18FAA0\", label: \"Innovative Brake Actuators and System Controls (Software and Function Development)\" },\n    { value: \"1C04A9BC-9414-11E8-B1D2-8516A557BE68\", label: \"Safety relevant braking functions\" },\n    { value: \"1C082150-9414-11E8-AF92-B5E7B5B9337D\", label: \"Railway Traffic Management Systems\" },\n    { value: \"2604091C-9414-11E8-A078-CC3BFBB45A3C\", label: \"Sustainability in Brake Systems\" },\n    { value: \"26093DE2-9414-11E8-B272-A7C4EBADAE4A\", label: \"Brake Energy Management and Recuperation\" },\n    { value: \"260E56E2-9414-11E8-B9F8-E613015D1408\", label: \"Brake Noise and Drag Reduction\" },\n    { value: \"26126F98-9414-11E8-BBB3-D3A884B3E943\", label: \"Lightweight Brake Components\" },\n    { value: \"26176674-9414-11E8-8A0E-C108E25B228C\", label: \"Brake Emission findings and available countermeasures\" },\n    { value: \"2FE079A2-9414-11E8-AA53-C7435EE03528\", label: \"Friction Interface Dynamics\" },\n    { value: \"2FE4D18C-9414-11E8-B418-87A1883F2046\", label: \"Friction Induced Vibration\" },\n    { value: \"2FE958F6-9414-11E8-A0E5-9911B184DEC0\", label: \"Thermal Effects\" },\n    { value: \"2FECE066-9414-11E8-A9FA-A830F1ADACA6\", label: \"Wear and Emissions\" },\n    { value: \"36935E7C-9414-11E8-830E-8F6C9F83D892\", label: \"Manufacturing, Quality Control and Warranty Claims\" },\n    { value: \"369B7C92-9414-11E8-8D9F-E0E2215D2248\", label: \"Global Standardisation\" },\n    { value: \"36A067CA-9414-11E8-8D58-F172FE98C949\", label: \"Aftermarket, Global Sourcing\" },\n    { value: \"36A436C0-9414-11E8-AAB2-F98B8437A38B\", label: \"Governmental Regulation and Homologation of Brake Systems\" },\n    { value: \"3DAE1288-9414-11E8-85DC-B1A03E97F386\", label: \"Innovative Friction Materials and Components\" },\n    { value: \"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\", label: \"Disc, Drum, Wheel Materials, Coatings and Design\" },\n    { value: \"E65121F6-B77B-11E9-A3BF-935F1E4F73DC\", label: \"Virtual Development Methods of Braking Hardware and Software \" },\n    { value: \"E6542694-B77B-11E9-BAAD-C06218C5F3E9\", label: \"Friction Material and Friction Couple Characterisation\" },\n    { value: \"E6572D62-B77B-11E9-AEEC-DEEBD990D172\", label: \"Simulation and Testing of Noise Vibration Harshness\" },\n    { value: \"E65A4448-B77B-11E9-925C-E3659DA380C2\", label: \"Simulating and Testing of Particulate Emissions\" },\n    { value: \"E65D5C1E-B77B-11E9-B6C9-A62E81FFC1F7\", label: \"Brake System and Component Performance\" },\n    { value: \"E6607750-B77B-11E9-A508-CA68AAFEDEBE\", label: \"Scale Testing for Research Development and Quality Control\" },\n    { value: \"E66375B8-B77B-11E9-B730-BE1C3C7011F1\", label: \"Virtual Validation and Certification of Brake Systems\" },\n    { value: \"E6668E42-B77B-11E9-8175-950FC9BD5E64\", label: \"State-of-the-Art Engineering Processes for Safety Relevant Functions and Systems\" },\n    { value: \"E6699C68-B77B-11E9-BE37-D0A72E493802\", label: \"Development (Process/Products) of Cooperating Software and Hardware Solutions in Brakes\" },\n];\n\nconst subTheme1 = [\n    { value: \"06CE3888-9414-11E8-AE34-9BA1BE5E3471\", label: \"Brake Systems for Highly Automated Road and Rail Vehicles\" },\n    { value: \"0DD80384-9414-11E8-A380-9320CF01B393\", label: \"Braking for Electric and Hybrid Vehicles\" },\n    { value: \"1BFDEE9C-9414-11E8-A7E0-A07B6C067014\", label: \"Innovative Parking Brake Systems\" },\n    { value: \"1C01065E-9414-11E8-A93F-A546BD18FAA0\", label: \"Innovative Brake Actuators and System Controls (Software and Function Development)\" },\n    { value: \"1C04A9BC-9414-11E8-B1D2-8516A557BE68\", label: \"Safety relevant braking functions\" },\n    { value: \"1C082150-9414-11E8-AF92-B5E7B5B9337D\", label: \"Railway Traffic Management Systems\" },\n]\nconst subTheme2 = [\n    { value: \"2604091C-9414-11E8-A078-CC3BFBB45A3C\", label: \"Sustainability in Brake Systems\" },\n    { value: \"26093DE2-9414-11E8-B272-A7C4EBADAE4A\", label: \"Brake Energy Management and Recuperation\" },\n    { value: \"260E56E2-9414-11E8-B9F8-E613015D1408\", label: \"Brake Noise and Drag Reduction\" },\n    { value: \"26126F98-9414-11E8-BBB3-D3A884B3E943\", label: \"Lightweight Brake Components\" },\n    { value: \"26176674-9414-11E8-8A0E-C108E25B228C\", label: \"Brake Emission findings and available countermeasures\" },\n]\nconst subTheme3 = [\n    { value: \"2FE079A2-9414-11E8-AA53-C7435EE03528\", label: \"Friction Interface Dynamics\" },\n    { value: \"2FE4D18C-9414-11E8-B418-87A1883F2046\", label: \"Friction Induced Vibration\" },\n    { value: \"2FE958F6-9414-11E8-A0E5-9911B184DEC0\", label: \"Thermal Effects\" },\n    { value: \"2FECE066-9414-11E8-A9FA-A830F1ADACA6\", label: \"Wear and Emissions\" },\n]\nconst subTheme4 = [\n    { value: \"36935E7C-9414-11E8-830E-8F6C9F83D892\", label: \"Manufacturing, Quality Control and Warranty Claims\" },\n    { value: \"369B7C92-9414-11E8-8D9F-E0E2215D2248\", label: \"Global Standardisation\" },\n    { value: \"36A067CA-9414-11E8-8D58-F172FE98C949\", label: \"Aftermarket, Global Sourcing\" },\n    { value: \"36A436C0-9414-11E8-AAB2-F98B8437A38B\", label: \"Governmental Regulation and Homologation of Brake Systems\" },\n]\nconst subTheme5 = [\n    { value: \"3DAE1288-9414-11E8-85DC-B1A03E97F386\", label: \"Innovative Friction Materials and Components\" },\n    { value: \"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\", label: \"Disc, Drum, Wheel Materials, Coatings and Design\" },\n]\nconst subTheme6 = [\n    { value: \"E65121F6-B77B-11E9-A3BF-935F1E4F73DC\", label: \"Virtual Development Methods of Braking Hardware and Software \" },\n    { value: \"E6542694-B77B-11E9-BAAD-C06218C5F3E9\", label: \"Friction Material and Friction Couple Characterisation\" },\n    { value: \"E6572D62-B77B-11E9-AEEC-DEEBD990D172\", label: \"Simulation and Testing of Noise Vibration Harshness\" },\n    { value: \"E65A4448-B77B-11E9-925C-E3659DA380C2\", label: \"Simulating and Testing of Particulate Emissions\" },\n    { value: \"E65D5C1E-B77B-11E9-B6C9-A62E81FFC1F7\", label: \"Brake System and Component Performance\" },\n    { value: \"E6607750-B77B-11E9-A508-CA68AAFEDEBE\", label: \"Scale Testing for Research Development and Quality Control\" },\n    { value: \"E66375B8-B77B-11E9-B730-BE1C3C7011F1\", label: \"Virtual Validation and Certification of Brake Systems\" },\n    { value: \"E6668E42-B77B-11E9-8175-950FC9BD5E64\", label: \"State-of-the-Art Engineering Processes for Safety Relevant Functions and Systems\" },\n    { value: \"E6699C68-B77B-11E9-BE37-D0A72E493802\", label: \"Development (Process/Products) of Cooperating Software and Hardware Solutions in Brakes\" },\n]\n\n\nconst submissionType = [\n    { value: \"full\", label: \"I will make a full technical paper submission\" },\n    { value: \"oral\", label: \"I will make an oral-only submission\" },\n    { value: \"poster\", label: \"I will make a poster-only submission\" },\n];\n\nconst ifFull = [\n    { value: \"programme\", label: \"My full paper submission will be accompanied by an oral presentation\" },\n    { value: \"poster\", label: \"My full paper submission will be accompanied by a poster presentation\" },\n];\n\nconst presets = {\n    abstract: \"lorem ipsum\",\n    author_address1: \"10 Hamilton Road\",\n    author_address2: null,\n    author_address3: null,\n    author_city: \"Sidcup\",\n    author_company: \"Article Seven Limited\",\n    author_country: \"GB\",\n    author_email: \"andrew@article7.co.uk\",\n    author_firstname: \"Andrew\",\n    author_jobtitle: \"Director\",\n    author_lastname: \"Green\",\n    author_phone: \"+44 20 8305 1224\",\n    author_postal: \"DA15 7HB\",\n    author_scp: \"Kent\",\n    author_title: \"Mr.\",\n    consider_for_journal: \"no\",\n    is_presenting_author: \"yes\",\n    keywords: \"lorem, ipsum\",\n    papertitle: \"Duis aute irure dolor\",\n    presentationtype_full: \"programme\",\n    previouspapers: null,\n    secondary_authors: [\n        {\n            company: \"Article Seven\",\n            country: \"GB\",\n            email: \"ava@article7.co.uk\",\n            firstname: \"Ava\",\n            is_presenting_author: \"no\",\n            lastname: \"Green\",\n            ref: \"2399A3C8-1823-11EA-BBE7-BDC53B013130\",\n            title: null,\n        }],\n    submission_type: \"full\",\n    subtheme: [\"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\"],\n    theme: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n    __csrf_token: \"5d159fb224ed613dce89a64553f36f5eda1fa97c,2caaa318bb55c8c19d660a1e420d1c602dfc59f9,1576603105\"\n}\n\nconst emptyInitial = {\n    author_title: '',\n    author_firstname: '',\n    author_lastname: '',\n    author_email: '',\n    author_jobtitle: '',\n    author_company: '',\n    author_address1: '',\n    author_address2: '',\n    author_address3: '',\n    author_city: '',\n    author_scp: '',\n    author_postal: '',\n    author_country: '',\n    author_phone: '',\n    is_presenting_author: '',\n    submission_type: '',\n    presentationtype_full: '',\n    papertitle: '',\n    theme: '',\n    subtheme: [],\n    abstract: '',\n    keywords: '',\n    previouspapers: '',\n    consider_for_journal: '',\n    secondary_authors: [{\n        title: '',\n        firstname: '',\n        lastname: '',\n        email: '',\n        company: '',\n        country: '',\n        is_presenting_author: '',\n        ref: ''\n    }],\n    __csrf_token: '',\n\n}"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AApCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAnCA;;;;A","sourceRoot":""}