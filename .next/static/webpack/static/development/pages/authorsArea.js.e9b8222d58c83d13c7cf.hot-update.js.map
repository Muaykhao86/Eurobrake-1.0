{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.e9b8222d58c83d13c7cf.hot-update.js","sources":["webpack:///./components/forms/FormActions.js"],"sourcesContent":["import cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function SendFile({ csrf, file }) {\n    const formData = new FormData();\n    const { logintoken } = cookie.get();\n    formData.append('__csrf_token', csrf);\n    formData.append('filename', file);\n    console.log({ logintoken, csrf, file })\n    if (logintoken && csrf && file) {\n        try {\n            const apiUrl = 'https://prelude.eurobrake.net/upload';\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            // this.setState({ error: error.message });\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url }) {\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        console.log({url, form});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/login' ){\n        console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n         }\n        }\n    return\n    }\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAIA;AAJA;AAAA;AAMA;AACA;AACA;AADA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAdA;AACA;AADA;AAiBA;AACA;AAlBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA8BA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AAUA;AACA;AACA;AACA;AACA;AADA;AAJA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAiBA;AAjBA;AAAA;AAkBA;AAAA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AApBA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AACA;AA7BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAuCA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AAQA;AACA;AACA;AACA;AADA;AAHA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AACA;AAgBA;AAjBA;AAAA;AACA;AADA;AAmBA;AACA;AApBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AACA;AA6BA;AAAA;AAAA;AAAA;AA9BA;AAAA;AAAA;AAiCA;AACA;AACA;AACA;AACA;AADA;AAJA;AACA;AAjCA;AAgCA;AAhCA;AAAA;AACA;AADA;AAyCA;AACA;AA1CA;AAAA;AAAA;AAAA;AACA;AA2CA;AA5CA;AAAA;AA6CA;AAAA;AACA;AA9CA;AAAA;AACA;AADA;AAiDA;AACA;AAlDA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAsDA;AACA;AAvDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}