{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.260b965eaa69fea97760.hot-update.js","sources":["webpack:///./components/login.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../utils/auth';\nimport {Button} from './Button';\n\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-flow: column;\n    justify-content: space-between;\n    align-items: center;\n    min-width: 100%;\n\n    \n.MuiInput-underline:after {\n    color: ${props => props.theme.primary};\n}\n\n.MuiInputBase-root {\n    font-family: ${props => props.theme.MPBoldIt};\n        font-size: 2rem;\n        color: ${props => props.theme.primary};\n}\n\ninput:-internal-autofill-selected {\n\n}\n    .login_form{\n\n    &-field{\n        margin: 1rem 0;\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n    &-label{\n        font-family: ${props => props.theme.MPLight};\n        font-size: 2.6rem;\n        color: ${props => props.theme.primary};\n    }\n    &-input{\n        min-width: 40rem;\n        font-family: ${props => props.theme.MPBoldIt};\n        font-size: 5rem;\n        color: ${props => props.theme.primary};\n\n    }\n\n    &-link{\n         font-family: ${props => props.theme.MPBoldIt};\n        font-size: 5rem;\n        color: ${props => props.theme.primary};\n    }\n    }\n\n\n`;\n\nexport default class Login extends Component {\n    // static getInitialProps = async function () {\n    //     const { logintoken } = cookie.get();\n    //     const res = await fetch('https://prelude.eurobrake.net/login', {\n    //         credentials: 'include',\n    //         headers: {\n    //             Authorization: `Bearer ${logintoken}`,\n    //         }\n    //     });\n    //     const data = await res.json();\n\n    //     return {\n    //         form: data\n    //     };\n    // };\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const { username, password, error } = this.state;\n        // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n        // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n        const formData = {\n            username: username,\n            password: password,\n        }\n        try {\n            const response = await fetch('https://prelude.eurobrake.net/login', {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(formData)\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                // this.setState(prev => ({ userLoggedIn: !prev }))\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            this.setState({ error: error.message });\n        }\n    }\n    render() {\n        return (\n           \n                   <StyledForm className=\"login_form\">\n                        <div className=\"login_form-field\">\n                            <label \n                            htmlFor=\"label\" \n                            className=\"login_form-label\">\n                                Email:\n                            </label>\n                            <TextField\n                            style={{color: '#134381'}}\n                            id=\"standard-required\"\n                            label=\"Required\"\n                            required\n                            className=\"login_form-input\" \n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.saveToState} \n                            value={this.state.username} />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label \n                            className=\"login_form-label\"\n                             htmlFor=\"label\">\n                                Password:\n                            </label>\n                            <TextField\n                            id=\"standard-required\"\n                            required\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState} \n                            value={this.state.password} />\n                        </div>\n                        <Button \n                        onClick={this.onSubmit} \n                        value=\"Submit\" \n                        bcolor=\"#134381\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \"3rem 0\"}}\n                        fs=\"1.8rem\"\n                        padding=\".5rem 6rem\"\n                        >Login</Button>\n                        <a className=\"login_form-link\" href=\"\">Forgotten your password?</a>\n                   </StyledForm>\n          \n             \n        )\n    }\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AASA;AAAA;AAIA;AAAA;AAEA;AAAA;AAgBA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAMA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AACA;AAXA;AAUA;AAVA;AAAA;AACA;AADA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AACA;AAgBA;AAjBA;AAAA;AAkBA;AAAA;AACA;AAnBA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AACA;AAEA;AAAA;AAAA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAuCA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlHA;AACA;;;;;A","sourceRoot":""}