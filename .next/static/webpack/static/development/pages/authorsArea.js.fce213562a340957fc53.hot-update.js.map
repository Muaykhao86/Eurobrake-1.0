{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.fce213562a340957fc53.hot-update.js","sources":["webpack:///./components/forms/FormControl.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const AbstractSchema = Yup.object().shape({\n    author_firstname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_lastname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_email: Yup.string()\n        .email()\n        .required('Required'),\n    author_jobtitle: Yup.string()\n        .required('Required'),\n    author_company: Yup.string()\n        .required('Required'),\n    author_address1: Yup.string()\n        .required('Required'),\n    author_address2: Yup.string(),\n        \n    author_address3: Yup.string(),\n        \n    author_city: Yup.string()\n        .required('Required'),\n    author_scp: Yup.string()\n        .required('Required'),\n    author_postal: Yup.string()\n        .required('Required'),\n    author_country: Yup.string()\n        .required('Required'),\n    author_phone: Yup.string()\n        .required('Required'),\n    is_presenting_author: Yup.string()\n        .required('Required'),\n    submission_type: Yup.string()\n        .required('Required'),\n    presentationtype_full: Yup.string(),\n    papertitle: Yup.string()\n        .required('Required'),\n    theme: Yup.string()\n        .required('Required'),\n    subtheme: Yup.array().max(3, 'Please select max of three subthemes!')\n        .required('Required'),\n    abstract: Yup.string()\n        .required('Required'),\n    keywords: Yup.string()\n        .required('Required'),\n    previouspapers: Yup.string()\n        .required('Required'),\n    consider_for_journal: Yup.string()\n        .required('Required'),\n    secondary_authors: Yup.array()\n        .of(Yup.object().shape({\n            title: Yup.string()\n                .nullable()\n                .required('Required'),\n            firstname: Yup.string()\n                .required('Required'),\n            lastname: Yup.string()\n                .required('Required'),\n            email: Yup.string()\n                .email()\n                .required('Required'),\n            company: Yup.string()\n                .required('Required'),\n            country: Yup.string()\n                .required('Required'),\n            is_presenting_author: Yup.string()\n                .required('Required'),\n        }))\n});\n\nexport const EsopSchema = Yup.object().shape({\n    author_firstname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_lastname: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    author_email: Yup.string()\n        .email()\n        .required('Required'),\n    author_jobtitle: Yup.string()\n        .required('Required'),\n    author_company: Yup.string()\n        .required('Required'),\n    author_address1: Yup.string()\n        .required('Required'),\n    author_address2: Yup.string(),\n        \n    author_address3: Yup.string(),\n        \n    author_city: Yup.string()\n        .required('Required'),\n    author_scp: Yup.string()\n        .required('Required'),\n    author_postal: Yup.string()\n        .required('Required'),\n    author_country: Yup.string()\n        .required('Required'),\n    author_phone: Yup.string()\n        .required('Required'),\n    is_presenting_author: Yup.string()\n        .required('Required'),\n    submission_type: Yup.string()\n        .required('Required'),\n    presentationtype_full: Yup.string(),\n    papertitle: Yup.string()\n        .required('Required'),\n    theme: Yup.string()\n        .required('Required'),\n    subtheme: Yup.array().max(3, 'Please select max of three subthemes!')\n        .required('Required'),\n    abstract: Yup.string()\n        .required('Required'),\n    keywords: Yup.string()\n        .required('Required'),\n    previouspapers: Yup.string()\n        .required('Required'),\n    consider_for_journal: Yup.string()\n        .required('Required'),\n    secondary_authors: Yup.array()\n        .of(Yup.object().shape({\n            title: Yup.string()\n                .nullable()\n                .required('Required'),\n            firstname: Yup.string()\n                .required('Required'),\n            lastname: Yup.string()\n                .required('Required'),\n            email: Yup.string()\n                .email()\n                .required('Required'),\n            company: Yup.string()\n                .required('Required'),\n            country: Yup.string()\n                .required('Required'),\n            is_presenting_author: Yup.string()\n                .required('Required'),\n        }))\n});"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAIA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAGA;AAEA;AAEA;AAGA;AAEA;AAEA;AAfA;AApDA;AAwEA;AACA;AAIA;AAIA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAGA;AAEA;AAEA;AAGA;AAEA;AAEA;AAfA;AApDA;;;;A","sourceRoot":""}