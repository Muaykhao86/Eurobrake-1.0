{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.d27faa2ced81dcf7c4a2.hot-update.js","sources":["webpack:///./components/forms/FormActions.js"],"sourcesContent":["import cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\nexport async function GetFormSSR({url, context}) {\n    // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n    const { logintoken } = cookies(context);\n    console.log({logintoken})\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\n// const getFormData = (object) => {\n//    console.log(object)\n//     const formData = new FormData();\n//     for ( var key in object ) {\n//     formData.append(key, object[key]);\n// }\n//     // Object.keys(object).forEach(key => formData.append(key, object[key]));\n//     return formData;\n// }\n    \nexport async function SendFile({ values, url }) {\n    values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    const { logintoken } = cookie.get();\n    const formData = new FormData();\n\n\n     Object.keys(values).forEach(key => formData.append(key, values[key]));\n\n    // * works\n    // for ( var key in values ) {\n    // console.log(key, values[key]);\n    // }\n   formData.forEach(console.log)\n    // formData.append('filename', file);\n    console.log({ logintoken,  url})\n    // if (logintoken && csrf && file) {\n    //     try {\n    //         const apiUrl = url;\n    //         const response = await fetch(apiUrl, {\n    //             method: 'POST',\n    //             body: formData,\n    //             credentials: 'include',\n    //             headers: {\n    //                 Authorization: 'Bearer ' + logintoken,\n    //             }\n    //         });\n    //         const data = await response.json();\n    //         await console.log({ data })\n    //         if (data.status === 'success') {\n    //             console.log('getForm', data);\n\n    //         } else {\n    //             let error = new Error(data.error)\n    //             error.response = response\n    //             throw error\n    //         }\n    //     } catch (error) {\n    //         console.error(\n    //             'Failed to get form, please try again', error\n    //         )\n    //         // this.setState({ error: error.message });\n    //     }\n    // }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url }) {\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        console.log({url, form});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST', \n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/authors/login' ){\n        console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n         }\n        }\n    return\n    }\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAHA;AAKA;AALA;AAAA;AAOA;AACA;AACA;AACA;AADA;AAHA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAhBA;AACA;AADA;AAmBA;AACA;AApBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AAzBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAgCA;AAAA;AAAA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAvCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAIA;AAJA;AAAA;AAMA;AACA;AACA;AADA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAdA;AACA;AADA;AAiBA;AACA;AAlBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAwCA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAiDA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AAkBA;AAnBA;AAAA;AACA;AADA;AAqBA;AACA;AAtBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA0BA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AACA;AA+BA;AAAA;AAAA;AAAA;AAhCA;AAAA;AAAA;AAmCA;AACA;AACA;AACA;AACA;AADA;AAJA;AACA;AAnCA;AAkCA;AAlCA;AAAA;AACA;AADA;AA2CA;AACA;AA5CA;AAAA;AAAA;AAAA;AACA;AA6CA;AA9CA;AAAA;AA+CA;AAAA;AACA;AAhDA;AAAA;AACA;AADA;AAmDA;AACA;AApDA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAwDA;AACA;AAzDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}