{"version":3,"file":"static/webpack/static/development/pages/studentArea.js.2e3222366845d3c818cc.hot-update.js","sources":["webpack:///./components/forms/TaskControl.js"],"sourcesContent":["import * as yup from 'yup';\n\nexport const PaperSchema = yup.object().shape({\n    accept: \n     yup.bool()\n      .test(\n        'accept',\n        'Field must be checked',\n        value => value === true\n      ).required('Required')\n    ,\n    technicalpaper_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PDF_SUPPORTED_FORMATS.includes(value.type)),\n    author_notes: yup.string(),\n    copyright: yup.bool()\n      .test(\n        'copyright',\n        'Field must be checked',\n        value => value === true\n      ).required('Required')\n})\n \n\n  const PDF_SUPPORTED_FORMATS = [\n     'application/pdf'\n    ];\n\nexport const PPTSchema = yup.object().shape({\n    accept: \n     yup.bool()\n      .test(\n        'accept',\n        'Field must be checked',\n        value => value === true\n      ).required('Required')\n    ,\n    ppt_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PPT_SUPPORTED_FORMATS.includes(value.type)),\n    author_notes: yup.string()\n})\n  \n  const PPT_SUPPORTED_FORMATS = [\n            '\tapplication/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\n    ];\n\n\nexport const PermissionSchema = yup.object().shape({\n    ok_to_publish_ppt: yup.string()\n    .required('Required')\n})\n  \nexport const PitchVideoSchema = yup.object().shape({\n  pitchvideo_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PPT_SUPPORTED_FORMATS.includes(value.type)),\n    ok_to_publish_pitchvideo: yup.string()\n    .required('Required')\n})\n\n\nexport const AcceptPosterSchema = yup.object().shape({\n    accept_poster_invitation: yup.string()\n    .required('Required')\n})\n\nexport const PosterSchema = yup.object().shape({\n    accept: \n     yup.bool()\n      .test(\n        'accept',\n        'Field must be checked',\n        value => value === true\n      ).required('Required')\n    ,\n    poster_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PPT_SUPPORTED_FORMATS.includes(value.type)),\n    author_notes: yup.string(),\n      ok_to_publish_poster: yup.string()\n      .required('Required')\n})\n\nexport const BioSchema = yup.object().shape({\n    biography: yup.string().required('Required')\n      .test(\n        'wordCount',\n        'Max 100 words',\n        value => value && value.match(/\\S+/g).length() <= 100\n      )\n      .test(\n        'wordCount',\n        'Min 20 words',\n        value => value && value.match(/\\S+/g).length() <= 100\n      )\n})\n\n\nconst countWords = (value) => {\n  var matches = value.match(/[\\w\\d\\â€™\\'-]+/gi);\n  return matches ? matches.length : 0;\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AAAA;AAGA;AAGA;AAAA;AACA;AACA;AAIA;AAAA;AAlBA;AAuBA;AAIA;AACA;AAKA;AAAA;AAGA;AAGA;AAAA;AACA;AAbA;AAgBA;AAMA;AACA;AADA;AAKA;AACA;AAGA;AAAA;AACA;AALA;AAUA;AACA;AADA;AAKA;AACA;AAKA;AAAA;AAGA;AAGA;AAAA;AACA;AACA;AAdA;AAkBA;AACA;AAIA;AAAA;AAKA;AAAA;AAVA;AACA;AAcA;AACA;AACA;AACA;;;;A","sourceRoot":""}