{"version":3,"file":"static/webpack/static/development/pages/authorsArea.js.0771df46bf855a74a1bd.hot-update.js","sources":["webpack:///./components/Forms.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport cookie from 'js-cookie';\nimport styled from 'styled-components';\n\n\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data.__csrf_token;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n\n    return\n}\n\nexport async function SendFile({ csrf, file }) {\n    const formData = new FormData();\n    const { logintoken } = cookie.get();\n    formData.append('__csrf_token', { csrf });\n    formData.append('filename', { file });\n    console.log({ logintoken, csrf, file })\n    if (logintoken && csrf && file) {\n        try {\n            const apiUrl = 'https://prelude.eurobrake.net/upload';\n            const response = await fetch(apiUrl, {\n                method: 'PUT',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            // this.setState({ error: error.message });\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, formData, url }) {\n    const form = JSON.stringify(formData);\n    const { logintoken } = cookie.get();\n    if (logintoken && csrf && formData) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n    }}\n    return\n}\n\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n});\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n\n`;\n\nexport const AbstractForm = () => (\n <Formik \n    initialValues={{\n            author_title: '',\n            author_firstname: '',\n            author_lastname: '',\n            author_email: '',\n            author_jobtitle: '',\n            author_company: '',\n            author_address1: '',\n            author_address2: '',\n            author_address3: '',\n            author_city: '',\n            author_scp: '',\n            author_postal: '',\n            author_country: '',\n            author_phone: '',\n            is_presenting_author: '',\n            submission_type: '',\n            presentationtype_full: '',\n            papertitle: '',\n            theme: '',\n            subtheme: [],\n            abstract: '',\n            keywords: '',\n            previouspapers: '',\n            consider_for_journal: '',\n            secondary_authors: [],\n            secondaryAuthor: {\n                title: '',\n                firstname: '',\n                lastname: '',\n                email: '',\n                company: '',\n                country: '',\n                is_presenting_author: '',\n            },\n            __csrf_token: '',\n    }}\n    onSubmit={values => {\n        // same shape as initial values\n        console.log(values);\n      }}\n    validationSchema={SignupSchema}\n    >\n    {({ errors, touched, isSubmitting }) => (\n        <StyledForm>\n          <Field name=\"firstName\" />\n          {errors.firstName && touched.firstName ? (\n            <div>{errors.firstName}</div>\n          ) : null}\n          <Field name=\"lastName\" />\n          {errors.lastName && touched.lastName ? (\n            <div>{errors.lastName}</div>\n          ) : null}\n          <Field name=\"email\" type=\"email\" />\n          {errors.email && touched.email ? <div>{errors.email}</div> : null}\n          <button type=\"submit\" disabled={isSubmitting}>Submit</button>\n         \n        </StyledForm>\n      )}\n \n    \n    </Formik>   \n);\n\nconst titles = [\n    { value: \"\", label: \"—\" },\n    { value: \"Mr.\", label: \"Mr.\" },\n    { value: \"Ms.\", label: \"Ms.\" },\n    { value: \"Mrs.\", label: \"Mrs.\" },\n    { value: \"Dr.\", label: \"Dr.\" },\n    { value: \"Dr.-Ing.\", label: \"Dr.-Ing.\" },\n    { value: \"Dr. Eng.\", label: \"Dr. Eng.\" },\n    { value: \"Prof.\", label: \"Prof.\" },\n    { value: \"Prof. Dr.\", label: \"Prof. Dr.\" },\n    { value: \"Prof. Dr.-Ing.\", label: \"Prof. Dr.-Ing.\" },\n    { value: \"Ing.\", label: \"Ing.\" },\n    { value: \"Dipl.-Ing.\", label: \"Dipl.-Ing.\" },\n    { value: \"Ir.\", label: \"Ir.\" }\n];\n\nconst countries = [\n    { value: \"\", label: \"—\" },\n    { value: \"DZ\", label: \"Algeria\" },\n    { value: \"AR\", label: \"Argentina\" },\n    { value: \"AU\", label: \"Australia\" },\n    { value: \"AT\", label: \"Austria\" },\n    { value: \"BD\", label: \"Bangladesh\" },\n    { value: \"BY\", label: \"Belarus\" },\n    { value: \"BE\", label: \"Belgium\" },\n    { value: \"BA\", label: \"Bosnia and Herzegovina\" },\n    { value: \"BR\", label: \"Brazil\" },\n    { value: \"BG\", label: \"Bulgaria\" },\n    { value: \"CA\", label: \"Canada\" },\n    { value: \"CL\", label: \"Chile\" },\n    { value: \"CN\", label: \"China\" },\n    { value: \"HK\", label: \"China - Hong Kong\" },\n    { value: \"CO\", label: \"Colombia\" },\n    { value: \"HR\", label: \"Croatia\" },\n    { value: \"CZ\", label: \"Czech Republic\" },\n    { value: \"DK\", label: \"Denmark\" },\n    { value: \"EC\", label: \"Ecuador\" },\n    { value: \"EG\", label: \"Egypt\" },\n    { value: \"EE\", label: \"Estonia\" },\n    { value: \"FI\", label: \"Finland\" },\n    { value: \"MK\", label: \"Fmr. Yugoslav Republic of Macedonia\" },\n    { value: \"FR\", label: \"France\" },\n    { value: \"GE\", label: \"Georgia\" },\n    { value: \"DE\", label: \"Germany\" },\n    { value: \"GR\", label: \"Greece\" },\n    { value: \"HU\", label: \"Hungary\" },\n    { value: \"IS\", label: \"Iceland\" },\n    { value: \"IN\", label: \"India\" },\n    { value: \"ID\", label: \"Indonesia\" },\n    { value: \"IR\", label: \"Iran (Islamic Republic of)\" },\n    { value: \"IQ\", label: \"Iraq\" },\n    { value: \"IE\", label: \"Ireland\" },\n    { value: \"IL\", label: \"Israel\" },\n    { value: \"IT\", label: \"Italy\" },\n    { value: \"JP\", label: \"Japan\" },\n    { value: \"KG\", label: \"Kyrgyzstan\" },\n    { value: \"LV\", label: \"Latvia\" },\n    { value: \"LT\", label: \"Lithuania\" },\n    { value: \"LU\", label: \"Luxembourg\" },\n    { value: \"MY\", label: \"Malaysia\" },\n    { value: \"MT\", label: \"Malta\" },\n    { value: \"MX\", label: \"Mexico\" },\n    { value: \"MN\", label: \"Mongolia\" },\n    { value: \"MA\", label: \"Morocco\" },\n    { value: \"NP\", label: \"Nepal\" },\n    { value: \"NL\", label: \"Netherlands\" },\n    { value: \"NZ\", label: \"New Zealand\" },\n    { value: \"NG\", label: \"Nigeria\" },\n    { value: \"NO\", label: \"Norway\" },\n    { value: \"PK\", label: \"Pakistan\" },\n    { value: \"PE\", label: \"Peru\" },\n    { value: \"PH\", label: \"Philippines\" },\n    { value: \"PL\", label: \"Poland\" },\n    { value: \"PT\", label: \"Portugal\" },\n    { value: \"KR\", label: \"Republic of Korea\" },\n    { value: \"PA\", label: \"Republic of Panama\" },\n    { value: \"RO\", label: \"Romania\" },\n    { value: \"RU\", label: \"Russian Federation\" },\n    { value: \"SA\", label: \"Saudi Arabia\" },\n    { value: \"RS\", label: \"Serbia\" },\n    { value: \"SG\", label: \"Singapore\" },\n    { value: \"SK\", label: \"Slovakia\" },\n    { value: \"SI\", label: \"Slovenia\" },\n    { value: \"ZA\", label: \"South Africa\" },\n    { value: \"ES\", label: \"Spain\" },\n    { value: \"LK\", label: \"Sri Lanka\" },\n    { value: \"SE\", label: \"Sweden\" },\n    { value: \"CH\", label: \"Switzerland\" },\n    { value: \"TW\", label: \"Taiwan\" },\n    { value: \"TH\", label: \"Thailand\" },\n    { value: \"TN\", label: \"Tunisia\" },\n    { value: \"TR\", label: \"Turkey\" },\n    { value: \"TM\", label: \"Turkmenistan\" },\n    { value: \"UA\", label: \"Ukraine\" },\n    { value: \"AE\", label: \"United Arab Emirates\" },\n    { value: \"GB\", label: \"United Kingdom\" },\n    { value: \"US\", label: \"United States\" },\n    { value: \"UZ\", label: \"Uzbekistan\" },\n    { value: \"VE\", label: \"Venezuela\" },\n    { value: \"VN\", label: \"Viet Nam\" },\n];\n\nconst themes = [\n    { value: \"BC50E220-9412-11E8-85AF-D97B4D95EBB1\", label: \"Intelligent Braking and Braking Control\" },\n    { value: \"48C9561C-7865-11E7-AA75-C89000D85D50\", label: \"Environmentally-friendly Braking Systems\" },\n    { value: \"5D49D9C2-7865-11E7-9112-887F12D54550\", label: \"Fundamentals of Brakes\" },\n    { value: \"7C15061A-7865-11E7-8178-84D2A73AF9BC\", label: \"Manufacturing and Markets\" },\n    { value: \"925B5F3C-7865-11E7-8659-8C8422753A7C\", label: \"Materials and Design\" },\n    { value: \"B6F53F20-7865-11E7-A9B1-FC3D434D4D51\", label: \"Simulation, Testing, Innovative Development Processes\" },\n];\n\nconst subThemes = [\n    { value: \"06CE3888-9414-11E8-AE34-9BA1BE5E3471\", label: \"Brake Systems for Highly Automated Road and Rail Vehicles\" },\n    { value: \"0DD80384-9414-11E8-A380-9320CF01B393\", label: \"Braking for Electric and Hybrid Vehicles\" },\n    { value: \"1BFDEE9C-9414-11E8-A7E0-A07B6C067014\", label: \"Innovative Parking Brake Systems\" },\n    { value: \"1C01065E-9414-11E8-A93F-A546BD18FAA0\", label: \"Innovative Brake Actuators and System Controls (Software and Function Development)\" },\n    { value: \"1C04A9BC-9414-11E8-B1D2-8516A557BE68\", label: \"Safety relevant braking functions\" },\n    { value: \"1C082150-9414-11E8-AF92-B5E7B5B9337D\", label: \"Railway Traffic Management Systems\" },\n    { value: \"2604091C-9414-11E8-A078-CC3BFBB45A3C\", label: \"Sustainability in Brake Systems\" },\n    { value: \"26093DE2-9414-11E8-B272-A7C4EBADAE4A\", label: \"Brake Energy Management and Recuperation\" },\n    { value: \"260E56E2-9414-11E8-B9F8-E613015D1408\", label: \"Brake Noise and Drag Reduction\" },\n    { value: \"26126F98-9414-11E8-BBB3-D3A884B3E943\", label: \"Lightweight Brake Components\" },\n    { value: \"26176674-9414-11E8-8A0E-C108E25B228C\", label: \"Brake Emission findings and available countermeasures\" },\n    { value: \"2FE079A2-9414-11E8-AA53-C7435EE03528\", label: \"Friction Interface Dynamics\" },\n    { value: \"2FE4D18C-9414-11E8-B418-87A1883F2046\", label: \"Friction Induced Vibration\" },\n    { value: \"2FE958F6-9414-11E8-A0E5-9911B184DEC0\", label: \"Thermal Effects\" },\n    { value: \"2FECE066-9414-11E8-A9FA-A830F1ADACA6\", label: \"Wear and Emissions\" },\n    { value: \"36935E7C-9414-11E8-830E-8F6C9F83D892\", label: \"Manufacturing, Quality Control and Warranty Claims\" },\n    { value: \"369B7C92-9414-11E8-8D9F-E0E2215D2248\", label: \"Global Standardisation\" },\n    { value: \"36A067CA-9414-11E8-8D58-F172FE98C949\", label: \"Aftermarket, Global Sourcing\" },\n    { value: \"36A436C0-9414-11E8-AAB2-F98B8437A38B\", label: \"Governmental Regulation and Homologation of Brake Systems\" },\n    { value: \"3DAE1288-9414-11E8-85DC-B1A03E97F386\", label: \"Innovative Friction Materials and Components\" },\n    { value: \"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\", label: \"Disc, Drum, Wheel Materials, Coatings and Design\" },\n    { value: \"E65121F6-B77B-11E9-A3BF-935F1E4F73DC\", label: \"Virtual Development Methods of Braking Hardware and Software \" },\n    { value: \"E6542694-B77B-11E9-BAAD-C06218C5F3E9\", label: \"Friction Material and Friction Couple Characterisation\" },\n    { value: \"E6572D62-B77B-11E9-AEEC-DEEBD990D172\", label: \"Simulation and Testing of Noise Vibration Harshness\" },\n    { value: \"E65A4448-B77B-11E9-925C-E3659DA380C2\", label: \"Simulating and Testing of Particulate Emissions\" },\n    { value: \"E65D5C1E-B77B-11E9-B6C9-A62E81FFC1F7\", label: \"Brake System and Component Performance\" },\n    { value: \"E6607750-B77B-11E9-A508-CA68AAFEDEBE\", label: \"Scale Testing for Research Development and Quality Control\" },\n    { value: \"E66375B8-B77B-11E9-B730-BE1C3C7011F1\", label: \"Virtual Validation and Certification of Brake Systems\" },\n    { value: \"E6668E42-B77B-11E9-8175-950FC9BD5E64\", label: \"State-of-the-Art Engineering Processes for Safety Relevant Functions and Systems\" },\n    { value: \"E6699C68-B77B-11E9-BE37-D0A72E493802\", label: \"Development (Process/Products) of Cooperating Software and Hardware Solutions in Brakes\" },\n];\n\nconst submissionType = [\n    { value: \"full\", label: \"I will make a full technical paper submission\" },\n    { value: \"oral\", label: \"I will make an oral-only submission\" },\n    { value: \"poster\", label: \"I will make a poster-only submission\" },\n];\n\nconst ifFull = [\n     {value: \"programme\", label: \"My full paper submission will be accompanied by an oral presentation\"},\n{value: \"poster\", label: \"My full paper submission will be accompanied by a poster presentation\"},\n];\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAIA;AAJA;AAAA;AAMA;AACA;AACA;AADA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAdA;AACA;AADA;AAiBA;AACA;AAlBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA+BA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AAUA;AACA;AACA;AACA;AACA;AADA;AAJA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAiBA;AACA;AAlBA;AAAA;AAAA;AAAA;AACA;AAmBA;AApBA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AACA;AA7BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAuCA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AAOA;AACA;AACA;AACA;AADA;AAHA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAeA;AAhBA;AAAA;AACA;AADA;AAkBA;AACA;AAnBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAuBA;AACA;AAxBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA+BA;AACA;AAIA;AAIA;AATA;AAcA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AA7CA;AAksourceRoot":""}