{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/InstructionsPopup.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    align-self: center;\\n    width: \", \";\\n    background-color: \", \";\\n     margin-top: 3rem;\\n\\n    a{\\n          color: \", \";\\n        font-family: \", \";\\n        font-size: 2rem;\\n   \\n    }\\n    .popup{\\n        color: \", \";\\n        font-family: \", \";\\n        font-size: 2rem;\\n   \\n    &-title{\\n        color: \", \";\\n        font-family: \", \";\\n        font-size: 4.4rem;\\n        margin-top: 3rem;\\n        margin-bottom: 3rem;\\n    }\\n   \\n    &_sub-title{\\n        color: \", \";\\n        font-size: 3.5rem;\\n        font-family: \", \";\\n        padding-bottom: .5rem;\\n        margin-top: 3rem;\\n        margin-bottom: 3rem;\\n    }\\n    &-bold{\\n        font-family: \", \";\\n    }\\n    &-it{\\n        font-family: \", \";\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { createRef } from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from './Button';\nvar StyledPopup = styled.div(_templateObject(), function (props) {\n  return props.theme.minWidth;\n}, function (props) {\n  return props.theme.white;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPBold;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPLight;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPSemibold;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPLightIt;\n}, function (props) {\n  return props.theme.MPBold;\n}, function (props) {\n  return props.theme.MPLightIt;\n});\nexport default function InstructionsPopup(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1]; // onClose={()=>setOpen(open => !open)}\n\n\n  return __jsx(StyledPopup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      return setOpen(function (open) {\n        return !open;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, props.children), __jsx(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"THis is a popup\")));\n  {\n    /* <form>\n       <DialogTitle id=\"form-dialog-title\">Upload File</DialogTitle>\n       <DialogContent>\n         <DialogContentText>\n           Please do not exceed 50mb file size example\n       </DialogContentText>\n       \n       </DialogContent>\n       <DialogActions>\n         <Button onClick={() => setOpen(open => !open)} value=\"cancel\" color=\"#134381\" bcolor=\"#134381\">\n           Cancel\n       </Button>\n         \n       </DialogActions>\n    </form> */\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/InstructionsPopup.js"],"names":["React","createRef","styled","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","StyledPopup","div","props","theme","minWidth","white","primary","MPBold","MPLight","MPSemibold","MPLightIt","InstructionsPopup","useState","open","setOpen","children"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAGA,IAAMC,WAAW,GAAGR,MAAM,CAACS,GAAV,oBAIJ,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CAJD,EAKO,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYE,KAAhB;AAAA,CALZ,EASE,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYG,OAAhB;AAAA,CATP,EAUM,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYI,MAAhB;AAAA,CAVX,EAeA,UAAAL,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYG,OAAhB;AAAA,CAfL,EAgBM,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYK,OAAhB;AAAA,CAhBX,EAoBA,UAAAN,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYG,OAAhB;AAAA,CApBL,EAqBM,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYM,UAAhB;AAAA,CArBX,EA4BA,UAAAP,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYG,OAAhB;AAAA,CA5BL,EA8BM,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYO,SAAhB;AAAA,CA9BX,EAoCM,UAAAR,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYI,MAAhB;AAAA,CApCX,EAuCM,UAAAL,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYO,SAAhB;AAAA,CAvCX,CAAjB;AA4CA,eAAe,SAASC,iBAAT,CAA2BT,KAA3B,EAAkC;AAAA,wBACvBZ,KAAK,CAACsB,QAAN,CAAe,KAAf,CADuB;AAAA;AAAA,MACxCC,IADwC;AAAA,MAClCC,OADkC,wBAE/C;;;AAEA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,UAAAD,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAb;AAAA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACa,QADT,CADJ,EAII,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,IAAd;AAAqB,uBAAgB,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAJJ,CADF;AAUI;AAAC;;;;;;;;;;;;;;;AAcU;AAChB","sourcesContent":["import React, { createRef } from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from './Button';\n\n\nconst StyledPopup = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    width: ${props => props.theme.minWidth};\n    background-color: ${props => props.theme.white};\n     margin-top: 3rem;\n\n    a{\n          color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPBold};\n        font-size: 2rem;\n   \n    }\n    .popup{\n        color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPLight};\n        font-size: 2rem;\n   \n    &-title{\n        color: ${props => props.theme.primary};\n        font-family: ${props => props.theme.MPSemibold};\n        font-size: 4.4rem;\n        margin-top: 3rem;\n        margin-bottom: 3rem;\n    }\n   \n    &_sub-title{\n        color: ${props => props.theme.primary};\n        font-size: 3.5rem;\n        font-family: ${props => props.theme.MPLightIt};\n        padding-bottom: .5rem;\n        margin-top: 3rem;\n        margin-bottom: 3rem;\n    }\n    &-bold{\n        font-family: ${props => props.theme.MPBold};\n    }\n    &-it{\n        font-family: ${props => props.theme.MPLightIt};\n    }\n}\n`;\n\nexport default function InstructionsPopup(props) {\n  const [open, setOpen] = React.useState(false);\n  // onClose={()=>setOpen(open => !open)}\n\n  return (\n    <StyledPopup>\n        <a onClick={() => setOpen(open => !open)}>\n          {props.children}\n        </a>\n        <Dialog open={open}  aria-labelledby=\"form-dialog-title\">\n          <Typography>THis is a popup</Typography>\n        </Dialog>\n    </StyledPopup>\n  );\n      {/* <form>\n          <DialogTitle id=\"form-dialog-title\">Upload File</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Please do not exceed 50mb file size example\n          </DialogContentText>\n          \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpen(open => !open)} value=\"cancel\" color=\"#134381\" bcolor=\"#134381\">\n              Cancel\n          </Button>\n            \n          </DialogActions>\n      </form> */}\n}"]},"metadata":{},"sourceType":"module"}