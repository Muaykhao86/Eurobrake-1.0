{"ast":null,"code":"var _jsxFileName = \"/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Newsletter.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { LoginSchema } from './FormControl';\nexport const Newsletter = () => {\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null);\n  const FT = \"newsletter\";\n  const url = 'https://prelude.eurobrake.net/signup';\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    validateForm\n  }) => {\n    const onSubmit = async () => {\n      await setLoading(true);\n      values.__csrf_token = csrf;\n      await console.log('submitting');\n      let res = await SendForm({\n        values,\n        url,\n        csrf\n      });\n      let data = await res;\n      let dataStatus = (await data) && data.status;\n      setStatus(dataStatus);\n      console.log({\n        data\n      });\n\n      let result = async () => {\n        await setLoading(false);\n        await setToggle(true);\n      };\n\n      return result();\n    };\n\n    return __jsx(StyledForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"form-field-news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label-news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input-news\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field-news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"form-label-news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input-news\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }\n    }) : __jsx(Button, {\n      onClick: onSubmit,\n      padding: \".5rem \",\n      style: {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }\n    }, Status ? Status : 'submit')));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nconst emptyInitial = {\n  name: '',\n  email: ''\n};","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Newsletter.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","LoginSchema","Newsletter","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","emptyInitial","values","handleChange","validateForm","onSubmit","__csrf_token","csrf","console","log","res","data","dataStatus","status","result","name","fontSize","height","alignSelf","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {LoginSchema} from './FormControl';\n\n\n\n\nexport const Newsletter = () => {\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = \"newsletter\"\n    const url = 'https://prelude.eurobrake.net/signup';\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm }) => {\n\n              const onSubmit = async () => {\n                 await setLoading(true);\n                values.__csrf_token = csrf\n                  await  console.log('submitting')\n                  let res =  await SendForm({values, url, csrf});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n\n                return (\n                    <StyledForm>\n                      <div className=\"form\" >\n\n                        <div className=\"form-field-news\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label-news\">\n                                Name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input-news\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field-news\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label-news\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input-news\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                        onClick={onSubmit}\n                           padding=\".5rem \" \n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                      </div>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    email: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}