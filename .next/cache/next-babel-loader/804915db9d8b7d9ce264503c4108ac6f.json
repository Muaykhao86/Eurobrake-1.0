{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage } from 'formik';\nimport { TextField, RadioGroup, Select, Checkbox } from 'formik-material-ui';\nimport { AddCircle, RemoveCircle, ArrowUpwardRounded, ArrowDownwardRounded } from '@material-ui/icons';\nimport * as Yup from 'yup';\nimport cookie from 'js-cookie';\nimport styled from 'styled-components';\nimport { Button } from './Button';\nimport { Typography } from '@material-ui/core';\nexport function GetForm(_x) {\n  return _GetForm.apply(this, arguments);\n}\n\nfunction _GetForm() {\n  _GetForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var _cookie$get, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _cookie$get = cookie.get(), logintoken = _cookie$get.logintoken;\n            console.log({\n              logintoken: logintoken\n            });\n            _context.prev = 2;\n            apiUrl = url;\n            _context.next = 6;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return response.json();\n\n          case 9:\n            data = _context.sent;\n\n            if (!(data.status === 'success')) {\n              _context.next = 16;\n              break;\n            }\n\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token);\n            return _context.abrupt(\"return\", data.__csrf_token);\n\n          case 16:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 19:\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](2);\n            console.error('Failed to get form, please try again', _context.t0); // return error.message\n\n          case 24:\n            return _context.abrupt(\"return\");\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 21]]);\n  }));\n  return _GetForm.apply(this, arguments);\n}\n\nexport function SendFile(_x2) {\n  return _SendFile.apply(this, arguments);\n}\n\nfunction _SendFile() {\n  _SendFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref) {\n    var csrf, file, formData, _cookie$get2, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            csrf = _ref.csrf, file = _ref.file;\n            formData = new FormData();\n            _cookie$get2 = cookie.get(), logintoken = _cookie$get2.logintoken;\n            formData.append('__csrf_token', csrf);\n            formData.append('filename', file);\n            console.log({\n              logintoken: logintoken,\n              csrf: csrf,\n              file: file\n            });\n\n            if (!(logintoken && csrf && file)) {\n              _context2.next = 29;\n              break;\n            }\n\n            _context2.prev = 7;\n            apiUrl = 'https://prelude.eurobrake.net/upload';\n            _context2.next = 11;\n            return fetch(apiUrl, {\n              method: 'POST',\n              body: formData,\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 11:\n            response = _context2.sent;\n            _context2.next = 14;\n            return response.json();\n\n          case 14:\n            data = _context2.sent;\n            _context2.next = 17;\n            return console.log({\n              data: data\n            });\n\n          case 17:\n            if (!(data.status === 'success')) {\n              _context2.next = 21;\n              break;\n            }\n\n            console.log('getForm', data);\n            _context2.next = 24;\n            break;\n\n          case 21:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 24:\n            _context2.next = 29;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            _context2.t0 = _context2[\"catch\"](7);\n            console.error('Failed to get form, please try again', _context2.t0); // this.setState({ error: error.message });\n\n          case 29:\n            return _context2.abrupt(\"return\");\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[7, 26]]);\n  }));\n  return _SendFile.apply(this, arguments);\n}\n\nexport function SendForm(_x3) {\n  return _SendForm.apply(this, arguments);\n}\n\nfunction _SendForm() {\n  _SendForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref2) {\n    var csrf, formData, url, form, _cookie$get3, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            csrf = _ref2.csrf, formData = _ref2.formData, url = _ref2.url;\n            form = _JSON$stringify(formData);\n            _cookie$get3 = cookie.get(), logintoken = _cookie$get3.logintoken;\n\n            if (!(logintoken && csrf && formData)) {\n              _context3.next = 24;\n              break;\n            }\n\n            _context3.prev = 4;\n            apiUrl = url;\n            _context3.next = 8;\n            return fetch(apiUrl, {\n              body: form,\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 8:\n            response = _context3.sent;\n            _context3.next = 11;\n            return response.json();\n\n          case 11:\n            data = _context3.sent;\n\n            if (!(data.status === 'success')) {\n              _context3.next = 16;\n              break;\n            }\n\n            console.log('getForm', data);\n            _context3.next = 19;\n            break;\n\n          case 16:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 19:\n            _context3.next = 24;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](4);\n            console.error('Failed to get form, please try again', _context3.t0);\n\n          case 24:\n            return _context3.abrupt(\"return\");\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 21]]);\n  }));\n  return _SendForm.apply(this, arguments);\n}\n\nvar AbstractSchema = Yup.object().shape({\n  author_firstname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  author_lastname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  author_email: Yup.string().email().required('Required'),\n  author_jobtitle: Yup.string().required('Required'),\n  author_company: Yup.string().required('Required'),\n  author_address1: Yup.string().required('Required'),\n  author_address2: Yup.string().required('Required'),\n  author_address3: Yup.string().required('Required'),\n  author_city: Yup.string().required('Required'),\n  author_scp: Yup.string().required('Required'),\n  author_postal: Yup.string().required('Required'),\n  author_country: Yup.string().required('Required'),\n  author_phone: Yup.string().required('Required'),\n  is_presenting_author: Yup.string().required('Required'),\n  submission_type: Yup.string().required('Required'),\n  presentationtype_full: Yup.string(),\n  papertitle: Yup.string().required('Required'),\n  theme: Yup.string().required('Required'),\n  subtheme: Yup.array().max(3, 'Please select max of three subthemes!').required('Required'),\n  \"abstract\": Yup.string().required('Required'),\n  keywords: Yup.string().required('Required'),\n  previouspapers: Yup.string().required('Required'),\n  consider_for_journal: Yup.string().required('Required'),\n  secondary_authors: Yup.array().of(Yup.object().shape({\n    title: Yup.string().required('Required'),\n    firstname: Yup.string().required('Required'),\n    lastname: Yup.string().required('Required'),\n    email: Yup.string().email().required('Required'),\n    company: Yup.string().required('Required'),\n    country: Yup.string().required('Required'),\n    is_presenting_author: Yup.string().required('Required')\n  }))\n});\nvar StyledForm = styled(Form).withConfig({\n  displayName: \"Forms__StyledForm\",\n  componentId: \"sc-1q22qaj-0\"\n})([\"display:flex;flex-flow:column;justify-content:space-between;align-items:center;min-width:100%;.MuiInput-underline:after{color:\", \";}.MuiFormHelperText-root{font-size:1.5rem;}.MuiInputBase-root{font-family:\", \";font-size:2rem;color:\", \";}input:-internal-autofill-selected{}.login_form{&-field{margin:1rem 0;width:100%;display:flex;justify-content:space-between;align-items:flex-end;}&-label{font-family:\", \";font-size:2.6rem;color:\", \";}&-input{min-width:40rem;font-family:\", \";font-size:2rem;color:\", \";}&-link{font-family:\", \";font-size:1.7rem;color:\", \";}&-radio{text-align:end;}}\"], function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPBoldIt;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPLight;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPBoldIt;\n}, function (props) {\n  return props.theme.primary;\n}, function (props) {\n  return props.theme.MPBoldIt;\n}, function (props) {\n  return props.theme.primary;\n}); // !    FUNCTIONS\n// MAXTHREE CHECKBOX\n// ? Handled by yup atm => doesnt disable but brings msg and stops submit\n// ONLYONE PRESENTING\n// ? ONLY GONE AND DONE IT N I?? \n\nexport var AbstractForm = function AbstractForm() {\n  var editPaper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _useState = useState(''),\n      presenter = _useState[0],\n      setPresenter = _useState[1];\n\n  console.log({\n    editPaper: editPaper\n  });\n  useEffect(function () {\n    console.log('presenter is changing');\n  }, [presenter]);\n  return __jsx(Formik, {\n    initialValues: editPaper ? presets : emptyInitial,\n    onSubmit: function onSubmit(values, actions) {\n      setTimeout(function () {\n        alert(_JSON$stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    validationSchema: AbstractSchema,\n    enableReinitialize: true\n  }, function (_ref3) {\n    var values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting,\n        isValidating = _ref3.isValidating,\n        handleChange = _ref3.handleChange,\n        setFieldValue = _ref3.setFieldValue;\n\n    var allNo = function allNo(_ref4) {\n      var name = _ref4.name;\n\n      if (process.browser) {\n        var radios = document.querySelectorAll('input[name*=\"is_presenting_author\"]');\n        {\n          /* console.log(name) */\n        }\n        radios.forEach(function (input) {\n          input.name !== name && setFieldValue(input.name, input.value) && console.log('gonna change...', input.name, 'cos it aint the same as...', name);\n        });\n      }\n    };\n\n    var onPresenterChange = function onPresenterChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      value === 'no' ? setPresenter('') : setPresenter(name);\n      setFieldValue(name, value);\n      allNo({\n        name: name\n      });\n      return console.log({\n        values: values\n      });\n    };\n\n    return __jsx(StyledForm, null, __jsx(\"h1\", null, \"Primary Author\"), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Title\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_title,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_title\",\n      component: Select\n    }, titles.map(function (option, i) {\n      return __jsx(\"option\", {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value\n      }, option.label);\n    }))), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"First Name:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_firstname,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_firstname\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Last Name:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_lastname,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_lastname\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Email:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_email,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_email\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Job Title:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_jobtitle,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_jobtitle\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Company:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_company,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_company\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Address:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_address1,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address1\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_address2,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address2\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_address3,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address3\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"City:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_city,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_city\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"State/county/province:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_scp,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_scp\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Postal/Zip code:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_postal,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_postal\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Country\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_country,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_country\",\n      component: Select\n    }, countries.map(function (option, i) {\n      return __jsx(\"option\", {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value\n      }, option.label);\n    }))), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Phone:\"), __jsx(Field, {\n      className: \"login_form-input\",\n      onClick: handleChange,\n      value: values.author_phone,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_phone\",\n      component: TextField\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Is this the presenting author?\"), __jsx(Field, {\n      className: \"login_form-radio\",\n      value: values.is_presenting_author,\n      style: {\n        color: '#134381'\n      },\n      name: \"is_presenting_author\",\n      component: RadioGroup\n    }, __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Yes\", __jsx(\"input\", {\n      checked: presenter === 'is_presenting_author',\n      onChange: function onChange(event) {\n        onPresenterChange(event);\n      },\n      type: \"radio\",\n      name: \"is_presenting_author\",\n      value: \"yes\"\n    })), __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"No\", __jsx(\"input\", {\n      onChange: function onChange(event) {\n        onPresenterChange(event);\n      },\n      checked: presenter !== 'is_presenting_author',\n      type: \"radio\",\n      name: \"is_presenting_author\",\n      value: \"no\"\n    })))), __jsx(\"h1\", null, \"Secondary Author(s)\"), __jsx(\"div\", {\n      className: \"\"\n    }, __jsx(FieldArray, {\n      name: \"secondary_authors\"\n    }, function (_ref5) {\n      var swap = _ref5.swap,\n          push = _ref5.push,\n          remove = _ref5.remove,\n          setSubmitting = _ref5.setSubmitting;\n      return values.secondary_authors && values.secondary_authors.length > 0 && values.secondary_authors.map(function (authors, index) {\n        return __jsx(\"div\", {\n          key: index\n        }, __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Title:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].title\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].title\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"First Name:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].firstname\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].firstname\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Last Name:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].lastname\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].lastname\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Email:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].email\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].email\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Company:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].company\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].company\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Country:\"), __jsx(Field, {\n          className: \"login_form-input\",\n          onClick: handleChange,\n          value: \"secondary_authors[\".concat(index, \"].country\"),\n          style: {\n            color: '#134381'\n          },\n          name: \"secondary_authors[\".concat(index, \"].country\"),\n          component: TextField\n        })), __jsx(\"div\", {\n          className: \"login_form-field\"\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Is this the presenting Author?\"), __jsx(Field, {\n          className: \"login_form-radio\",\n          style: {\n            color: '#134381'\n          },\n          value: \"secondary_authors[\".concat(index, \"].is_presenting_author\"),\n          component: RadioGroup,\n          name: \"secondary_authors[\".concat(index, \"].is_presenting_author\")\n        }, __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"Yes\", __jsx(\"input\", {\n          checked: presenter == \"secondary_authors[\".concat(index, \"].is_presenting_author\"),\n          onChange: function onChange(event) {\n            onPresenterChange(event);\n          },\n          type: \"radio\",\n          value: \"yes\",\n          name: \"secondary_authors[\".concat(index, \"].is_presenting_author\")\n        })), __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"login_form-label\"\n        }, \"No\", __jsx(\"input\", {\n          checked: presenter != \"secondary_authors[\".concat(index, \"].is_presenting_author\"),\n          onChange: function onChange(event) {\n            onPresenterChange(event);\n          },\n          type: \"radio\",\n          value: \"no\",\n          name: \"secondary_authors[\".concat(index, \"].is_presenting_author\")\n        })))), __jsx(Button, {\n          type: \"add\",\n          onClick: function onClick() {\n            push({\n              title: '',\n              firstname: '',\n              lastname: '',\n              email: '',\n              company: '',\n              country: '',\n              is_presenting_author: ''\n            });\n          }\n        }, __jsx(AddCircle, {\n          style: {\n            color: 'green'\n          }\n        })), __jsx(Button, {\n          type: \"remove\",\n          onClick: function onClick() {\n            return values.secondary_authors.length > 1 && remove(index);\n          }\n        }, __jsx(RemoveCircle, {\n          style: {\n            color: 'red'\n          }\n        })), __jsx(Button, {\n          type: \"upgrade\",\n          onClick: function onClick() {\n            return values.secondary_authors.length > 1 && index !== 0 && swap(index, index - 1);\n          }\n        }, __jsx(ArrowUpwardRounded, {\n          style: {\n            color: 'red'\n          }\n        })), __jsx(Button, {\n          type: \"downgrade\",\n          onClick: function onClick() {\n            return values.secondary_authors.length > 1 && index !== values.secondary_authors.length - 1 && swap(index, index + 1);\n          }\n        }, __jsx(ArrowDownwardRounded, {\n          style: {\n            color: 'red'\n          }\n        })));\n      });\n    })), __jsx(Button, {\n      type: \"submit\",\n      bcolor: \"#134381\",\n      padding: \"0.5rem 2rem\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \".5rem 0\"\n      },\n      fontSize: \"1.7rem\"\n    }, \"Submit\"), console.log('main', values.is_presenting_author, 'second', values.secondary_authors));\n  });\n};\nvar titles = [{\n  value: \"\",\n  label: \"—\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Dr.-Ing.\",\n  label: \"Dr.-Ing.\"\n}, {\n  value: \"Dr. Eng.\",\n  label: \"Dr. Eng.\"\n}, {\n  value: \"Prof.\",\n  label: \"Prof.\"\n}, {\n  value: \"Prof. Dr.\",\n  label: \"Prof. Dr.\"\n}, {\n  value: \"Prof. Dr.-Ing.\",\n  label: \"Prof. Dr.-Ing.\"\n}, {\n  value: \"Ing.\",\n  label: \"Ing.\"\n}, {\n  value: \"Dipl.-Ing.\",\n  label: \"Dipl.-Ing.\"\n}, {\n  value: \"Ir.\",\n  label: \"Ir.\"\n}];\nvar countries = [{\n  value: \"\",\n  label: \"—\"\n}, {\n  value: \"DZ\",\n  label: \"Algeria\"\n}, {\n  value: \"AR\",\n  label: \"Argentina\"\n}, {\n  value: \"AU\",\n  label: \"Australia\"\n}, {\n  value: \"AT\",\n  label: \"Austria\"\n}, {\n  value: \"BD\",\n  label: \"Bangladesh\"\n}, {\n  value: \"BY\",\n  label: \"Belarus\"\n}, {\n  value: \"BE\",\n  label: \"Belgium\"\n}, {\n  value: \"BA\",\n  label: \"Bosnia and Herzegovina\"\n}, {\n  value: \"BR\",\n  label: \"Brazil\"\n}, {\n  value: \"BG\",\n  label: \"Bulgaria\"\n}, {\n  value: \"CA\",\n  label: \"Canada\"\n}, {\n  value: \"CL\",\n  label: \"Chile\"\n}, {\n  value: \"CN\",\n  label: \"China\"\n}, {\n  value: \"HK\",\n  label: \"China - Hong Kong\"\n}, {\n  value: \"CO\",\n  label: \"Colombia\"\n}, {\n  value: \"HR\",\n  label: \"Croatia\"\n}, {\n  value: \"CZ\",\n  label: \"Czech Republic\"\n}, {\n  value: \"DK\",\n  label: \"Denmark\"\n}, {\n  value: \"EC\",\n  label: \"Ecuador\"\n}, {\n  value: \"EG\",\n  label: \"Egypt\"\n}, {\n  value: \"EE\",\n  label: \"Estonia\"\n}, {\n  value: \"FI\",\n  label: \"Finland\"\n}, {\n  value: \"MK\",\n  label: \"Fmr. Yugoslav Republic of Macedonia\"\n}, {\n  value: \"FR\",\n  label: \"France\"\n}, {\n  value: \"GE\",\n  label: \"Georgia\"\n}, {\n  value: \"DE\",\n  label: \"Germany\"\n}, {\n  value: \"GR\",\n  label: \"Greece\"\n}, {\n  value: \"HU\",\n  label: \"Hungary\"\n}, {\n  value: \"IS\",\n  label: \"Iceland\"\n}, {\n  value: \"IN\",\n  label: \"India\"\n}, {\n  value: \"ID\",\n  label: \"Indonesia\"\n}, {\n  value: \"IR\",\n  label: \"Iran (Islamic Republic of)\"\n}, {\n  value: \"IQ\",\n  label: \"Iraq\"\n}, {\n  value: \"IE\",\n  label: \"Ireland\"\n}, {\n  value: \"IL\",\n  label: \"Israel\"\n}, {\n  value: \"IT\",\n  label: \"Italy\"\n}, {\n  value: \"JP\",\n  label: \"Japan\"\n}, {\n  value: \"KG\",\n  label: \"Kyrgyzstan\"\n}, {\n  value: \"LV\",\n  label: \"Latvia\"\n}, {\n  value: \"LT\",\n  label: \"Lithuania\"\n}, {\n  value: \"LU\",\n  label: \"Luxembourg\"\n}, {\n  value: \"MY\",\n  label: \"Malaysia\"\n}, {\n  value: \"MT\",\n  label: \"Malta\"\n}, {\n  value: \"MX\",\n  label: \"Mexico\"\n}, {\n  value: \"MN\",\n  label: \"Mongolia\"\n}, {\n  value: \"MA\",\n  label: \"Morocco\"\n}, {\n  value: \"NP\",\n  label: \"Nepal\"\n}, {\n  value: \"NL\",\n  label: \"Netherlands\"\n}, {\n  value: \"NZ\",\n  label: \"New Zealand\"\n}, {\n  value: \"NG\",\n  label: \"Nigeria\"\n}, {\n  value: \"NO\",\n  label: \"Norway\"\n}, {\n  value: \"PK\",\n  label: \"Pakistan\"\n}, {\n  value: \"PE\",\n  label: \"Peru\"\n}, {\n  value: \"PH\",\n  label: \"Philippines\"\n}, {\n  value: \"PL\",\n  label: \"Poland\"\n}, {\n  value: \"PT\",\n  label: \"Portugal\"\n}, {\n  value: \"KR\",\n  label: \"Republic of Korea\"\n}, {\n  value: \"PA\",\n  label: \"Republic of Panama\"\n}, {\n  value: \"RO\",\n  label: \"Romania\"\n}, {\n  value: \"RU\",\n  label: \"Russian Federation\"\n}, {\n  value: \"SA\",\n  label: \"Saudi Arabia\"\n}, {\n  value: \"RS\",\n  label: \"Serbia\"\n}, {\n  value: \"SG\",\n  label: \"Singapore\"\n}, {\n  value: \"SK\",\n  label: \"Slovakia\"\n}, {\n  value: \"SI\",\n  label: \"Slovenia\"\n}, {\n  value: \"ZA\",\n  label: \"South Africa\"\n}, {\n  value: \"ES\",\n  label: \"Spain\"\n}, {\n  value: \"LK\",\n  label: \"Sri Lanka\"\n}, {\n  value: \"SE\",\n  label: \"Sweden\"\n}, {\n  value: \"CH\",\n  label: \"Switzerland\"\n}, {\n  value: \"TW\",\n  label: \"Taiwan\"\n}, {\n  value: \"TH\",\n  label: \"Thailand\"\n}, {\n  value: \"TN\",\n  label: \"Tunisia\"\n}, {\n  value: \"TR\",\n  label: \"Turkey\"\n}, {\n  value: \"TM\",\n  label: \"Turkmenistan\"\n}, {\n  value: \"UA\",\n  label: \"Ukraine\"\n}, {\n  value: \"AE\",\n  label: \"United Arab Emirates\"\n}, {\n  value: \"GB\",\n  label: \"United Kingdom\"\n}, {\n  value: \"US\",\n  label: \"United States\"\n}, {\n  value: \"UZ\",\n  label: \"Uzbekistan\"\n}, {\n  value: \"VE\",\n  label: \"Venezuela\"\n}, {\n  value: \"VN\",\n  label: \"Viet Nam\"\n}];\nvar themes = [{\n  value: \"BC50E220-9412-11E8-85AF-D97B4D95EBB1\",\n  label: \"Intelligent Braking and Braking Control\"\n}, {\n  value: \"48C9561C-7865-11E7-AA75-C89000D85D50\",\n  label: \"Environmentally-friendly Braking Systems\"\n}, {\n  value: \"5D49D9C2-7865-11E7-9112-887F12D54550\",\n  label: \"Fundamentals of Brakes\"\n}, {\n  value: \"7C15061A-7865-11E7-8178-84D2A73AF9BC\",\n  label: \"Manufacturing and Markets\"\n}, {\n  value: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n  label: \"Materials and Design\"\n}, {\n  value: \"B6F53F20-7865-11E7-A9B1-FC3D434D4D51\",\n  label: \"Simulation, Testing, Innovative Development Processes\"\n}];\nvar subThemes = [{\n  value: \"06CE3888-9414-11E8-AE34-9BA1BE5E3471\",\n  label: \"Brake Systems for Highly Automated Road and Rail Vehicles\"\n}, {\n  value: \"0DD80384-9414-11E8-A380-9320CF01B393\",\n  label: \"Braking for Electric and Hybrid Vehicles\"\n}, {\n  value: \"1BFDEE9C-9414-11E8-A7E0-A07B6C067014\",\n  label: \"Innovative Parking Brake Systems\"\n}, {\n  value: \"1C01065E-9414-11E8-A93F-A546BD18FAA0\",\n  label: \"Innovative Brake Actuators and System Controls (Software and Function Development)\"\n}, {\n  value: \"1C04A9BC-9414-11E8-B1D2-8516A557BE68\",\n  label: \"Safety relevant braking functions\"\n}, {\n  value: \"1C082150-9414-11E8-AF92-B5E7B5B9337D\",\n  label: \"Railway Traffic Management Systems\"\n}, {\n  value: \"2604091C-9414-11E8-A078-CC3BFBB45A3C\",\n  label: \"Sustainability in Brake Systems\"\n}, {\n  value: \"26093DE2-9414-11E8-B272-A7C4EBADAE4A\",\n  label: \"Brake Energy Management and Recuperation\"\n}, {\n  value: \"260E56E2-9414-11E8-B9F8-E613015D1408\",\n  label: \"Brake Noise and Drag Reduction\"\n}, {\n  value: \"26126F98-9414-11E8-BBB3-D3A884B3E943\",\n  label: \"Lightweight Brake Components\"\n}, {\n  value: \"26176674-9414-11E8-8A0E-C108E25B228C\",\n  label: \"Brake Emission findings and available countermeasures\"\n}, {\n  value: \"2FE079A2-9414-11E8-AA53-C7435EE03528\",\n  label: \"Friction Interface Dynamics\"\n}, {\n  value: \"2FE4D18C-9414-11E8-B418-87A1883F2046\",\n  label: \"Friction Induced Vibration\"\n}, {\n  value: \"2FE958F6-9414-11E8-A0E5-9911B184DEC0\",\n  label: \"Thermal Effects\"\n}, {\n  value: \"2FECE066-9414-11E8-A9FA-A830F1ADACA6\",\n  label: \"Wear and Emissions\"\n}, {\n  value: \"36935E7C-9414-11E8-830E-8F6C9F83D892\",\n  label: \"Manufacturing, Quality Control and Warranty Claims\"\n}, {\n  value: \"369B7C92-9414-11E8-8D9F-E0E2215D2248\",\n  label: \"Global Standardisation\"\n}, {\n  value: \"36A067CA-9414-11E8-8D58-F172FE98C949\",\n  label: \"Aftermarket, Global Sourcing\"\n}, {\n  value: \"36A436C0-9414-11E8-AAB2-F98B8437A38B\",\n  label: \"Governmental Regulation and Homologation of Brake Systems\"\n}, {\n  value: \"3DAE1288-9414-11E8-85DC-B1A03E97F386\",\n  label: \"Innovative Friction Materials and Components\"\n}, {\n  value: \"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\",\n  label: \"Disc, Drum, Wheel Materials, Coatings and Design\"\n}, {\n  value: \"E65121F6-B77B-11E9-A3BF-935F1E4F73DC\",\n  label: \"Virtual Development Methods of Braking Hardware and Software \"\n}, {\n  value: \"E6542694-B77B-11E9-BAAD-C06218C5F3E9\",\n  label: \"Friction Material and Friction Couple Characterisation\"\n}, {\n  value: \"E6572D62-B77B-11E9-AEEC-DEEBD990D172\",\n  label: \"Simulation and Testing of Noise Vibration Harshness\"\n}, {\n  value: \"E65A4448-B77B-11E9-925C-E3659DA380C2\",\n  label: \"Simulating and Testing of Particulate Emissions\"\n}, {\n  value: \"E65D5C1E-B77B-11E9-B6C9-A62E81FFC1F7\",\n  label: \"Brake System and Component Performance\"\n}, {\n  value: \"E6607750-B77B-11E9-A508-CA68AAFEDEBE\",\n  label: \"Scale Testing for Research Development and Quality Control\"\n}, {\n  value: \"E66375B8-B77B-11E9-B730-BE1C3C7011F1\",\n  label: \"Virtual Validation and Certification of Brake Systems\"\n}, {\n  value: \"E6668E42-B77B-11E9-8175-950FC9BD5E64\",\n  label: \"State-of-the-Art Engineering Processes for Safety Relevant Functions and Systems\"\n}, {\n  value: \"E6699C68-B77B-11E9-BE37-D0A72E493802\",\n  label: \"Development (Process/Products) of Cooperating Software and Hardware Solutions in Brakes\"\n}];\nvar subTheme1 = [{\n  value: \"06CE3888-9414-11E8-AE34-9BA1BE5E3471\",\n  label: \"Brake Systems for Highly Automated Road and Rail Vehicles\"\n}, {\n  value: \"0DD80384-9414-11E8-A380-9320CF01B393\",\n  label: \"Braking for Electric and Hybrid Vehicles\"\n}, {\n  value: \"1BFDEE9C-9414-11E8-A7E0-A07B6C067014\",\n  label: \"Innovative Parking Brake Systems\"\n}, {\n  value: \"1C01065E-9414-11E8-A93F-A546BD18FAA0\",\n  label: \"Innovative Brake Actuators and System Controls (Software and Function Development)\"\n}, {\n  value: \"1C04A9BC-9414-11E8-B1D2-8516A557BE68\",\n  label: \"Safety relevant braking functions\"\n}, {\n  value: \"1C082150-9414-11E8-AF92-B5E7B5B9337D\",\n  label: \"Railway Traffic Management Systems\"\n}];\nvar subTheme2 = [{\n  value: \"2604091C-9414-11E8-A078-CC3BFBB45A3C\",\n  label: \"Sustainability in Brake Systems\"\n}, {\n  value: \"26093DE2-9414-11E8-B272-A7C4EBADAE4A\",\n  label: \"Brake Energy Management and Recuperation\"\n}, {\n  value: \"260E56E2-9414-11E8-B9F8-E613015D1408\",\n  label: \"Brake Noise and Drag Reduction\"\n}, {\n  value: \"26126F98-9414-11E8-BBB3-D3A884B3E943\",\n  label: \"Lightweight Brake Components\"\n}, {\n  value: \"26176674-9414-11E8-8A0E-C108E25B228C\",\n  label: \"Brake Emission findings and available countermeasures\"\n}];\nvar subTheme3 = [{\n  value: \"2FE079A2-9414-11E8-AA53-C7435EE03528\",\n  label: \"Friction Interface Dynamics\"\n}, {\n  value: \"2FE4D18C-9414-11E8-B418-87A1883F2046\",\n  label: \"Friction Induced Vibration\"\n}, {\n  value: \"2FE958F6-9414-11E8-A0E5-9911B184DEC0\",\n  label: \"Thermal Effects\"\n}, {\n  value: \"2FECE066-9414-11E8-A9FA-A830F1ADACA6\",\n  label: \"Wear and Emissions\"\n}];\nvar subTheme4 = [{\n  value: \"36935E7C-9414-11E8-830E-8F6C9F83D892\",\n  label: \"Manufacturing, Quality Control and Warranty Claims\"\n}, {\n  value: \"369B7C92-9414-11E8-8D9F-E0E2215D2248\",\n  label: \"Global Standardisation\"\n}, {\n  value: \"36A067CA-9414-11E8-8D58-F172FE98C949\",\n  label: \"Aftermarket, Global Sourcing\"\n}, {\n  value: \"36A436C0-9414-11E8-AAB2-F98B8437A38B\",\n  label: \"Governmental Regulation and Homologation of Brake Systems\"\n}];\nvar subTheme5 = [{\n  value: \"3DAE1288-9414-11E8-85DC-B1A03E97F386\",\n  label: \"Innovative Friction Materials and Components\"\n}, {\n  value: \"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\",\n  label: \"Disc, Drum, Wheel Materials, Coatings and Design\"\n}];\nvar subTheme6 = [{\n  value: \"E65121F6-B77B-11E9-A3BF-935F1E4F73DC\",\n  label: \"Virtual Development Methods of Braking Hardware and Software \"\n}, {\n  value: \"E6542694-B77B-11E9-BAAD-C06218C5F3E9\",\n  label: \"Friction Material and Friction Couple Characterisation\"\n}, {\n  value: \"E6572D62-B77B-11E9-AEEC-DEEBD990D172\",\n  label: \"Simulation and Testing of Noise Vibration Harshness\"\n}, {\n  value: \"E65A4448-B77B-11E9-925C-E3659DA380C2\",\n  label: \"Simulating and Testing of Particulate Emissions\"\n}, {\n  value: \"E65D5C1E-B77B-11E9-B6C9-A62E81FFC1F7\",\n  label: \"Brake System and Component Performance\"\n}, {\n  value: \"E6607750-B77B-11E9-A508-CA68AAFEDEBE\",\n  label: \"Scale Testing for Research Development and Quality Control\"\n}, {\n  value: \"E66375B8-B77B-11E9-B730-BE1C3C7011F1\",\n  label: \"Virtual Validation and Certification of Brake Systems\"\n}, {\n  value: \"E6668E42-B77B-11E9-8175-950FC9BD5E64\",\n  label: \"State-of-the-Art Engineering Processes for Safety Relevant Functions and Systems\"\n}, {\n  value: \"E6699C68-B77B-11E9-BE37-D0A72E493802\",\n  label: \"Development (Process/Products) of Cooperating Software and Hardware Solutions in Brakes\"\n}];\nvar submissionType = [{\n  value: \"full\",\n  label: \"I will make a full technical paper submission\"\n}, {\n  value: \"oral\",\n  label: \"I will make an oral-only submission\"\n}, {\n  value: \"poster\",\n  label: \"I will make a poster-only submission\"\n}];\nvar ifFull = [{\n  value: \"programme\",\n  label: \"My full paper submission will be accompanied by an oral presentation\"\n}, {\n  value: \"poster\",\n  label: \"My full paper submission will be accompanied by a poster presentation\"\n}];\nvar presets = {\n  \"abstract\": \"lorem ipsum\",\n  author_address1: \"10 Hamilton Road\",\n  author_address2: null,\n  author_address3: null,\n  author_city: \"Sidcup\",\n  author_company: \"Article Seven Limited\",\n  author_country: \"GB\",\n  author_email: \"andrew@article7.co.uk\",\n  author_firstname: \"Andrew\",\n  author_jobtitle: \"Director\",\n  author_lastname: \"Green\",\n  author_phone: \"+44 20 8305 1224\",\n  author_postal: \"DA15 7HB\",\n  author_scp: \"Kent\",\n  author_title: \"Mr.\",\n  consider_for_journal: \"no\",\n  is_presenting_author: \"yes\",\n  keywords: \"lorem, ipsum\",\n  papertitle: \"Duis aute irure dolor\",\n  presentationtype_full: \"programme\",\n  previouspapers: null,\n  secondary_authors: [{\n    company: \"Article Seven\",\n    country: \"GB\",\n    email: \"ava@article7.co.uk\",\n    firstname: \"Ava\",\n    is_presenting_author: \"no\",\n    lastname: \"Green\",\n    ref: \"2399A3C8-1823-11EA-BBE7-BDC53B013130\",\n    title: null\n  }],\n  submission_type: \"full\",\n  subtheme: [\"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\"],\n  theme: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n  __csrf_token: \"5d159fb224ed613dce89a64553f36f5eda1fa97c,2caaa318bb55c8c19d660a1e420d1c602dfc59f9,1576603105\"\n};\nvar emptyInitial = {\n  author_title: '',\n  author_firstname: '',\n  author_lastname: '',\n  author_email: '',\n  author_jobtitle: '',\n  author_company: '',\n  author_address1: '',\n  author_address2: '',\n  author_address3: '',\n  author_city: '',\n  author_scp: '',\n  author_postal: '',\n  author_country: '',\n  author_phone: '',\n  is_presenting_author: '',\n  submission_type: '',\n  presentationtype_full: '',\n  papertitle: '',\n  theme: '',\n  subtheme: [],\n  \"abstract\": '',\n  keywords: '',\n  previouspapers: '',\n  consider_for_journal: '',\n  secondary_authors: [{\n    title: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    company: '',\n    country: '',\n    is_presenting_author: '',\n    ref: ''\n  }],\n  __csrf_token: ''\n}; // ! NOT NEEDED ANYMORE !!!! £$!*er\n//  <h1>Your Abstract</h1>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Submission Type:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.submission_type}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"submission_type\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make a full technical paper submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"full\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make an oral-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"oral\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     I will make a poster-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n//                             </Field>\n//                         </div>\n//                         {values.submission_type === 'full' && <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Presentation Type:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.presentationtype_full}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"presentationtype_full\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     My full paper submission will be accompanied by an oral presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"programme\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"login_form-label\">\n//                                     My full paper submission will be accompanied by an poster presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n//                             </Field>\n//                         </div>}\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Paper Title:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.papertitle}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"papertitle\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Which topic does your paper belong to?\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.theme}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"theme\"\n//                                 component={RadioGroup}\n//                             >\n//                                 {themes.map(theme =>\n//                                     <label\n//                                         style={{ margin: '1rem' }}\n//                                         htmlFor=\"label\"\n//                                         className=\"login_form-label\">\n//                                         {theme.label}\n//                                         <Field\n//                                             type=\"radio\"\n//                                             name=\"theme\"\n//                                             value={theme.value}\n//                                         />\n//                                     </label>)}\n//                             </Field>\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Please choose up to three sub-topics for your paper:\n//                         </label>\n//                             {\n//                                 values.theme === 'BC50E220-9412-11E8-85AF-D97B4D95EBB1' ?\n//                                     subTheme1.map((sub, i) => (\n//                                         <label\n//                                             htmlFor=\"label\"\n//                                             className=\"login_form-label\">\n//                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                             {sub.label}\n//                                         </label>\n//                                     )\n//                                     )\n//                                     :\n//                                     values.theme === '48C9561C-7865-11E7-AA75-C89000D85D50' ?\n//                                         subTheme2.map((sub, i) => (\n//                                             <label\n//                                                 htmlFor=\"label\"\n//                                                 className=\"login_form-label\">\n//                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                 {sub.label}\n//                                             </label>\n//                                         )\n//                                         )\n//                                         :\n//                                         values.theme === '5D49D9C2-7865-11E7-9112-887F12D54550' ?\n//                                             subTheme3.map((sub, i) => (\n//                                                 <label\n//                                                     htmlFor=\"label\"\n//                                                     className=\"login_form-label\">\n//                                                     <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                     {sub.label}\n//                                                 </label>\n//                                             )\n//                                             )\n//                                             :\n//                                             values.theme === '7C15061A-7865-11E7-8178-84D2A73AF9BC' ?\n//                                                 subTheme4.map((sub, i) => (\n//                                                     <label\n//                                                         htmlFor=\"label\"\n//                                                         className=\"login_form-label\">\n//                                                         <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                         {sub.label}\n//                                                     </label>\n//                                                 )\n//                                                 )\n//                                                 :\n//                                                 values.theme === '925B5F3C-7865-11E7-8659-8C8422753A7C' ?\n//                                                     subTheme5.map((sub, i) => (\n//                                                         <label\n//                                                             htmlFor=\"label\"\n//                                                             className=\"login_form-label\">\n//                                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                             {sub.label}\n//                                                         </label>\n//                                                     )\n//                                                     )\n//                                                     :\n//                                                     values.theme === 'B6F53F20-7865-11E7-A9B1-FC3D434D4D51' ?\n//                                                         subTheme6.map((sub, i) => (\n//                                                             <label\n//                                                                 htmlFor=\"label\"\n//                                                                 className=\"login_form-label\">\n//                                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                                 {sub.label}\n//                                                             </label>\n//                                                         )\n//                                                         )\n//                                                         : null\n//                             }\n//                             <ErrorMessage component={Typography} name=\"subtheme\" style={{ color: 'red', fontSize: '1.5rem' }} />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Abstract:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.abstract}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"abstract\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Keywords:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.keywords}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"keywords\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Previous Papers:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.previouspapers}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"previouspapers\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"login_form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"login_form-label\">\n//                                 Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?:\n//                         </label>\n//                             <Field\n//                                 className=\"login_form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.consider_for_journal}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"consider_for_journal\"\n//                                 component={TextField}\n//                             />\n//                         </div>","map":null,"metadata":{},"sourceType":"module"}