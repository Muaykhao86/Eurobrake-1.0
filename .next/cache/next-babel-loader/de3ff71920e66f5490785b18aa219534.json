{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/login.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../utils/auth';\nimport { Button } from './Button';\nconst StyledForm = styled.form.withConfig({\n  displayName: \"login__StyledForm\",\n  componentId: \"sc-1otdfux-0\"\n})([\"display:flex;flex-flow:column;justify-content:space-between;align-items:center;min-width:100%;.MuiInput-underline:after{color:\", \";}.MuiInputBase-root{font-family:\", \";font-size:2rem;color:\", \";}input:-internal-autofill-selected{}.login_form{&-field{margin:1rem 0;width:100%;display:flex;justify-content:space-between;align-items:flex-end;}&-label{font-family:\", \";font-size:2.6rem;color:\", \";}&-input{min-width:40rem;font-family:\", \";font-size:5rem;color:\", \";}&-link{font-family:\", \";font-size:5rem;color:\", \";}}\"], props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary, props => props.theme.MPLight, props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary);\nexport default class Login extends Component {\n  // static getInitialProps = async function () {\n  //     const { logintoken } = cookie.get();\n  //     const res = await fetch('https://prelude.eurobrake.net/login', {\n  //         credentials: 'include',\n  //         headers: {\n  //             Authorization: `Bearer ${logintoken}`,\n  //         }\n  //     });\n  //     const data = await res.json();\n  //     return {\n  //         form: data\n  //     };\n  // };\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const {\n        username,\n        password,\n        error\n      } = this.state; // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n      // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n\n      const formData = {\n        username: username,\n        password: password\n      };\n\n      try {\n        const response = await fetch('https://prelude.eurobrake.net/login', {\n          method: 'POST',\n          credentials: 'include',\n          body: _JSON$stringify(formData)\n        });\n        const data = await response.json();\n\n        if (data.status === 'success') {\n          const {\n            logintoken\n          } = data;\n          await login({\n            logintoken\n          }); // this.setState(prev => ({ userLoggedIn: !prev }))\n\n          return {};\n        } else {\n          let error = new Error(data.error);\n          error.response = response;\n          throw error;\n        }\n      } catch (error) {\n        console.error('Failed to login, please try again', error);\n        this.setState({\n          error: error.message\n        });\n      }\n    });\n\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  render() {\n    return __jsx(StyledForm, {\n      className: \"login_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"login_form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Email:\"), __jsx(TextField, {\n      style: {\n        color: '#134381'\n      },\n      id: \"standard-required\",\n      label: \"Required\",\n      required: true,\n      className: \"login_form-input\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.saveToState,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"login_form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"login_form-label\",\n      htmlFor: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Password:\"), __jsx(TextField, {\n      id: \"standard-required\",\n      required: true,\n      label: \"Required\",\n      className: \"login_form-input\",\n      type: \"password\",\n      name: \"password\",\n      onChange: this.saveToState,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: this.onSubmit,\n      value: \"Submit\",\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem 0\"\n      },\n      fs: \"1.8rem\",\n      padding: \".5rem 6rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Login\"), __jsx(\"a\", {\n      className: \"login_form-link\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Forgotten your password?\"));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/login.js"],"names":["React","Component","styled","fetch","TextField","login","logout","Button","StyledForm","form","props","theme","primary","MPBoldIt","MPLight","Login","constructor","e","setState","target","name","value","preventDefault","username","password","error","state","formData","response","method","credentials","body","data","json","status","logintoken","Error","console","message","render","color","saveToState","onSubmit","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../utils/auth';\nimport {Button} from './Button';\n\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-flow: column;\n    justify-content: space-between;\n    align-items: center;\n    min-width: 100%;\n\n    \n.MuiInput-underline:after {\n    color: ${props => props.theme.primary};\n}\n\n.MuiInputBase-root {\n    font-family: ${props => props.theme.MPBoldIt};\n        font-size: 2rem;\n        color: ${props => props.theme.primary};\n}\n\ninput:-internal-autofill-selected {\n\n}\n    .login_form{\n\n    &-field{\n        margin: 1rem 0;\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n    &-label{\n        font-family: ${props => props.theme.MPLight};\n        font-size: 2.6rem;\n        color: ${props => props.theme.primary};\n    }\n    &-input{\n        min-width: 40rem;\n        font-family: ${props => props.theme.MPBoldIt};\n        font-size: 5rem;\n        color: ${props => props.theme.primary};\n\n    }\n\n    &-link{\n         font-family: ${props => props.theme.MPBoldIt};\n        font-size: 5rem;\n        color: ${props => props.theme.primary};\n    }\n    }\n\n\n`;\n\nexport default class Login extends Component {\n    // static getInitialProps = async function () {\n    //     const { logintoken } = cookie.get();\n    //     const res = await fetch('https://prelude.eurobrake.net/login', {\n    //         credentials: 'include',\n    //         headers: {\n    //             Authorization: `Bearer ${logintoken}`,\n    //         }\n    //     });\n    //     const data = await res.json();\n\n    //     return {\n    //         form: data\n    //     };\n    // };\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const { username, password, error } = this.state;\n        // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n        // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n        const formData = {\n            username: username,\n            password: password,\n        }\n        try {\n            const response = await fetch('https://prelude.eurobrake.net/login', {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(formData)\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                // this.setState(prev => ({ userLoggedIn: !prev }))\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            this.setState({ error: error.message });\n        }\n    }\n    render() {\n        return (\n           \n                   <StyledForm className=\"login_form\">\n                        <div className=\"login_form-field\">\n                            <label \n                            htmlFor=\"label\" \n                            className=\"login_form-label\">\n                                Email:\n                            </label>\n                            <TextField\n                            style={{color: '#134381'}}\n                            id=\"standard-required\"\n                            label=\"Required\"\n                            required\n                            className=\"login_form-input\" \n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.saveToState} \n                            value={this.state.username} />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label \n                            className=\"login_form-label\"\n                             htmlFor=\"label\">\n                                Password:\n                            </label>\n                            <TextField\n                            id=\"standard-required\"\n                            required\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState} \n                            value={this.state.password} />\n                        </div>\n                        <Button \n                        onClick={this.onSubmit} \n                        value=\"Submit\" \n                        bcolor=\"#134381\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \"3rem 0\"}}\n                        fs=\"1.8rem\"\n                        padding=\".5rem 6rem\"\n                        >Login</Button>\n                        <a className=\"login_form-link\" href=\"\">Forgotten your password?</a>\n                   </StyledForm>\n          \n             \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}