{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport { PaperSchema } from '../TaskControl';\nexport const Paper = props => {\n  const emptyInitial = {\n    accept: '',\n    ppt_filename: '',\n    author_notes: ''\n  };\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId,\n    type\n  } = props;\n  const url = `https://prelude.eurobrake.net/authors/tasks/paper/${paperId}`;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n  return (// ! NEED PRESETS FOR TASKS\n    __jsx(Formik, {\n      initialValues: emptyInitial,\n      validationSchema: PaperSchema,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ({\n      values,\n      handleChange,\n      setFieldValue,\n      isValidating,\n      validateForm,\n      handleSubmit,\n      errors\n    }) => {\n      const handleCheckBox = async () => {\n        const accept = values.accept;\n        const copyright = values.copyright;\n        accept === true && setFieldValue('accept', 'yes');\n        accept === false && setFieldValue('accept', '');\n        copyright === true && setFieldValue('copyright', 'yes');\n        copyright === false && setFieldValue('copyright', '');\n        return;\n      };\n\n      const onSubmit = () => {\n        values.__csrf_token = csrf;\n        console.log('submitting');\n        {\n          /* console.log(errors) */\n        }\n        {\n          /* errors && console.log('submit')  */\n        }\n      };\n\n      const checkFile = e => {\n        const fileTYpe = e.target.type;\n        console.log(fileType);\n      };\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Please upload your paper PDF using the form below.\"), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"I have used the templates available in the \", __jsx(Link, {\n        href: \"/authorsAreaInstructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"task-link_bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Instructions and Templates\")), \" section of the Author\\u2019s Area and I have also followed the guidance notes available there.\"), __jsx(Field, {\n        className: \"task-checkboxField-box\",\n        style: {\n          color: '#134381'\n        },\n        value: values.accept,\n        name: \"accept\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), errors.accept && __jsx(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, errors.accept)), __jsx(\"div\", {\n        className: \"task-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"PDF upload\"), __jsx(Field, {\n        onChange: checkFile,\n        className: \"task-input\",\n        value: values.technicalpaper_filename,\n        style: {\n          color: '#134381'\n        },\n        name: \"technicalpaper_filename\",\n        component: SimpleFileUpload,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), errors.technicalpaper_filename && __jsx(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, errors.technicalpaper_filename)), __jsx(\"div\", {\n        className: \"task-notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-notes-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Notes for reviewers:\"), __jsx(Field, {\n        className: \"task-notes-input\",\n        onClick: handleChange,\n        value: values.author_notes,\n        style: {\n          color: '#134381'\n        },\n        name: \"author_notes\",\n        component: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"task-field-copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Please confirm that you agree to assign copyright, by checking the box below.\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(InstructionsPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" Click here \"), \"to read the copyright guidelines.\")), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"I agree to assign copyright in this paper to FISITA (UK) Ltd.\"), __jsx(Field, {\n        className: \"task-checkboxField-box\",\n        value: values.copyright,\n        style: {\n          color: '#134381'\n        },\n        name: \"copyright\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), errors.copyright && __jsx(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, errors.copyright)), __jsx(Button, {\n        onClick: () => validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit()),\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem\",\n          color: '#FFF'\n        },\n        padding: \".5rem 4rem\",\n        fontSize: \"1.7rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Send\"));\n    })\n  );\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","Button","SendForm","StyledTask","InstructionsPopup","PaperSchema","Paper","props","emptyInitial","accept","ppt_filename","author_notes","presets","csrf","apiUrl","paperId","type","url","console","log","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","copyright","onSubmit","__csrf_token","checkFile","e","fileTYpe","target","fileType","color","technicalpaper_filename","then","length","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport {PaperSchema} from '../TaskControl';\n\nexport const Paper = (props) => {\n\n\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: '',\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    const url = `https://prelude.eurobrake.net/authors/tasks/paper/${paperId}`;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PaperSchema}\n\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldValue, isValidating, validateForm, handleSubmit, errors }) => {\n                \n                const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    accept === false && setFieldValue('accept', '')\n                    copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '')\n                   return\n                }\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                 {/* console.log(errors) */}\n                {/* errors && console.log('submit')  */}\n                }\n                const checkFile = (e) => {\n                    const fileTYpe = e.target.type;\n                    console.log(fileType)\n                }\n\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your paper PDF using the form below.</Typography>\n                         <div className=\"task-checkboxField\">\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have used the templates available in the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions and Templates</a></Link> section of the Author’s Area and I have also followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                style={{ color: '#134381', }}\n                                value={values.accept}\n                                name=\"accept\"\n                                component={Checkbox}\n                            >\n                            </Field>\n                           {errors.accept && <label style={{color: 'red'}}>{errors.accept}</label>}\n                        </div>\n                         <div className=\"task-field\">\n                            {/* REQUIRED AND FILE MUST BE A PDF */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                PDF upload\n                        </label>\n                            <Field\n                                onChange={checkFile}\n                                className=\"task-input\"\n                                value={values.technicalpaper_filename}\n                                style={{ color: '#134381' }}\n                                name=\"technicalpaper_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                           {errors.technicalpaper_filename && <label style={{color: 'red'}}>{errors.technicalpaper_filename}</label>}\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                         <div className=\"task-field-copy\">\n\n                        <Typography gutterBottom className=\"task-label\">Please confirm that you agree to assign copyright, by checking the box below.</Typography>\n                        <Typography gutterBottom className=\"task-label\"><InstructionsPopup > Click here </InstructionsPopup>to read the copyright guidelines.</Typography>\n                         </div>\n                          <div className=\"task-checkboxField\">\n\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I agree to assign copyright in this paper to FISITA (UK) Ltd.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.copyright}\n                                style={{ color: '#134381', }}\n                                name=\"copyright\"\n                                component={Checkbox}\n                            >\n                            </Field>\n                           {errors.copyright && <label style={{color: 'red'}}>{errors.copyright}</label>}\n                        </div>\n                       \n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}