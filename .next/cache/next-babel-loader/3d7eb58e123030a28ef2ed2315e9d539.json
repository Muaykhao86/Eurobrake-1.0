{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/CountDownBanner.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../components/Button';\nconst CDBanner = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDBanner\",\n  componentId: \"y7fpkn-0\"\n})([\"background-color:#134381;margin-top:0;min-width:100%;height:19.5rem;display:flex;justify-content:center;align-items:center;color:white;\"]);\nconst CDContainer = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDContainer\",\n  componentId: \"y7fpkn-1\"\n})([\"display:flex;max-width:50%;margin-right:2rem;\"]);\nconst CDItem = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDItem\",\n  componentId: \"y7fpkn-2\"\n})([\"position:relative;display:flex;flex-flow:column;align-items:flex-start;font-size:7rem;font-family:\", \";margin:0 1rem;span{position:absolute;top:5rem;padding-left:1.2rem;font-size:1.7rem;font-family:\", \";}\"], props => props.theme.MPBlack, props => props.theme.MPLight);\n\nclass CountDownBanner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const countDownDate = new Date(\"Jun 2, 2020 08:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance / (1000 * 60 * 60) % 24);\n      const minutes = Math.floor(distance / (1000 * 60) % 60);\n      const seconds = Math.floor(distance / 1000 % 60);\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return __jsx(CDBanner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(CDContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(CDItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, days, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Days\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \": \", (hours < 10 ? hours : 0, hours), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Hours\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \": \", (minutes < 10 ? minutes : 0, minutes), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Minutes\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \": \", (seconds < 10 ? seconds : 0, seconds), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Seconds\"))), __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Book Now\"));\n  }\n\n}\n\n;\nexport default CountDownBanner;","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/CountDownBanner.js"],"names":["React","Component","styled","Button","CDBanner","div","CDContainer","CDItem","props","theme","MPBlack","MPLight","CountDownBanner","constructor","state","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","countDownDate","Date","getTime","now","distance","Math","floor","setState","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {Button} from '../components/Button';\n\n\nconst CDBanner = styled.div`\n    background-color: #134381;\n    margin-top: 0;\n    min-width: 100%;\n    height: 19.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white; \n`;\n\nconst CDContainer = styled.div`\n    display: flex;\n    max-width: 50%;\n    margin-right: 2rem; \n`;\n\nconst CDItem = styled.div`\n    position: relative;\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    font-size: 7rem;\n    font-family: ${props => props.theme.MPBlack};\n    margin: 0 1rem ;\n\n    span{\n    position: absolute;\n    top: 5rem;\n    padding-left: 1.2rem;\n    font-size: 1.7rem;\n    font-family: ${props => props.theme.MPLight};\n    }\n`;\n\n class CountDownBanner extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state ={\n           days: undefined,\n           hours: undefined,\n           minutes: undefined,\n           seconds: undefined,\n\n        }\n    }\n\n   componentDidMount(){\n  \n    this.interval = setInterval(() => {\n     const countDownDate = new Date(\"Jun 2, 2020 08:00:00\").getTime();\n     const now = new Date().getTime();\n     const distance = countDownDate - now;\n     const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n     const hours = Math.floor((distance / (1000 * 60 * 60)) % 24); \n     const minutes =  Math.floor((distance / (1000 * 60 )) % 60);\n     const seconds =  Math.floor((distance / 1000) % 60 );\n        this.setState({ days, hours, minutes, seconds });\n    }, 1000);\n\n    }\n\n    componentWillUnmount(){\n    clearInterval(this.interval);\n    }\n\n    render()\n    {\n     const {days, hours, minutes, seconds} = this.state\n       \n        return (\n        <CDBanner>\n             <CDContainer>\n                    <CDItem>\n                        {days} \n                        <span>Days</span>\n                    </CDItem>\n                   <CDItem className=\"countdown-item\">\n                        : {hours < 10 ? hours : 0,hours} \n                        <span>Hours</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        : {minutes < 10 ? minutes : 0,minutes} \n                        <span>Minutes</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        : {seconds < 10 ? seconds : 0,seconds}\n                        <span>Seconds</span>\n                    </CDItem>\n                </CDContainer>\n            <Button>Book Now</Button>\n        </CDBanner>\n    \n        )\n    }\n };\n\nexport default CountDownBanner;\n\n\n\n"]},"metadata":{},"sourceType":"module"}