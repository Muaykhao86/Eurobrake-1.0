{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport var PitchVideo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PitchVideo, _Component);\n\n  function PitchVideo(props) {\n    var _this;\n\n    _classCallCheck(this, PitchVideo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PitchVideo).call(this, props));\n    _this.state = {\n      taskType: ''\n    }; // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n\n    return _this;\n  }\n\n  _createClass(PitchVideo, [{\n    key: \"render\",\n    value: function render() {\n      var emptyInitial = {\n        pitchvideo_filename: '',\n        ok_to_publish_pitchvideo: ''\n      };\n      var _this$props = this.props,\n          presets = _this$props.presets,\n          csrf = _this$props.csrf,\n          apiUrl = _this$props.apiUrl,\n          paperId = _this$props.paperId,\n          type = _this$props.type;\n      console.log('tasks', presets, csrf, apiUrl, paperId, type);\n      return (// ! NEED PRESETS FOR TASKS\n        __jsx(Formik, {\n          initialValues: emptyInitial,\n          enableReinitialize: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, function (_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange;\n          console.log(values, 'Tasks');\n          return __jsx(StyledTask, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, paperId), __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Upload Pitch Video Slide\"), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Please upload your pitch video as a PowerPoint slide using the form below\"), __jsx(\"div\", {\n            className: \"task-field\",\n            style: {\n              marginBottom: '2rem'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Pitch video slide upload\"), __jsx(Field, {\n            className: \"task-input\",\n            value: values.pitchvideo_filename,\n            style: {\n              color: '#134381'\n            },\n            name: \"pitchvideo_filename\",\n            component: SimpleFileUpload,\n            fullWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          })), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n            className: \"task-field-radio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Grant permission?\"), __jsx(Field, {\n            className: \"task-radio\",\n            value: values.ok_to_publish_pitchvideo,\n            style: {\n              color: '#134381'\n            },\n            name: \"ok_to_publish_pitchvideo\",\n            component: RadioGroup,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Yes, I grant permission for my presentation to be included\", __jsx(\"input\", {\n            onChange: handleChange,\n            style: {\n              margin: '1rem'\n            },\n            type: \"radio\",\n            name: \"ok_to_publish_pitchvideo\",\n            value: \"yes\",\n            id: \"yes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"No, I do not grant permission\", __jsx(\"input\", {\n            style: {\n              margin: '1rem'\n            },\n            onChange: handleChange,\n            type: \"radio\",\n            name: \"ok_to_publish_pitchvideo\",\n            value: \"no\",\n            id: \"no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          })))), __jsx(Button, {\n            onClick: function onClick() {\n              return console.log(values);\n            },\n            bcolor: \"#134381\",\n            background: \"#134381\",\n            br: \"100rem\",\n            style: {\n              margin: \"3rem\",\n              color: '#FFF'\n            },\n            padding: \".5rem 4rem\",\n            fontSize: \"1.7rem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"Send\"));\n        })\n      );\n    }\n  }]);\n\n  return PitchVideo;\n}(Component);","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","PitchVideo","props","state","taskType","emptyInitial","pitchvideo_filename","ok_to_publish_pitchvideo","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","marginBottom","color","margin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAAgC,QAAhC;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,iBAAtC,EAAyDC,QAAzD,EAAmEC,UAAnE,QAAoF,oBAApF;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CAIA;AACA;AACA;;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AACA,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb,CAFe,CAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAde;AAelB;;AAhBD;AAAA;AAAA,6BAkBQ;AACJ,UAAMC,YAAY,GAAG;AACjBC,QAAAA,mBAAmB,EAAE,EADJ;AAEjBC,QAAAA,wBAAwB,EAAE;AAFT,OAArB;AADI,wBAM2C,KAAKL,KANhD;AAAA,UAMGM,OANH,eAMGA,OANH;AAAA,UAMYC,IANZ,eAMYA,IANZ;AAAA,UAMkBC,MANlB,eAMkBA,MANlB;AAAA,UAM0BC,OAN1B,eAM0BA,OAN1B;AAAA,UAMmCC,IANnC,eAMmCA,IANnC;AAOJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,OAArB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,IAArD;AAEA,aACI;AAGA,cAAC,MAAD;AACC,UAAA,aAAa,EAAEP,YADhB;AAEI,UAAA,kBAAkB,MAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIK,gBAA6B;AAAA,cAA1BU,MAA0B,QAA1BA,MAA0B;AAAA,cAAlBC,YAAkB,QAAlBA,YAAkB;AAC1BH,UAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,OAApB;AACA,iBACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,UAAD;AAAY,YAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoCJ,OAApC,CADJ,EAEI,MAAC,UAAD;AAAY,YAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,EAGI,MAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAHJ,EAKI;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,KAAK,EAAE;AAACM,cAAAA,YAAY,EAAE;AAAf,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AACI,YAAA,OAAO,EAAC,OADZ;AAEI,YAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAMI,MAAC,KAAD;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,KAAK,EAAEF,MAAM,CAACT,mBAFlB;AAGI,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHX;AAII,YAAA,IAAI,EAAC,qBAJT;AAKI,YAAA,SAAS,EAAExB,gBALf;AAMI,YAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CALJ,EAsBK,MAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yOAtBL,EAwBK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG;AACI,YAAA,OAAO,EAAC,OADZ;AAEI,YAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,EAMG,MAAC,KAAD;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,KAAK,EAAEqB,MAAM,CAACR,wBAFlB;AAGI,YAAA,KAAK,EAAE;AAAEW,cAAAA,KAAK,EAAE;AAAT,aAHX;AAII,YAAA,IAAI,EAAC,0BAJT;AAKI,YAAA,SAAS,EAAErB,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOI;AACI,YAAA,KAAK,EAAE;AAAEsB,cAAAA,MAAM,EAAE;AAAV,aADX;AAEI,YAAA,OAAO,EAAC,OAFZ;AAGI,YAAA,SAAS,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAKQ;AACA,YAAA,QAAQ,EAAEH,YADV;AAEA,YAAA,KAAK,EAAE;AAAEG,cAAAA,MAAM,EAAE;AAAV,aAFP;AAGA,YAAA,IAAI,EAAC,OAHL;AAIA,YAAA,IAAI,EAAC,0BAJL;AAKA,YAAA,KAAK,EAAC,KALN;AAMA,YAAA,EAAE,EAAC,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,CAPJ,EAqBI;AACI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aADX;AAEI,YAAA,OAAO,EAAC,OAFZ;AAGI,YAAA,SAAS,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAKQ;AACJ,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aADH;AAEA,YAAA,QAAQ,EAAEH,YAFV;AAGA,YAAA,IAAI,EAAC,OAHL;AAIA,YAAA,IAAI,EAAC,0BAJL;AAKA,YAAA,KAAK,EAAC,IALN;AAMA,YAAA,EAAE,EAAC,IANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,CArBJ,CANH,CAxBL,EAoEI,MAAC,MAAD;AACI,YAAA,OAAO,EAAE;AAAA,qBAAMH,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAAN;AAAA,aADb;AAEI,YAAA,MAAM,EAAC,SAFX;AAGI,YAAA,UAAU,EAAC,SAHf;AAII,YAAA,EAAE,EAAC,QAJP;AAKI,YAAA,KAAK,EAAE;AAAEI,cAAAA,MAAM,EAAE,MAAV;AAAkBD,cAAAA,KAAK,EAAE;AAAzB,aALX;AAMI,YAAA,OAAO,EAAC,YANZ;AAOI,YAAA,QAAQ,EAAC,QAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApEJ,CADJ;AAkFH,SAxFL;AAJJ;AA+FH;AA1HD;;AAAA;AAAA,EAAgC/B,SAAhC","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class PitchVideo extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        pitchvideo_filename: '',\n        ok_to_publish_pitchvideo: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload Pitch Video Slide</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your pitch video as a PowerPoint slide using the form below</Typography>\n                       \n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.pitchvideo_filename}\n                                style={{ color: '#134381' }}\n                                name=\"pitchvideo_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n\n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_pitchvideo}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}