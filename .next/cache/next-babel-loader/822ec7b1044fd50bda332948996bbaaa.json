{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Poster.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Poster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskType: ''\n    };\n  }\n\n  render() {\n    const emptyInitial = {\n      accept: '',\n      poster_filename: '',\n      author_notes: '',\n      ok_to_publish_poster: ''\n    };\n    const {\n      presets,\n      csrf,\n      apiUrl,\n      paperId,\n      type\n    } = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    return (// ! NEED PRESETS FOR TASKS\n      __jsx(Formik, {\n        initialValues: emptyInitial,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, ({\n        values,\n        handleChange\n      }) => {\n        console.log(values, 'Tasks');\n        return __jsx(StyledTask, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, paperId), __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Upload your Poster PDF\"), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Please upload your poster PDF using the form below.\"), __jsx(\"div\", {\n          className: \"task-checkboxField\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-checkboxField-label\",\n          style: {\n            color: '#134381'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"I have read the \", __jsx(Link, {\n          href: \"/authorsAreaInstructions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          className: \"task-link_bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Instructions for Preparing your Powerpoint Presentation\")), \" and have followed the guidance notes available there.\"), __jsx(Field, {\n          className: \"task-checkboxField-box\",\n          value: values.accept,\n          style: {\n            color: '#134381'\n          },\n          name: \"accept\",\n          component: CheckboxWithLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"task-field\",\n          style: {\n            marginBottom: '2rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Pitch video slide upload\"), __jsx(Field, {\n          className: \"task-input\",\n          value: values.poster_filename,\n          style: {\n            color: '#134381'\n          },\n          name: \"poster_filename\",\n          component: SimpleFileUpload,\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"task-notes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-notes-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Notes for reviewers:\"), __jsx(Field, {\n          className: \"task-notes-input\",\n          onClick: handleChange,\n          value: values.author_notes,\n          style: {\n            color: '#134381'\n          },\n          name: \"author_notes\",\n          component: \"textarea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n          className: \"task-field-radio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Grant permission?\"), __jsx(Field, {\n          className: \"task-radio\",\n          value: values.ok_to_publish_poster,\n          style: {\n            color: '#134381'\n          },\n          name: \"ok_to_publish_poster\",\n          component: RadioGroup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Yes, I grant permission for my presentation to be included\", __jsx(\"input\", {\n          onChange: handleChange,\n          style: {\n            margin: '1rem'\n          },\n          type: \"radio\",\n          name: \"ok_to_publish_poster\",\n          value: \"yes\",\n          id: \"yes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"No, I do not grant permission\", __jsx(\"input\", {\n          style: {\n            margin: '1rem'\n          },\n          onChange: handleChange,\n          type: \"radio\",\n          name: \"ok_to_publish_poster\",\n          value: \"no\",\n          id: \"no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })))), __jsx(Button, {\n          onClick: () => console.log(values),\n          bcolor: \"#134381\",\n          background: \"#134381\",\n          br: \"100rem\",\n          style: {\n            margin: \"3rem\",\n            color: '#FFF'\n          },\n          padding: \".5rem 4rem\",\n          fontSize: \"1.7rem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Send\"));\n      })\n    );\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Poster.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","Poster","constructor","props","state","taskType","render","emptyInitial","accept","poster_filename","author_notes","ok_to_publish_poster","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","color","marginBottom","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Poster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n \n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        poster_filename: '',        \n        author_notes: '',\n        ok_to_publish_poster: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload your Poster PDF</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your poster PDF using the form below.</Typography>\n\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            \n                            </Field>\n                        </div>\n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.poster_filename}\n                                style={{ color: '#134381' }}\n                                name=\"poster_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n                       \n                        <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                       \n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_poster}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_poster\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_poster\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_poster\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}