{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Authorprofile.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Select } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Button } from '../Button';\nimport { titles, countries } from './FormSelects';\nimport { AuthorSchema } from './FormControl';\nimport { StyledForm } from './Formstyles';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nexport var Authorprofile = function Authorprofile(props) {\n  var _useState = useState(false),\n      Toggle = _useState[0],\n      setToggle = _useState[1];\n\n  var _useState2 = useState(null),\n      Status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(false),\n      Loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId;\n  console.log({\n    presets: presets,\n    apiUrl: apiUrl\n  });\n  var url = apiUrl;\n  return __jsx(Formik, {\n    initialValues: presets || emptyInitial,\n    validationSchema: AuthorSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        validateForm = _ref.validateForm,\n        errors = _ref.errors,\n        setFieldTouched = _ref.setFieldTouched,\n        handleSubmit = _ref.handleSubmit,\n        submitForm = _ref.submitForm;\n\n    var allTouched =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('touched!');\n                console.log({\n                  errors: errors\n                });\n                _context.next = 4;\n                return _Object$keys(values).forEach(function (key) {\n                  setFieldTouched(key, true);\n                });\n\n              case 4:\n                _context.next = 6;\n                return validateForm().then(function (errors) {\n                  return _Object$keys(errors).length === 0 && onSubmit();\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function allTouched() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoading(true);\n                values.__csrf_token = csrf;\n                console.log('submitting');\n                _context2.next = 5;\n                return SendForm({\n                  values: values,\n                  url: url,\n                  csrf: csrf\n                });\n\n              case 5:\n                res = _context2.sent;\n                _context2.next = 8;\n                return res;\n\n              case 8:\n                _context2.t0 = _context2.sent;\n\n                if (!_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.t0 = res.status;\n\n              case 11:\n                data = _context2.t0;\n                console.log({\n                  status: status\n                });\n                data && setStatus(data) && setToggle(true) && setLoading(false);\n                return _context2.abrupt(\"return\");\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(React.Fragment, null, Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, Status), __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Title\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.title,\n      style: {\n        color: '#134381'\n      },\n      name: \"title\",\n      component: Select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, titles.map(function (option, i) {\n      return __jsx(\"option\", {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, option.label);\n    }))), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"First Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.firstname,\n      style: {\n        color: '#134381'\n      },\n      name: \"firstname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Last Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.lastname,\n      style: {\n        color: '#134381'\n      },\n      name: \"lastname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.email,\n      style: {\n        color: '#134381'\n      },\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Job Title:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.jobtitle,\n      style: {\n        color: '#134381'\n      },\n      name: \"jobtitle\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Company:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.company,\n      style: {\n        color: '#134381'\n      },\n      name: \"company\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Address:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address1,\n      style: {\n        color: '#134381'\n      },\n      name: \"address1\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address2,\n      style: {\n        color: '#134381'\n      },\n      name: \"address2\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address3,\n      style: {\n        color: '#134381'\n      },\n      name: \"address3\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"City:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.city,\n      style: {\n        color: '#134381'\n      },\n      name: \"city\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"State/ County/ Province:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.scp,\n      style: {\n        color: '#134381'\n      },\n      name: \"scp\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Postal/ Zip code:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.postal,\n      style: {\n        color: '#134381'\n      },\n      name: \"postal\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Country\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.country,\n      style: {\n        color: '#134381'\n      },\n      name: \"country\",\n      component: Select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, countries.map(function (option, i) {\n      return __jsx(\"option\", {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, option.label);\n    }))), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Phone:\"), __jsx(Field, {\n      placeholder: \"Please use the international code\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.phone,\n      style: {\n        color: '#134381'\n      },\n      name: \"phone\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Fax:\"), __jsx(Field, {\n      placeholder: \"Please use the international code\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.fax,\n      style: {\n        color: '#134381'\n      },\n      name: \"fax\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Choose a Password:\"), __jsx(Field, {\n      placeholder: \"If you dont wish to change your password please leave blank\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Confirm password:\"), __jsx(Field, {\n      placeholder: \"If you dont wish to change your password please leave blank\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"confirm_password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: function onClick() {\n        return allTouched();\n      },\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      padding: \".5rem 4rem\",\n      style: {\n        margin: \"3rem\"\n      },\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Submit\"), Loading && __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, Status)));\n  });\n};\nvar emptyInitial = {\n  title: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  jobtitle: '',\n  company: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  city: '',\n  scp: '',\n  postal: '',\n  country: '',\n  phone: '',\n  fax: '',\n  password: '',\n  confirmed_password: '',\n  __csrf_token: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Authorprofile.js"],"names":["React","Component","useState","useEffect","Formik","Form","Field","TextField","Select","CircularProgress","Button","titles","countries","AuthorSchema","StyledForm","SendForm","Typography","Authorprofile","props","Toggle","setToggle","Status","setStatus","Loading","setLoading","presets","csrf","apiUrl","paperId","console","log","url","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","forEach","key","then","length","onSubmit","__csrf_token","res","status","data","title","color","map","option","i","fontSize","cursor","value","label","firstname","lastname","email","jobtitle","company","address1","address2","address3","city","scp","postal","country","phone","fax","password","margin","confirmed_password"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAiC,oBAAjC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,eAAhC;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,kBACRhB,QAAQ,CAAC,KAAD,CADA;AAAA,MAC7BiB,MAD6B;AAAA,MACrBC,SADqB;;AAAA,mBAERlB,QAAQ,CAAC,IAAD,CAFA;AAAA,MAE7BmB,MAF6B;AAAA,MAErBC,SAFqB;;AAAA,mBAGNpB,QAAQ,CAAC,KAAD,CAHF;AAAA,MAG7BqB,OAH6B;AAAA,MAGpBC,UAHoB;;AAAA,MAK5BC,OAL4B,GAKMP,KALN,CAK5BO,OAL4B;AAAA,MAKnBC,IALmB,GAKMR,KALN,CAKnBQ,IALmB;AAAA,MAKbC,MALa,GAKMT,KALN,CAKbS,MALa;AAAA,MAKLC,OALK,GAKMV,KALN,CAKLU,OALK;AAMpCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,OAAO,EAAPA,OAAF;AAAWE,IAAAA,MAAM,EAANA;AAAX,GAAZ;AACA,MAAMI,GAAG,GAAGJ,MAAZ;AAEA,SACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAGF,OAAO,IAAIO,YAD/B;AAEI,IAAA,gBAAgB,EAAEnB,YAFtB;AAGI,IAAA,kBAAkB,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,gBAA8F;AAAA,QAA3FoB,MAA2F,QAA3FA,MAA2F;AAAA,QAAnFC,YAAmF,QAAnFA,YAAmF;AAAA,QAArEC,YAAqE,QAArEA,YAAqE;AAAA,QAAvDC,MAAuD,QAAvDA,MAAuD;AAAA,QAA/CC,eAA+C,QAA/CA,eAA+C;AAAA,QAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,QAAhBC,UAAgB,QAAhBA,UAAgB;;AAGxF,QAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AACfX,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAACM,kBAAAA,MAAM,EAANA;AAAD,iBAAZ;AAFe;AAAA,uBAGX,aAAYH,MAAZ,EAAoBQ,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACtCL,kBAAAA,eAAe,CAACK,GAAD,EAAM,IAAN,CAAf;AAA2B,iBADxB,CAHW;;AAAA;AAAA;AAAA,uBAMTP,YAAY,GAAGQ,IAAf,CAAoB,UAAAP,MAAM;AAAA,yBAAI,aAAYA,MAAZ,EAAoBQ,MAApB,KAA+B,CAA/B,IAAoCC,QAAQ,EAAhD;AAAA,iBAA1B,CANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVL,UAAU;AAAA;AAAA;AAAA,OAAhB;;AASA,QAAMK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBrB,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACFS,gBAAAA,MAAM,CAACa,YAAP,GAAsBpB,IAAtB;AACEG,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAHgB;AAAA,uBAIDf,QAAQ,CAAC;AAACkB,kBAAAA,MAAM,EAANA,MAAD;AAASF,kBAAAA,GAAG,EAAHA,GAAT;AAAcL,kBAAAA,IAAI,EAAJA;AAAd,iBAAD,CAJP;;AAAA;AAIdqB,gBAAAA,GAJc;AAAA;AAAA,uBAKAA,GALA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,+BAKOA,GAAG,CAACC,MALX;;AAAA;AAKdC,gBAAAA,IALc;AAMlBpB,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAACkB,kBAAAA,MAAM,EAANA;AAAD,iBAAZ;AACDC,gBAAAA,IAAI,IAAI3B,SAAS,CAAC2B,IAAD,CAAjB,IAA2B7B,SAAS,CAAC,IAAD,CAApC,IAA8CI,UAAU,CAAC,KAAD,CAAxD;AAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAARqB,QAAQ;AAAA;AAAA;AAAA,OAAd;;AAWH,WACI,4BACC1B,MAAM,IAAI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCE,MAApC,CADX,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEa,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACiB,KAHlB;AAII,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,SAAS,EAAE3C,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKG,MAAM,CAACyC,GAAP,CAAW,UAACC,MAAD,EAASC,CAAT;AAAA,aACR;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAvB;AAAkE,QAAA,KAAK,EAAEH,MAAM,CAACI,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwFJ,MAAM,CAACK,KAA/F,CADQ;AAAA,KAAX,CARL,CANJ,CADJ,EAmBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAExB,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC0B,SAHlB;AAII,MAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,WALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAnBJ,EAkCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC2B,QAHlB;AAII,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlCJ,EAiDI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC4B,KAHlB;AAII,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAjDJ,EAgEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC6B,QAHlB;AAII,MAAA,KAAK,EAAE;AAAEX,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAhEJ,EA+EI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC8B,OAHlB;AAII,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,SALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA/EJ,EA8FI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAAC+B,QAHlB;AAII,MAAA,KAAK,EAAE;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA9FJ,EA6GI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACgC,QAHlB;AAII,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA7GJ,EA4HI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACiC,QAHlB;AAII,MAAA,KAAK,EAAE;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA5HJ,EA2II;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACkC,IAHlB;AAII,MAAA,KAAK,EAAE;AAAEhB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA3IJ,EA0JI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACmC,GAHlB;AAII,MAAA,KAAK,EAAE;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,KALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1JJ,EAyKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACoC,MAHlB;AAII,MAAA,KAAK,EAAE;AAAElB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,QALT;AAMI,MAAA,SAAS,EAAE5C,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAzKJ,EAwLI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE2B,YAFb;AAGI,MAAA,KAAK,EAAED,MAAM,CAACqC,OAHlB;AAII,MAAA,KAAK,EAAE;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,SALT;AAMI,MAAA,SAAS,EAAE3C,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKI,SAAS,CAACwC,GAAV,CAAc,UAACC,MAAD,EAASC,CAAT;AAAA,aACX;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAvB;AAAkE,QAAA,KAAK,EAAEH,MAAM,CAACI,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwFJ,MAAM,CAACK,KAA/F,CADW;AAAA,KAAd,CARL,CANJ,CAxLJ,EA0MI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACK,MAAA,WAAW,EAAC,mCADjB;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAExB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACsC,KAJlB;AAKI,MAAA,KAAK,EAAE;AAAEpB,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1MJ,EA0NI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMI,MAAC,KAAD;AACK,MAAA,WAAW,EAAC,mCADjB;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAE2B,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACuC,GAJlB;AAKI,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,IAAI,EAAC,KANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1NJ,EA0OI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAMI,MAAC,KAAD;AACI,MAAA,WAAW,EAAC,6DADhB;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAE2B,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACwC,QAJlB;AAKI,MAAA,KAAK,EAAE;AAAEtB,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1OJ,EA0PI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAMI,MAAC,KAAD;AACI,MAAA,WAAW,EAAC,6DADhB;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAE2B,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACwC,QAJlB;AAKI,MAAA,KAAK,EAAE;AAAEtB,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,IAAI,EAAC,kBANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1PJ,EA4QI,MAAC,MAAD;AACQ,MAAA,OAAO,EAAE;AAAA,eAAOiC,UAAU,EAAjB;AAAA,OADjB;AAEQ,MAAA,MAAM,EAAC,SAFf;AAGQ,MAAA,UAAU,EAAC,SAHnB;AAIQ,MAAA,EAAE,EAAC,QAJX;AAKQ,MAAA,OAAO,EAAC,YALhB;AAMQ,MAAA,KAAK,EAAE;AAAEkC,QAAAA,MAAM,EAAE;AAAV,OANf;AAOQ,MAAA,QAAQ,EAAC,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5QJ,EAoRanD,OAAO,IAAI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApRxB,EAqRCJ,MAAM,IAAI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCE,MAApC,CArRX,CAFA,CADJ;AA6RH,GAzTL,CADJ;AA6TH,CAtUM;AAyUP,IAAMW,YAAY,GAAG;AACjBkB,EAAAA,KAAK,EAAE,EADU;AAEjBS,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,QAAQ,EAAE,EALO;AAMjBC,EAAAA,OAAO,EAAE,EANQ;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,QAAQ,EAAE,EARO;AASjBC,EAAAA,QAAQ,EAAE,EATO;AAUjBC,EAAAA,IAAI,EAAE,EAVW;AAWjBC,EAAAA,GAAG,EAAE,EAXY;AAYjBC,EAAAA,MAAM,EAAE,EAZS;AAajBC,EAAAA,OAAO,EAAE,EAbQ;AAcjBC,EAAAA,KAAK,EAAE,EAdU;AAejBC,EAAAA,GAAG,EAAE,EAfY;AAgBjBC,EAAAA,QAAQ,EAAE,EAhBO;AAiBjBE,EAAAA,kBAAkB,EAAE,EAjBH;AAkBjB7B,EAAAA,YAAY,EAAE;AAlBG,CAArB","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Select} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Button } from '../Button';\nimport {titles, countries} from './FormSelects';\nimport {AuthorSchema} from './FormControl';\nimport {StyledForm} from './Formstyles';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\n\n\nexport const Authorprofile = (props) => {\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const [Loading, setLoading] = useState(false);\n\n    const { presets, csrf, apiUrl, paperId} = props;\n    console.log({ presets, apiUrl})\n    const url = apiUrl;\n  \n    return (\n        <Formik\n            initialValues={ presets || emptyInitial }\n            validationSchema={AuthorSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendForm({values, url, csrf});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n\n                return (\n                    <>\n                    {Toggle && <Typography className=\"form-title\">{Status}</Typography>}\n                    <StyledForm>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Title\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.title}\n                                style={{ color: '#134381' }}\n                                name=\"title\"\n                                component={Select}\n                            >\n                                {titles.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                First Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.firstname}\n                                style={{ color: '#134381' }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Last Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ color: '#134381' }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.email}\n                                style={{ color: '#134381' }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Job Title:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ color: '#134381' }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ color: '#134381' }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Address:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address1}\n                                style={{ color: '#134381' }}\n                                name=\"address1\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address2}\n                                style={{ color: '#134381' }}\n                                name=\"address2\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address3}\n                                style={{ color: '#134381' }}\n                                name=\"address3\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                City:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.city}\n                                style={{ color: '#134381' }}\n                                name=\"city\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                State/ County/ Province:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.scp}\n                                style={{ color: '#134381' }}\n                                name=\"scp\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Postal/ Zip code:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.postal}\n                                style={{ color: '#134381' }}\n                                name=\"postal\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Country\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.country}\n                                style={{ color: '#134381' }}\n                                name=\"country\"\n                                component={Select}\n                            >\n                                {countries.map((option, i) =>\n                                    <option key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</option>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Phone:\n                        </label>\n                            <Field\n                                 placeholder=\"Please use the international code\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.phone}\n                                style={{ color: '#134381' }}\n                                name=\"phone\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Fax:\n                        </label>\n                            <Field\n                                 placeholder=\"Please use the international code\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fax}\n                                style={{ color: '#134381' }}\n                                name=\"fax\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Choose a Password:\n                        </label>\n                            <Field\n                                placeholder=\"If you dont wish to change your password please leave blank\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"password\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Confirm password:\n                        </label>\n                            <Field\n                                placeholder=\"If you dont wish to change your password please leave blank\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"confirm_password\"\n                                component={TextField}\n                            />\n                        </div>\n  \n                       \n                        <Button \n                                onClick={() =>  allTouched()}\n                                bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                padding=\".5rem 4rem\"\n                                style={{ margin: \"3rem\" }}\n                                fontSize=\"1.7rem\">Submit</Button>\n                                {Loading && <CircularProgress size={24} className=\"loading\"/>}\n                    {Toggle && <Typography className=\"form-title\">{Status}</Typography>}\n\n                    </StyledForm>\n                    </>                \n                )\n            }}\n        </Formik>\n    )\n};\n\n\nconst emptyInitial = {\n    title: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    jobtitle: '',\n    company: '',\n    address1: '',\n    address2: '',\n    address3: '',\n    city: '',\n    scp: '',\n    postal: '',\n    country: '',\n    phone: '',\n    fax: '',\n    password: '',\n    confirmed_password: '',\n    __csrf_token: ''\n\n}\n"]},"metadata":{},"sourceType":"module"}