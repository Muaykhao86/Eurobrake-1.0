{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport Page from '../components/Page';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    // need to remove the server-side injected CSS on the client side because of avoiding duplicated injection of CSS. as per material ui docs\n    value: function componentDidMount() {\n      var jssStyles = document.querySelector('#jss-server-side');\n      if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Page, null, __jsx(Component, pageProps));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}