{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Tasks.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { StyledTask } from './Taskstyles';\nimport InstructionsPopup from '../InstructionsPopup'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskType: ''\n    }; // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n  }\n\n  render() {\n    const emptyInitial = {\n      accept: '',\n      ppt_filename: '',\n      author_notes: ''\n    };\n    const {\n      presets,\n      csrf,\n      apiUrl,\n      paperId,\n      type\n    } = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    return (// ! NEED PRESETS FOR TASKS\n      __jsx(Formik, {\n        initialValues: emptyInitial,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, ({\n        values,\n        handleChange\n      }) => {\n        console.log(values, 'Tasks');\n        return __jsx(StyledTask, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, paperId), __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Permissions\"), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n          className: \"task-field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"PDF upload\"), __jsx(Field, {\n          className: \"task-radio\",\n          value: values.ok_to_publish_ppt,\n          style: {\n            color: '#134381'\n          },\n          name: \"ppt_filename\",\n          component: RadioGroup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Yes\", __jsx(\"input\", {\n          onChange: handleChange,\n          type: \"radio\",\n          name: \"ok_to_publish_ppt\",\n          value: \"yes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"No\", __jsx(\"input\", {\n          type: \"radio\",\n          name: \"ok_to_publish_ppt\",\n          value: \"no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })))), __jsx(Button, {\n          onClick: () => console.log(values),\n          bcolor: \"#134381\",\n          background: \"#134381\",\n          br: \"100rem\",\n          style: {\n            margin: \"3rem\",\n            color: '#FFF'\n          },\n          padding: \".5rem 4rem\",\n          fontSize: \"1.7rem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Send\"));\n      })\n    );\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Tasks.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","InstructionsPopup","Tasks","constructor","props","state","taskType","render","emptyInitial","accept","ppt_filename","author_notes","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","ok_to_publish_ppt","color","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {StyledTask} from './Taskstyles';\nimport InstructionsPopup from '../InstructionsPopup';\n\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Tasks extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n    // todo => depending on the task name I will render the task dynamicly \n    // * will have \n    //   paper\n    //   ppt\n    //   permissions\n    //   poster-accept\n    //   poster\n    //   bio\n    //   pitchvideo\n    // * EACH WILL BE A COMPONENT\n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Permissions</Typography>\n                        <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                PDF upload\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_ppt}\n                                style={{ color: '#134381' }}\n                                name=\"ppt_filename\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                    Yes\n                                        <input\n                                   \n                                        onChange={handleChange}                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label\">\n                                    No\n                                        <input\n                                      \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                        <Button \n                            onClick={() => console.log(values)}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}