{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Newsletter.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { LoginSchema } from './FormControl';\nexport const Newsletter = () => {\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null);\n  const FT = \"newsletter\";\n  const url = 'https://prelude.eurobrake.net/signup';\n  console.log({\n    url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    validateForm\n  }) => {\n    const onSubmit = async () => {\n      setLoading(true);\n      {\n        /* values.__csrf_token = csrf */\n      }\n      console.log('submitting');\n      let res = await SendForm({\n        values,\n        url,\n        csrf,\n        FT\n      });\n      let data = (await res) && res.status;\n      console.log({\n        status\n      });\n      data && setStatus(data) && setToggle(true) && setLoading(false);\n      return;\n    };\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : __jsx(Button, {\n      onClick: onSubmit,\n      padding: \".5rem \",\n      style: {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, Status ? Status : 'submit')));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nconst emptyInitial = {\n  name: '',\n  email: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Newsletter.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","LoginSchema","Newsletter","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","console","log","emptyInitial","values","handleChange","validateForm","onSubmit","res","csrf","data","status","name","fontSize","height","alignSelf","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {LoginSchema} from './FormControl';\n\n\n\n\nexport const Newsletter = () => {\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = \"newsletter\"\n    const url = 'https://prelude.eurobrake.net/signup';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm }) => {\n\n                const onSubmit = async () => {\n                   setLoading(true);\n                  {/* values.__csrf_token = csrf */}\n                    console.log('submitting')\n                  let res =  await SendForm({values, url, csrf, FT});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n\n                return (\n                    <StyledForm>\n                      <div className=\"form\" >\n\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"\">\n                                Name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                        onClick={onSubmit}\n                           padding=\".5rem \" \n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                      </div>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    email: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}