{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nexport var login = function login(_ref) {\n  var logintoken = _ref.logintoken;\n  cookie.set('logintoken', logintoken, {\n    expires: 1\n  });\n  Router.push('/authorsArea');\n}; // CHECK TOKEN, IF WE HAVE ONE RETURN TOKEN, IF WE DONT REDIRECT TO LOGIN PAGE\n\nexport var auth = function auth(ctx) {\n  var _cookies = cookies(ctx),\n      logintoken = _cookies.logintoken; // If there's no token, it means the user is not logged in.\n\n\n  if (!logintoken) {\n    if (ctx.req) {\n      // If `ctx.req` is available it means we are on the server.\n      ctx.res.writeHead(302, {\n        Location: '/login'\n      });\n      ctx.res.end();\n    } else {\n      // This should only happen on client.\n      Router.push('/login');\n    }\n  }\n\n  return logintoken; // const { logintoken } = cookies(ctx);\n  // if (ctx.req && !logintoken) {\n  //   ctx.res.writeHead(302, { Location: '/login' })\n  //   ctx.res.end()\n  // }\n  // console.log('AUTH => ', logintoken)\n  // if (!logintoken) {\n  //   Router.push('/login')\n  // }\n  // return logintoken\n}; // LOGOUT FUNCTION\n\nexport var logout =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return cookie.remove('logintoken');\n\n          case 2:\n            _context.next = 4;\n            return fetch('https://prelude.eurobrake.net/logout', {\n              credentials: 'include'\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json()[\"catch\"](function (error) {\n              return console.log(error);\n            });\n\n          case 7:\n            data = _context.sent;\n            console.log('logout', data); // To trigger the event listener we save some random data into the `logout` key\n\n            _context.next = 11;\n            return window.localStorage.setItem(\"logout\", _Date$now());\n\n          case 11:\n            _context.next = 13;\n            return Router.push(\"/login\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function logout() {\n    return _ref2.apply(this, arguments);\n  };\n}(); // IF LOGGED IN/ HAS TOKEN RETURN THE COMPONENT \n\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var Wrapper = function Wrapper(props) {\n    var syncLogout = function syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/login');\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener('storage', syncLogout);\n      return function () {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(ctx) {\n      var logintoken, componentProps;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              logintoken = auth(ctx); // ! AUTH\n\n              console.log('down to wrap your components', 'logintoken authors auth sync ', logintoken);\n              _context2.t0 = WrappedComponent.getInitialProps;\n\n              if (!_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 6;\n              return WrappedComponent.getInitialProps(ctx);\n\n            case 6:\n              _context2.t0 = _context2.sent;\n\n            case 7:\n              componentProps = _context2.t0;\n              console.log('withauthsync', 'ctx => ', ctx, 'logintoken => ', logintoken);\n              return _context2.abrupt(\"return\", _objectSpread({}, componentProps, {\n                logintoken: logintoken\n              }));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/utils/auth.js"],"names":["useEffect","Router","cookies","cookie","fetch","login","logintoken","set","expires","push","auth","ctx","req","res","writeHead","Location","end","logout","remove","credentials","json","error","console","log","data","window","localStorage","setItem","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","key","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\n\n\n\n\n\nexport const login = ({logintoken} ) => {\n  cookie.set('logintoken', logintoken, { expires: 1 })\n  Router.push('/authorsArea')\n}\n\n// CHECK TOKEN, IF WE HAVE ONE RETURN TOKEN, IF WE DONT REDIRECT TO LOGIN PAGE\n\nexport const auth = ctx => {\n\n  const { logintoken } = cookies(ctx);\n    // If there's no token, it means the user is not logged in.\n  if (!logintoken) {\n    if (ctx.req) {\n      // If `ctx.req` is available it means we are on the server.\n      ctx.res.writeHead(302, { Location: '/login' })\n      ctx.res.end()\n    } else {\n      // This should only happen on client.\n      Router.push('/login')\n    }\n  }\n\nreturn logintoken;\n\n  // const { logintoken } = cookies(ctx);\n\n  // if (ctx.req && !logintoken) {\n  //   ctx.res.writeHead(302, { Location: '/login' })\n  //   ctx.res.end()\n  // }\n  // console.log('AUTH => ', logintoken)\n  // if (!logintoken) {\n  //   Router.push('/login')\n  // }\n\n  // return logintoken\n}\n\n// LOGOUT FUNCTION\n\nexport const logout = async () => {\n \n  await cookie.remove('logintoken')\n \n  const res = await fetch('https://prelude.eurobrake.net/logout',\n    {\n      credentials: 'include'\n    });\n  const data = await res.json().catch(error => console.log(error));\n  console.log('logout', data);\n  // To trigger the event listener we save some random data into the `logout` key\n  await window.localStorage.setItem(\"logout\", Date.now());\n\n  await Router.push(\"/login\")\n};\n\n// IF LOGGED IN/ HAS TOKEN RETURN THE COMPONENT \n\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/login')\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout)\n\n      return () => {\n        window.removeEventListener('storage', syncLogout)\n        window.localStorage.removeItem('logout')\n      }\n    }, [null])\n\n    return <WrappedComponent {...props} />\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const logintoken = auth(ctx)                // ! AUTH\n    console.log('down to wrap your components', 'logintoken authors auth sync ', logintoken)\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx))\n    console.log('withauthsync', 'ctx => ', ctx, 'logintoken => ', logintoken)\n    return { ...componentProps, logintoken }\n  }\n\n  return Wrapper\n}\n"]},"metadata":{},"sourceType":"module"}