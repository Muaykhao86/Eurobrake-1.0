{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm, SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const PitchVideo = props => {\n  const emptyInitial = {\n    pitchvideo_filename: '',\n    ok_to_publish_pitchvideo: ''\n  };\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId,\n    type\n  } = props;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type);\n  const url = `https://prelude.eurobrake.net/authors/tasks/pitchvideo/${paperId}`;\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    setFieldValue,\n    isValidating,\n    validateForm,\n    handleSubmit,\n    errors\n  }) => {\n    console.log(values, 'Tasks');\n\n    const handleCheckBox = async () => {\n      const accept = values.accept;\n      const copyright = values.copyright;\n      accept === true && setFieldValue('accept', 'yes');\n      accept === false && setFieldValue('accept', '');\n      copyright === true && setFieldValue('copyright', 'yes');\n      copyright === false && setFieldValue('copyright', '');\n      return;\n    };\n\n    const onSubmit = () => {\n      values.__csrf_token = csrf;\n      console.log('submitting', values);\n      SendFile({\n        values,\n        url,\n        csrf\n      });\n    };\n\n    return __jsx(StyledTask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, paperId), __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Upload Pitch Video Slide\"), __jsx(Typography, {\n      gutterBottom: true,\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Please upload your pitch video as a PowerPoint slide using the form below\"), __jsx(\"div\", {\n      className: \"task-field\",\n      style: {\n        marginBottom: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Pitch video slide upload\"), __jsx(Field, {\n      className: \"task-input\",\n      value: values.pitchvideo_filename,\n      style: {\n        color: '#134381'\n      },\n      name: \"pitchvideo_filename\",\n      component: SimpleFileUpload,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), errors.pitchvideo_filename && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.pitchvideo_filename)), __jsx(Typography, {\n      gutterBottom: true,\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n      className: \"task-field-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Grant permission?\"), __jsx(Field, {\n      className: \"task-radio\",\n      value: values.ok_to_publish_pitchvideo,\n      style: {\n        color: '#134381'\n      },\n      name: \"ok_to_publish_pitchvideo\",\n      component: RadioGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"task-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Yes, I grant permission for my presentation to be included\", __jsx(\"input\", {\n      onChange: handleChange,\n      style: {\n        margin: '1rem'\n      },\n      type: \"radio\",\n      name: \"ok_to_publish_pitchvideo\",\n      value: \"yes\",\n      id: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"task-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"No, I do not grant permission\", __jsx(\"input\", {\n      style: {\n        margin: '1rem'\n      },\n      onChange: handleChange,\n      type: \"radio\",\n      name: \"ok_to_publish_pitchvideo\",\n      value: \"no\",\n      id: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), errors.ok_to_publish_pitchvideo && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, errors.ok_to_publish_pitchvideo)), __jsx(Button, {\n      onClick: () => validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit()),\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem\",\n        color: '#FFF'\n      },\n      padding: \".5rem 4rem\",\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Send\"));\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","SendFile","StyledTask","PitchVideo","props","emptyInitial","pitchvideo_filename","ok_to_publish_pitchvideo","presets","csrf","apiUrl","paperId","type","console","log","url","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","accept","copyright","onSubmit","__csrf_token","marginBottom","color","position","bottom","right","fontSize","margin","then","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm, SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const PitchVideo = (props) => {\n    const emptyInitial = {\n        pitchvideo_filename: '',\n        ok_to_publish_pitchvideo: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    const url = `https://prelude.eurobrake.net/authors/tasks/pitchvideo/${paperId}`;\n    \n    return (\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n            \n                console.log(values, 'Tasks')\n\n                const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    accept === false && setFieldValue('accept', '')\n                    copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '')\n                   return\n                }\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting', values)\n                    SendFile({values, url, csrf})\n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload Pitch Video Slide</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your pitch video as a PowerPoint slide using the form below</Typography>\n                       \n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.pitchvideo_filename}\n                                style={{ color: '#134381' }}\n                                name=\"pitchvideo_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                           {errors.pitchvideo_filename && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.pitchvideo_filename}</label>}\n\n                        </div>\n\n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_pitchvideo}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_pitchvideo && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_pitchvideo}</label>}\n\n                        </div>\n                       \n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}