{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/authorsArea.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport FormBuilder from '../components/FormBuilder';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nconst DemoDiv = styled.form.withConfig({\n  displayName: \"authorsArea__DemoDiv\",\n  componentId: \"sc-1oyt3et-0\"\n})([\"display:flex;flex-direction:column;align-self:center;margin-top:10rem;max-width:\", \";\"], props => props.theme.maxWidth);\nconst Demo = styled.h1.withConfig({\n  displayName: \"authorsArea__Demo\",\n  componentId: \"sc-1oyt3et-1\"\n})([\"padding:10rem;margin:5rem;color:orangered;\"]);\nexport default class AuthorsLogin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const formData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n    });\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  //     const res = await fetch('https://prelude.eurobrake.net/login', {\n  //             method: 'POST',\n  //             body: JSON.stringify(formData)\n  //         });\n  //     const data = await res.json().catch(error => console.log(error));\n  //     return {\n  //         loggedIn: data\n  //         }\n  // }\n  render() {\n    console.log(this.props);\n    const {\n      form\n    } = this.props.form;\n    return __jsx(DemoDiv, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, form[0].label), __jsx(\"input\", {\n      type: \"text\",\n      name: form[0].name,\n      onChange: this.saveToState,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, form[1].label), __jsx(\"input\", {\n      type: \"password\",\n      name: form[1].name,\n      onChange: this.saveToState,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAuthorsLogin.getInitialProps = async function () {\n  const res = await fetch('https://prelude.eurobrake.net/login');\n  const data = await res.json().catch(error => console.log(error));\n  ;\n  return {\n    form: data\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/authorsArea.js"],"names":["React","FormBuilder","fetch","styled","DemoDiv","form","props","theme","maxWidth","Demo","h1","AuthorsLogin","Component","constructor","e","setState","target","name","value","preventDefault","formData","username","state","password","render","console","log","onSubmit","label","saveToState","getInitialProps","res","data","json","catch","error"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormBuilder from '../components/FormBuilder';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\n\n\nconst DemoDiv = styled.form`\n\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    margin-top: 10rem;\n    max-width: ${props => props.theme.maxWidth};\n\n`;\n\n\nconst Demo = styled.h1`\n    padding: 10rem;\n    margin: 5rem;\n    color: orangered;\n\n`;\n\nexport default class AuthorsLogin extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state={\n        username: '',\n        password: '',\n    }\n}\n\n    saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) =>{\n        e.preventDefault()\n        const formData = {\n            username: this.state.username,\n            password: this.state.password\n        }\n    }\n    //     const res = await fetch('https://prelude.eurobrake.net/login', {\n    //             method: 'POST',\n    //             body: JSON.stringify(formData)\n    //         });\n    //     const data = await res.json().catch(error => console.log(error));\n    //     return {\n    //         loggedIn: data\n    //         }\n    // }\n\n\n\nrender(){\n    console.log(this.props)\n    const {form} = this.props.form;\n    return(\n        <DemoDiv onSubmit={this.onSubmit}>\n            <div className=\"\">\n                <label htmlFor=\"label\">{form[0].label}</label>\n                <input type=\"text\" name={form[0].name} onChange={this.saveToState} value={this.state.username}/>\n            </div>\n            <div className=\"\">    \n                <label htmlFor=\"label\">{form[1].label}</label>\n                <input type=\"password\" name={form[1].name} onChange={this.saveToState} value={this.state.password}/>\n            </div>\n            <input type=\"submit\" value=\"Submit\"/>\n        </DemoDiv>\n    )\n}\n}\n\n\n  AuthorsLogin.getInitialProps = async function (){\n  const res = await fetch('https://prelude.eurobrake.net/login');\n  const data = await res.json().catch(error => console.log(error));;\n   return {\n   form: data\n  };\n  };"]},"metadata":{},"sourceType":"module"}