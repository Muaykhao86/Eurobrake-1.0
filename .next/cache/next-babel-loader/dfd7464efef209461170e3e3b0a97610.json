{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/CountDownBanner.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '../components/Button';\nconst CDBanner = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDBanner\",\n  componentId: \"y7fpkn-0\"\n})([\"background-color:#134381;margin-top:0;min-width:100%;height:19.5rem;display:flex;justify-content:center;align-items:center;color:white;\"]);\nconst CDContainer = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDContainer\",\n  componentId: \"y7fpkn-1\"\n})([\"display:flex;max-width:\", \";align-items:center;margin-right:2rem;\"], props => props.theme.maxWidth);\nconst CDItem = styled.div.withConfig({\n  displayName: \"CountDownBanner__CDItem\",\n  componentId: \"y7fpkn-2\"\n})([\"position:relative;top:-2.5rem;display:flex;flex-flow:column;align-content:flex-start;align-items:flex-start;.timer{font-size:7rem;font-family:\", \";margin:0 1rem;}span{position:absolute;top:9rem;font-size:1.7rem;font-family:\", \";padding-left:2rem;}span:not(.noPad){padding-left:5rem;}\"], props => props.theme.MPBlack, props => props.theme.MPLight);\n\nclass CountDownBanner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const countDownDate = new Date(\"Jun 2, 2020 08:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance / (1000 * 60 * 60) % 24);\n      const minutes = Math.floor(distance / (1000 * 60) % 60);\n      const seconds = Math.floor(distance / 1000 % 60);\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return __jsx(CDBanner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(CDContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(CDItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, days), __jsx(\"span\", {\n      className: \"noPad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Days\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, hours > 9 ? ': ' + hours : `: 0` + hours), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Hours\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, minutes > 9 ? ': ' + minutes : `: 0` + minutes), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Minutes\")), __jsx(CDItem, {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, seconds > 9 ? ': ' + seconds : `: 0` + seconds), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Seconds\")), __jsx(Button, {\n      style: {\n        marginLeft: '5rem',\n        minHeight: '8rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Book Now\")));\n  }\n\n}\n\n;\nexport default CountDownBanner; // TODO LINE UP DAYS PROPERLY AND CHANGE DAYS TO 3 DIDGIT AND 00 FOR REPLACING 0","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/CountDownBanner.js"],"names":["React","Component","styled","Typography","Button","CDBanner","div","CDContainer","props","theme","maxWidth","CDItem","MPBlack","MPLight","CountDownBanner","constructor","state","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","countDownDate","Date","getTime","now","distance","Math","floor","setState","componentWillUnmount","clearInterval","render","marginLeft","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '../components/Button';\n\n\nconst CDBanner = styled.div`\n    background-color: #134381;\n    margin-top: 0;\n    min-width: 100%;\n    height: 19.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white; \n`;\n\nconst CDContainer = styled.div`\n    /* position: relative; */\n    display: flex;\n    max-width: ${props => props.theme.maxWidth};\n    align-items: center;\n    margin-right: 2rem; \n`;\n\nconst CDItem = styled.div`\n    position: relative;\n    top: -2.5rem;\n    display: flex;\n    flex-flow: column;\n    align-content: flex-start;\n    align-items: flex-start;\n\n.timer{\n    font-size: 7rem;\n    font-family: ${props => props.theme.MPBlack};\n    margin: 0 1rem ;\n}\n\n    span{\n    position: absolute;\n    top: 9rem;\n    font-size: 1.7rem;\n    font-family: ${props => props.theme.MPLight};\n    padding-left: 2rem;\n    }\n\n    span:not(.noPad){\n        padding-left: 5rem;\n    }\n`;\n\nclass CountDownBanner extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            days: undefined,\n            hours: undefined,\n            minutes: undefined,\n            seconds: undefined,\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.interval = setInterval(() => {\n            const countDownDate = new Date(\"Jun 2, 2020 08:00:00\").getTime();\n            const now = new Date().getTime();\n            const distance = countDownDate - now;\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance / (1000 * 60 * 60)) % 24);\n            const minutes = Math.floor((distance / (1000 * 60)) % 60);\n            const seconds = Math.floor((distance / 1000) % 60);\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { days, hours, minutes, seconds } = this.state\n\n        return (\n            <CDBanner>\n                <CDContainer>\n                    <CDItem>\n                       <Typography className=\"timer\">{days}</Typography>\n                        <span className=\"noPad\">Days</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{hours > 9 ? ': '+ hours : `: 0` + hours}</Typography>\n                        <span>Hours</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{minutes > 9 ? ': '+ minutes : `: 0` + minutes}</Typography>\n                        <span>Minutes</span>\n                    </CDItem>\n                    <CDItem className=\"countdown-item\">\n                        <Typography className=\"timer\">{seconds > 9 ? ': '+ seconds : `: 0` + seconds}</Typography>\n                        <span>Seconds</span>\n                    </CDItem>\n                    <Button style={{marginLeft: '5rem', minHeight: '8rem'}}>Book Now</Button>\n                </CDContainer>\n            </CDBanner>\n\n        )\n    }\n};\n\nexport default CountDownBanner;\n\n\n\n// TODO LINE UP DAYS PROPERLY AND CHANGE DAYS TO 3 DIDGIT AND 00 FOR REPLACING 0 "]},"metadata":{},"sourceType":"module"}