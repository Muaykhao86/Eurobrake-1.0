{"ast":null,"code":"import * as yup from 'yup'; // ? BELOW ATTEMPTED FIX AT CANT READ PROPERTY LENGTH OF UNDEFINED\n\nexport var countWords = function countWords(str) {\n  var matches = str != undefined && str.match(/[\\w\\d\\â€™\\'-]+/gi);\n\n  if (matches != undefined) {\n    return matches ? matches.length : 0;\n  } else return 0;\n};\nexport var ContactSchema = yup.object().shape({\n  name: yup.string().nullable(),\n  firstname: yup.string().required('Required'),\n  lastname: yup.string().required('Required'),\n  jobtitle: yup.string().nullable(),\n  company: yup.string().required('Required'),\n  address: yup.string().nullable(),\n  email: yup.string().required('Required').email(),\n  enquiry: yup.string().required('Required').test('wordCount', 'Max 750 words', function (value) {\n    return countWords(value) <= 750;\n  })\n});\nexport var AuthorSchema = yup.object().shape({\n  title: yup.string().nullable(),\n  firstname: yup.string().required('Required'),\n  lastname: yup.string().required('Required'),\n  email: yup.string().required('Required').email(),\n  jobtitle: yup.string().required('Required'),\n  company: yup.string().required('Required'),\n  address1: yup.string().required('Required'),\n  address2: yup.string().nullable(),\n  address3: yup.string().nullable(),\n  city: yup.string().required('Required'),\n  scp: yup.string().nullable(),\n  postal: yup.string().nullable(),\n  country: yup.string().required('Required'),\n  phone: yup.string().required('Required'),\n  fax: yup.string().nullable(),\n  password: yup.string().nullable(),\n  confirmed_password: yup.string().nullable()\n});\nexport var ResetSchema = yup.object().shape({\n  new_password: yup.string().required('Required').min(8, 'Password must be a least 8 characters long'),\n  confirm_password: yup.string().required('Required').min(8, 'Password must be a least 8 characters long').oneOf([yup.ref('new_password'), null], 'Passwords must match')\n});\nexport var LoginSchema = yup.object().shape({\n  username: yup.string().required('Required').email('Please enter a valid email'),\n  password: yup.string().required('Required')\n});\nexport var AbstractSchema = yup.object().shape({\n  author_title: yup.string().nullable(),\n  author_firstname: yup.string().test('Titlecase', 'name must be in title case!', function (value) {\n    return value[0] != value[0].toLowerCase();\n  }).required('Required'),\n  author_lastname: yup.string().test('Titlecase', 'name must be in title case!', function (value) {\n    return value[0] != value[0].toLowerCase();\n  }).required('Required'),\n  author_email: yup.string().required('Required').email(),\n  author_jobtitle: yup.string().required('Required'),\n  author_company: yup.string().required('Required'),\n  author_address1: yup.string().required('Required'),\n  author_address2: yup.string().nullable(),\n  author_address3: yup.string().nullable(),\n  author_city: yup.string().required('Required'),\n  author_scp: yup.string().required('Required'),\n  author_postal: yup.string().required('Required'),\n  author_country: yup.string().required('Required'),\n  author_phone: yup.string().required('Required'),\n  is_presenting_author: yup.string().required('Required'),\n  papertitle: yup.string().required('Required'),\n  \"abstract\": yup.string().test('wordCount', 'Max 750 words', function (value) {\n    return countWords(value) <= 750;\n  }).required('Required'),\n  keywords: yup.string().required('Required'),\n  consider_for_journal: yup.string().nullable(),\n  secondary_authors: yup.array().of(yup.object().shape({\n    title: yup.string().nullable(),\n    firstname: yup.string().test('Titlecase', 'name must be in title case!', function (value) {\n      return value[0] != value[0].toLowercase;\n    }).required('Required'),\n    lastname: yup.string().test('Titlecase', 'name must be in title case!', function (value) {\n      return value[0] != value[0].toLowercase;\n    }).required('Required'),\n    email: yup.string().email().required('Required'),\n    company: yup.string().required('Required'),\n    country: yup.string().required('Required'),\n    is_presenting_author: yup.string().required('Required')\n  }))\n});\nvar CV_SUPPORTED_FORMATS = ['.pdf', '.doc', '.docx', 'pdf', 'doc', 'docx', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\nvar PROOF_SUPPORTED_FORMATS = ['.jpg', '.jpeg', '.png', '.pdf', '.doc', '.docx', 'jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx', 'image/jpeg', \"image/png\", 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\nvar FILE_SIZE = 5033164800;\nexport var EsopSchema = yup.object().shape({\n  student_title: yup.string().nullable(),\n  student_firstname: yup.string().required('Required'),\n  student_lastname: yup.string().required('Required'),\n  student_email: yup.string().required('Required'),\n  student_address1: yup.string().required('Required'),\n  student_address2: yup.string().nullable(),\n  student_address3: yup.string().nullable(),\n  student_city: yup.string().required('Required'),\n  student_scp: yup.string().nullable(),\n  student_postal: yup.string().nullable(),\n  student_country: yup.string().required('Required'),\n  student_membersociety: yup.string().nullable(),\n  birth_city: yup.string().nullable(),\n  birth_country: yup.string().nullable(),\n  student_level_current: yup.string().required('Required'),\n  student_level_seeking: yup.string().required('Required'),\n  university_course: yup.string().required('Required'),\n  university_name: yup.string().required('Required'),\n  university_address1: yup.string().nullable(),\n  university_address2: yup.string().nullable(),\n  university_address3: yup.string().nullable(),\n  university_city: yup.string().required('Required'),\n  university_scp: yup.string().nullable(),\n  university_postal: yup.string().nullable(),\n  university_country: yup.string().required('Required'),\n  cv_filename: yup.mixed().required('Required').test(\"fileFormat\", \"Unsupported Format\", function (value) {\n    return value && CV_SUPPORTED_FORMATS.includes(value.type);\n  }),\n  personal_statement: yup.string().required('Required').test('wordCount', 'Max 250 words', function (value) {\n    return countWords(value) <= 250;\n  }).test('wordCount', 'Min 150 words', function (value) {\n    return countWords(value) >= 150;\n  }),\n  student_status_filename: yup.mixed().required('Required').test(\"fileFormat\", \"Unsupported Format\", function (value) {\n    return value && PROOF_SUPPORTED_FORMATS.includes(value.type);\n  }).test(\"fileSize\", \"File too large\", function (value) {\n    return value && value.size <= FILE_SIZE;\n  }),\n  question_1_answer: yup.string().required('Required'),\n  question_2_answer: yup.string().required('Required'),\n  question_3_answer: yup.string().required('Required'),\n  question_4_answer: yup.array().required('Required').max(3, 'Please select only three').min(3, 'Please select three'),\n  youtube_url: yup.string().nullable(),\n  roundtable: yup.array().nullable(),\n  roundtable_other: yup.string().nullable(),\n  marketing: yup.string().required('Required'),\n  marketing_other: yup.string().nullable(),\n  previous_participant: yup.string().required('Required'),\n  initiatives: yup.array().nullable(),\n  initiatives_other: yup.string().nullable(),\n  consent_sponsors: yup.string().nullable(),\n  consent_fiec: yup.string().nullable(),\n  consent_wep: yup.string().nullable(),\n  consent_bursary: yup.string().nullable(),\n  consent_events: yup.string().nullable(),\n  consent_yfia: yup.string().nullable(),\n  __csrf_token: yup.string()\n});","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/FormControl.js"],"names":["yup","countWords","str","matches","undefined","match","length","ContactSchema","object","shape","name","string","nullable","firstname","required","lastname","jobtitle","company","address","email","enquiry","test","value","AuthorSchema","title","address1","address2","address3","city","scp","postal","country","phone","fax","password","confirmed_password","ResetSchema","new_password","min","confirm_password","oneOf","ref","LoginSchema","username","AbstractSchema","author_title","author_firstname","toLowerCase","author_lastname","author_email","author_jobtitle","author_company","author_address1","author_address2","author_address3","author_city","author_scp","author_postal","author_country","author_phone","is_presenting_author","papertitle","keywords","consider_for_journal","secondary_authors","array","of","toLowercase","CV_SUPPORTED_FORMATS","PROOF_SUPPORTED_FORMATS","FILE_SIZE","EsopSchema","student_title","student_firstname","student_lastname","student_email","student_address1","student_address2","student_address3","student_city","student_scp","student_postal","student_country","student_membersociety","birth_city","birth_country","student_level_current","student_level_seeking","university_course","university_name","university_address1","university_address2","university_address3","university_city","university_scp","university_postal","university_country","cv_filename","mixed","includes","type","personal_statement","student_status_filename","size","question_1_answer","question_2_answer","question_3_answer","question_4_answer","max","youtube_url","roundtable","roundtable_other","marketing","marketing_other","previous_participant","initiatives","initiatives_other","consent_sponsors","consent_fiec","consent_wep","consent_bursary","consent_events","consent_yfia","__csrf_token"],"mappings":"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","sourcesContent":["import * as yup from 'yup';\n\n// ? BELOW ATTEMPTED FIX AT CANT READ PROPERTY LENGTH OF UNDEFINED\nexport const countWords = (str) => {\n  let matches = str != undefined && str.match(/[\\w\\d\\â€™\\'-]+/gi);\n  if(matches != undefined){\n  return matches ? matches.length : 0;\n  }else return 0\n\n}\n\nexport const ContactSchema = yup.object().shape({\n    name: yup.string().nullable(),\n    firstname: yup.string().required('Required'),\n    lastname:yup.string().required('Required'),\n    jobtitle:yup.string().nullable(),\n    company: yup.string().required('Required'),\n    address: yup.string().nullable(),\n    email: yup.string().required('Required')\n    .email(),\n    enquiry: yup.string().required('Required')\n     .test(\n        'wordCount',\n        'Max 750 words',\n        value => \n          countWords(value) <= 750\n      ),\n})\n\n\n\nexport const AuthorSchema = yup.object().shape({\n    title: yup.string().nullable(),\n    firstname: yup.string().required('Required'),\n    lastname:yup.string().required('Required'),\n    email: yup.string().required('Required')\n    .email(),\n    jobtitle:yup.string().required('Required'),\n    company: yup.string().required('Required'),\n    address1: yup.string().required('Required'),\n    address2: yup.string().nullable(),\n    address3: yup.string().nullable(),\n    city:yup.string().required('Required'),\n    scp:yup.string().nullable(),\n    postal: yup.string().nullable(),\n    country: yup.string().required('Required'),\n    phone: yup.string().required('Required'),\n    fax: yup.string().nullable(),\n    password:yup.string().nullable(),\n    confirmed_password: yup.string().nullable()\n\n})\n\nexport const ResetSchema = yup.object().shape({\n     new_password:  yup.string().required('Required')\n     .min(8, 'Password must be a least 8 characters long'),\n    confirm_password: yup.string().required('Required')\n    .min(8, 'Password must be a least 8 characters long')\n     .oneOf([yup.ref('new_password'), null],'Passwords must match')\n    \n});\n        \nexport const LoginSchema = yup.object().shape({\n    username: yup.string().required('Required')\n        .email('Please enter a valid email'),\n    password: yup.string().required('Required'),\n});\n        \nexport const AbstractSchema = yup.object().shape({\n    author_title: yup.string().nullable(),\n    author_firstname: yup.string().test(\n                'Titlecase',\n                'name must be in title case!',\n               value =>  value[0] != value[0].toLowerCase()\n            ).required('Required'),\n    author_lastname: yup.string().test(\n                'Titlecase',\n                'name must be in title case!',\n               value =>  value[0] != value[0].toLowerCase()\n            ).required('Required'),\n    author_email: yup.string().required('Required')\n        .email(),\n    author_jobtitle: yup.string().required('Required'),\n    author_company: yup.string().required('Required'),\n    author_address1: yup.string().required('Required'),\n    author_address2: yup.string().nullable(),\n    author_address3: yup.string().nullable(),\n    author_city: yup.string().required('Required'),\n    author_scp: yup.string().required('Required'),\n    author_postal: yup.string().required('Required'),\n    author_country: yup.string().required('Required'),\n    author_phone: yup.string().required('Required'),\n    is_presenting_author: yup.string().required('Required'),\n    papertitle: yup.string().required('Required'),   \n    abstract: yup.string().test(\n        'wordCount',\n        'Max 750 words',\n        value => \n          countWords(value) <= 750\n      ).required('Required'),\n    keywords: yup.string().required('Required'),\n    consider_for_journal: yup.string().nullable(),\n    secondary_authors: yup.array()\n        .of(yup.object().shape({\n            title: yup.string().nullable(),\n            firstname: yup.string().test(\n                'Titlecase',\n                'name must be in title case!',\n               value =>  value[0] != value[0].toLowercase \n            )\n                .required('Required'),\n            lastname: yup.string().test(\n                'Titlecase',\n                'name must be in title case!',\n               value =>  value[0] != value[0].toLowercase \n            )\n                .required('Required'),\n            email: yup.string()\n                .email()\n                .required('Required'),\n            company: yup.string()\n                .required('Required'),\n            country: yup.string()\n                .required('Required'),\n            is_presenting_author: yup.string()\n                .required('Required'),\n        }))\n});\n\n const CV_SUPPORTED_FORMATS = [\n     '.pdf', \n     '.doc', \n     '.docx',\n     'pdf', \n     'doc', \n     'docx',\n     'application/pdf', \n     'application/msword', \n     'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    ];\n\n const PROOF_SUPPORTED_FORMATS = [\n     '.jpg', \n     '.jpeg', \n     '.png', \n     '.pdf', \n     '.doc', \n     '.docx', \n     'jpg', \n     'jpeg', \n     'png', \n     'pdf', \n     'doc', \n     'docx', \n     'image/jpeg', \n     \"image/png\",\n    'application/pdf', \n     'application/msword', \n     'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    ];\n\n  const FILE_SIZE = 5033164800 ;\n\n\nexport const EsopSchema = yup.object().shape({\n    student_title: yup.string().nullable(),\n    student_firstname: yup.string().required('Required'),\n    student_lastname: yup.string().required('Required'),\n    student_email: yup.string().required('Required'),\n    student_address1: yup.string().required('Required'),\n    student_address2: yup.string().nullable(),\n    student_address3: yup.string().nullable(),\n    student_city: yup.string().required('Required'),\n    student_scp: yup.string().nullable(),\n    student_postal: yup.string().nullable(),\n    student_country: yup.string().required('Required'),\n    student_membersociety: yup.string().nullable(),\n    birth_city: yup.string().nullable(),\n    birth_country: yup.string().nullable(),\n    student_level_current: yup.string().required('Required'),\n    student_level_seeking: yup.string().required('Required'),\n    university_course: yup.string().required('Required'),\n    university_name: yup.string().required('Required'),\n    university_address1: yup.string().nullable(),\n    university_address2: yup.string().nullable(),\n    university_address3: yup.string().nullable(),\n    university_city: yup.string().required('Required'),\n    university_scp: yup.string().nullable(),\n    university_postal: yup.string().nullable(),\n    university_country: yup.string().required('Required'),\n    cv_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && CV_SUPPORTED_FORMATS.includes(value.type)),\n    personal_statement: yup.string().required('Required')\n      .test(\n        'wordCount',\n        'Max 250 words',\n        value => \n          countWords(value) <= 250\n      )\n      .test(\n        'wordCount',\n        'Min 150 words',\n        value => \n         countWords(value) >= 150\n      ),\n    student_status_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PROOF_SUPPORTED_FORMATS.includes(value.type))\n    .test(\n          \"fileSize\",\n          \"File too large\",\n          value => value && value.size <= FILE_SIZE\n        ),\n    question_1_answer: yup.string().required('Required'),\n    question_2_answer: yup.string().required('Required'),\n    question_3_answer: yup.string().required('Required'),\n    question_4_answer: yup.array().required('Required').max(3, 'Please select only three').min(3, 'Please select three'),\n    youtube_url: yup.string().nullable(),\n    roundtable: yup.array().nullable(),\n    roundtable_other: yup.string().nullable(),\n    marketing: yup.string().required('Required'),\n    marketing_other: yup.string().nullable(),\n    previous_participant: yup.string().required('Required'),\n    initiatives: yup.array().nullable(),\n    initiatives_other: yup.string().nullable(),\n    consent_sponsors: yup.string().nullable(),\n    consent_fiec: yup.string().nullable(),\n    consent_wep: yup.string().nullable(),\n    consent_bursary: yup.string().nullable(),\n    consent_events: yup.string().nullable(),\n    consent_yfia: yup.string().nullable(),\n    __csrf_token: yup.string()\n});\n"]},"metadata":{},"sourceType":"module"}