{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/f/[id]/[formType].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport cookies from 'next-cookies';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport OneForm from '../../../components/forms/OneForm';\nimport { LoginForm } from '../../../components/forms/LoginForm';\nimport { Button } from '../../../components/Button';\nimport { AbstractForm } from '../../../components/forms/Abstract';\nimport { Authorprofile } from '../../../components/forms/Authorprofile';\nimport { Exhibitorprofile } from '../../../components/forms/Exhibitorprofile';\nimport { StyledPage } from '../../../components/styles/PageStyles';\nimport HeroSection from '../../../components/HeroSection';\nimport { FixedDates } from '../../../components/Dates'; // import { Esop } from './Esop';\n// import { GetFormSSR } from '../../components/forms/FormActions';\n\nconst Form = props => {\n  const {\n    presets,\n    __csrf_token\n  } = props.data || {};\n  const {\n    apiUrl,\n    id,\n    formType,\n    taskType\n  } = props; // ? GETTIN FROM GET INITIAL PROPS\n\n  const FT = formType || '';\n  const TT = taskType || '';\n  console.log({\n    apiUrl,\n    id,\n    FT,\n    TT\n  });\n  return __jsx(React.Fragment, null, __jsx(HeroSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Eurobrake 2020\"), __jsx(StyledPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(FixedDates, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/authorsAreaDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Button, {\n    background: \"#134381\",\n    br: \"100rem\",\n    bcolor: \"#134381\",\n    style: {\n      marginLeft: 'auto',\n      color: \"#FFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Back to Dashboard\")), __jsx(OneForm, {\n    form: FT,\n    type: TT,\n    presets: presets,\n    csrf: __csrf_token,\n    apiUrl: apiUrl,\n    paperId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default Form;\n\nForm.getInitialProps = async context => {\n  const {\n    id,\n    taskUrl,\n    formType,\n    taskType\n  } = context.query;\n  const {\n    logintoken\n  } = cookies(context) || {};\n  let apiUrl = '';\n  if (formType == 'contact') apiUrl = `https://prelude.eurobrake.net/contact`;\n  if (formType == 'author') apiUrl = `https://prelude.eurobrake.net/authors/profile`;\n  if (formType == 'reset') apiUrl = `https://prelude.eurobrake.net/authors/profile`;\n  if (formType != 'reset' && formType != 'author' && formType != 'contact') apiUrl = `https://prelude.eurobrake.net/authors/edit/${id}`;\n  console.log('1st GIP', {\n    id,\n    logintoken,\n    apiUrl,\n    taskUrl,\n    formType,\n    taskType\n  });\n  console.log('props', {\n    id,\n    logintoken,\n    apiUrl,\n    taskUrl,\n    formType,\n    taskType\n  });\n\n  const redirectOnError = () => process.browser ? Router.push('/authorsArea') : context.res.writeHead(301, {\n    Location: '/authorsArea'\n  });\n\n  if (formType === 'reset') return {\n    apiUrl,\n    id,\n    formType,\n    taskType\n  }; // todo sort out real call\n\n  if (formType === 'contact') {\n    try {\n      const response = await fetch(apiUrl, {\n        credentials: 'include',\n        cache: 'no-cache',\n        headers: {\n          Authorization: 'Bearer ' + logintoken\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        console.log('res.ok 2nd GIP', data);\n        return {\n          data,\n          apiUrl,\n          id,\n          formType,\n          taskType\n        };\n      } else {\n        console.log('not reading success');\n        console.log('stringyfied', _JSON$stringify(data)); // https://github.com/developit/unfetch#caveats\n\n        return redirectOnError();\n      }\n    } catch (error) {\n      // Implementation or Network error\n      console.log(error);\n      return await redirectOnError();\n    }\n  } else if (logintoken) {\n    try {\n      const response = await fetch(apiUrl, {\n        credentials: 'include',\n        cache: 'no-cache',\n        headers: {\n          Authorization: 'Bearer ' + logintoken\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        console.log('res.ok 2nd GIP', data);\n        return {\n          data,\n          apiUrl,\n          id,\n          formType,\n          taskType\n        };\n      } else {\n        console.log('not reading success');\n        console.log('stringyfied', _JSON$stringify(data)); // https://github.com/developit/unfetch#caveats\n\n        return redirectOnError();\n      }\n    } catch (error) {\n      // Implementation or Network error\n      console.log(error);\n      return await redirectOnError();\n    }\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/f/[id]/[formType].js"],"names":["React","Component","cookies","Router","fetch","Link","OneForm","LoginForm","Button","AbstractForm","Authorprofile","Exhibitorprofile","StyledPage","HeroSection","FixedDates","Form","props","presets","__csrf_token","data","apiUrl","id","formType","taskType","FT","TT","console","log","marginLeft","color","getInitialProps","context","taskUrl","query","logintoken","redirectOnError","process","browser","push","res","writeHead","Location","response","credentials","cache","headers","Authorization","json","status","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport cookies from 'next-cookies';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport OneForm from '../../../components/forms/OneForm';\nimport { LoginForm } from '../../../components/forms/LoginForm';\nimport { Button } from '../../../components/Button';\nimport { AbstractForm } from '../../../components/forms/Abstract';\nimport { Authorprofile } from '../../../components/forms/Authorprofile';\nimport { Exhibitorprofile } from '../../../components/forms/Exhibitorprofile';\nimport { StyledPage } from '../../../components/styles/PageStyles';\nimport HeroSection from '../../../components/HeroSection';\nimport {FixedDates} from '../../../components/Dates';\n// import { Esop } from './Esop';\n// import { GetFormSSR } from '../../components/forms/FormActions';\nconst Form = props => {\n    const { presets, __csrf_token, } = props.data || {};\n    const {apiUrl, id, formType, taskType} = props;// ? GETTIN FROM GET INITIAL PROPS\n    const FT = formType || '';\n    const TT = taskType || '';\n    console.log({apiUrl, id, FT, TT})\n    return (\n        <>\n        <HeroSection>\n            Eurobrake 2020\n            </HeroSection>\n        <StyledPage>\n            <FixedDates/>\n            <Link href=\"/authorsAreaDash\">\n                          <Button\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        bcolor=\"#134381\"\n                        style={{ marginLeft: 'auto', color:\"#FFF\" }}\n                    >Back to Dashboard</Button>\n            </Link>\n            <OneForm form={FT} type={TT} presets={presets} csrf={__csrf_token} apiUrl={apiUrl} paperId={id}/>\n    </StyledPage>\n        </>\n    )\n}\nexport default Form\nForm.getInitialProps = async context => {\n    const { id, taskUrl, formType, taskType } = context.query ;\n    const { logintoken } = cookies(context) || {};\n    let apiUrl = '';\n   if(formType == 'contact') apiUrl = `https://prelude.eurobrake.net/contact` \n   if(formType == 'author') apiUrl = `https://prelude.eurobrake.net/authors/profile` \n   if(formType == 'reset') apiUrl = `https://prelude.eurobrake.net/authors/profile` \n   if(formType != 'reset' && formType != 'author' && formType != 'contact') apiUrl = `https://prelude.eurobrake.net/authors/edit/${id}`\n   \n    console.log('1st GIP', { id, logintoken, apiUrl, taskUrl, formType, taskType })\n    console.log('props', { id, logintoken, apiUrl, taskUrl, formType, taskType })\n    const redirectOnError = () =>\n        process.browser\n            ? Router.push('/authorsArea')\n            : context.res.writeHead(301, { Location: '/authorsArea' })\n\n    if(formType === 'reset') return { apiUrl, id, formType, taskType}// todo sort out real call\n    if(formType === 'contact') {\n        try {\n            const response = await fetch(apiUrl, {\n                credentials: 'include',\n                cache: 'no-cache',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            })\n            const data = await response.json()\n            if (data.status === 'success') {\n                console.log('res.ok 2nd GIP', data)\n                return { data, apiUrl, id, formType, taskType }\n            }\n            else {\n                console.log('not reading success')\n                console.log('stringyfied', JSON.stringify(data))\n                // https://github.com/developit/unfetch#caveats\n                return redirectOnError()\n            }\n        } catch (error) {\n            // Implementation or Network error\n            console.log(error)\n            return await redirectOnError()\n        }\n    }\n   else if (logintoken) {\n        try {\n            const response = await fetch(apiUrl, {\n                credentials: 'include',\n                cache: 'no-cache',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            })\n            const data = await response.json()\n            if (data.status === 'success') {\n                console.log('res.ok 2nd GIP', data)\n                return { data, apiUrl, id, formType, taskType }\n            }\n            else {\n                console.log('not reading success')\n                console.log('stringyfied', JSON.stringify(data))\n                // https://github.com/developit/unfetch#caveats\n                return redirectOnError()\n            }\n        } catch (error) {\n            // Implementation or Network error\n            console.log(error)\n            return await redirectOnError()\n        }\n    \n    }     \n}\n   "]},"metadata":{},"sourceType":"module"}