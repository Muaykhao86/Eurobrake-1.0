{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login } from '../../utils/auth';\nexport function GetFormSSR(_x) {\n  return _GetFormSSR.apply(this, arguments);\n}\n\nfunction _GetFormSSR() {\n  _GetFormSSR = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var url, context, _cookies, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _ref.url, context = _ref.context;\n            // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n            _cookies = cookies(context), logintoken = _cookies.logintoken;\n            console.log({\n              logintoken: logintoken\n            });\n            _context.prev = 3;\n            apiUrl = url;\n            _context.next = 7;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              cache: 'no-cache',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            data = _context.sent;\n\n            if (!(data.status === 'success')) {\n              _context.next = 17;\n              break;\n            }\n\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token);\n            return _context.abrupt(\"return\", data);\n\n          case 17:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 20:\n            _context.next = 25;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](3);\n            console.error('Failed to get form, please try again', _context.t0); // return error.message\n\n          case 25:\n            return _context.abrupt(\"return\");\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 22]]);\n  }));\n  return _GetFormSSR.apply(this, arguments);\n}\n\nexport function GetForm(_x2) {\n  return _GetForm.apply(this, arguments);\n}\n\nfunction _GetForm() {\n  _GetForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(url) {\n    var _cookie$get, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _cookie$get = cookie.get(), logintoken = _cookie$get.logintoken;\n            console.log({\n              logintoken: logintoken\n            });\n            _context2.prev = 2;\n            apiUrl = url;\n            _context2.next = 6;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return response.json();\n\n          case 9:\n            data = _context2.sent;\n\n            if (!(data.status === 'success')) {\n              _context2.next = 16;\n              break;\n            }\n\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token);\n            return _context2.abrupt(\"return\", data);\n\n          case 16:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 19:\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.error('Failed to get form, please try again', _context2.t0); // return error.message\n\n          case 24:\n            return _context2.abrupt(\"return\");\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 21]]);\n  }));\n  return _GetForm.apply(this, arguments);\n}\n\nexport function SendFile(_x3) {\n  return _SendFile.apply(this, arguments);\n}\n\nfunction _SendFile() {\n  _SendFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref2) {\n    var values, url, _cookie$get2, logintoken;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            values = _ref2.values, url = _ref2.url;\n            values.accept && values.accept === true ? values.accept = 'yes' : null;\n            values.copyright && values.copyright === true ? values.copyright = 'yes' : null; // const formData = new FormData(values);\n\n            _cookie$get2 = cookie.get(), logintoken = _cookie$get2.logintoken; // formData.append('filename', file);\n\n            console.log({\n              logintoken: logintoken,\n              values: values,\n              url: url\n            }); // if (logintoken && csrf && file) {\n            //     try {\n            //         const apiUrl = url;\n            //         const response = await fetch(apiUrl, {\n            //             method: 'POST',\n            //             body: formData,\n            //             credentials: 'include',\n            //             headers: {\n            //                 Authorization: 'Bearer ' + logintoken,\n            //             }\n            //         });\n            //         const data = await response.json();\n            //         await console.log({ data })\n            //         if (data.status === 'success') {\n            //             console.log('getForm', data);\n            //         } else {\n            //             let error = new Error(data.error)\n            //             error.response = response\n            //             throw error\n            //         }\n            //     } catch (error) {\n            //         console.error(\n            //             'Failed to get form, please try again', error\n            //         )\n            //         // this.setState({ error: error.message });\n            //     }\n            // }\n\n            return _context3.abrupt(\"return\");\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _SendFile.apply(this, arguments);\n}\n\nexport function SendForm(_x4) {\n  return _SendForm.apply(this, arguments);\n}\n\nfunction _SendForm() {\n  _SendForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(_ref3) {\n    var csrf, values, url, form, _cookie$get3, logintoken, apiUrl, response, data, error, _response, _data, _logintoken, _error;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            csrf = _ref3.csrf, values = _ref3.values, url = _ref3.url;\n            form = _JSON$stringify(values);\n            _cookie$get3 = cookie.get(), logintoken = _cookie$get3.logintoken;\n            console.log({\n              url: url,\n              form: form\n            });\n\n            if (!(logintoken && csrf && form)) {\n              _context4.next = 25;\n              break;\n            }\n\n            _context4.prev = 5;\n            apiUrl = url;\n            _context4.next = 9;\n            return fetch(apiUrl, {\n              method: 'POST',\n              body: form,\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken,\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 9:\n            response = _context4.sent;\n            _context4.next = 12;\n            return response.json();\n\n          case 12:\n            data = _context4.sent;\n\n            if (!(data.status === 'success')) {\n              _context4.next = 17;\n              break;\n            }\n\n            console.log('getForm', data);\n            _context4.next = 20;\n            break;\n\n          case 17:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 20:\n            _context4.next = 25;\n            break;\n\n          case 22:\n            _context4.prev = 22;\n            _context4.t0 = _context4[\"catch\"](5);\n            console.error('Failed to get form, please try again', _context4.t0);\n\n          case 25:\n            if (!(url === 'https://prelude.eurobrake.net/authors/login')) {\n              _context4.next = 49;\n              break;\n            }\n\n            console.log({\n              url: url,\n              form: form\n            });\n            _context4.prev = 27;\n            _context4.next = 30;\n            return fetch(url, {\n              method: 'POST',\n              credentials: 'include',\n              body: form,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 30:\n            _response = _context4.sent;\n            _context4.next = 33;\n            return _response.json();\n\n          case 33:\n            _data = _context4.sent;\n\n            if (!(_data.status === 'success')) {\n              _context4.next = 41;\n              break;\n            }\n\n            _logintoken = _data.logintoken;\n            _context4.next = 38;\n            return login({\n              logintoken: _logintoken\n            });\n\n          case 38:\n            return _context4.abrupt(\"return\", {});\n\n          case 41:\n            _error = new Error(_data.error);\n            _error.response = _response;\n            throw _error;\n\n          case 44:\n            _context4.next = 49;\n            break;\n\n          case 46:\n            _context4.prev = 46;\n            _context4.t1 = _context4[\"catch\"](27);\n            console.error('Failed to login, please try again', _context4.t1);\n\n          case 49:\n            return _context4.abrupt(\"return\");\n\n          case 50:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[5, 22], [27, 46]]);\n  }));\n  return _SendForm.apply(this, arguments);\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/FormActions.js"],"names":["cookie","cookies","fetch","login","GetFormSSR","url","context","logintoken","console","log","apiUrl","credentials","cache","headers","Authorization","response","json","data","status","__csrf_token","error","Error","GetForm","get","SendFile","values","accept","copyright","SendForm","csrf","form","method","body"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\nexport async function GetFormSSR({url, context}) {\n    // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n    const { logintoken } = cookies(context);\n    console.log({logintoken})\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\n    \nexport async function SendFile({ values, url }) {\n    values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    // const formData = new FormData(values);\n    const { logintoken } = cookie.get();\n    // formData.append('filename', file);\n    console.log({ logintoken, values, url})\n    // if (logintoken && csrf && file) {\n    //     try {\n    //         const apiUrl = url;\n    //         const response = await fetch(apiUrl, {\n    //             method: 'POST',\n    //             body: formData,\n    //             credentials: 'include',\n    //             headers: {\n    //                 Authorization: 'Bearer ' + logintoken,\n    //             }\n    //         });\n    //         const data = await response.json();\n    //         await console.log({ data })\n    //         if (data.status === 'success') {\n    //             console.log('getForm', data);\n\n    //         } else {\n    //             let error = new Error(data.error)\n    //             error.response = response\n    //             throw error\n    //         }\n    //     } catch (error) {\n    //         console.error(\n    //             'Failed to get form, please try again', error\n    //         )\n    //         // this.setState({ error: error.message });\n    //     }\n    // }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url }) {\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        console.log({url, form});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST', \n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/authors/login' ){\n        console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n         }\n        }\n    return\n    }\n\n"]},"metadata":{},"sourceType":"module"}