{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/exhibitorsArea.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport FormBuilder from '../components/FormBuilder';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nconst DemoDiv = styled.form.withConfig({\n  displayName: \"exhibitorsArea__DemoDiv\",\n  componentId: \"sc-1h2s0md-0\"\n})([\"display:flex;flex-direction:column;align-self:center;margin-top:10rem;max-width:\", \";\"], props => props.theme.maxWidth);\nconst Demo = styled.h1.withConfig({\n  displayName: \"exhibitorsArea__Demo\",\n  componentId: \"sc-1h2s0md-1\"\n})([\"padding:10rem;margin:5rem;color:orangered;\"]);\nexport default class ExhibitorsArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      console.log('click');\n      const formData = {\n        username: this.state.username,\n        password: this.state.password\n      }; // let res = await fetch('https://prelude.eurobrake.net/login', {\n      //         method: 'POST',\n      //         credentials: 'include',\n      //         body: JSON.stringify(formData)\n      //     });\n      // const data = await res.json().catch(error => console.log(error));\n      // console.log(data);\n      // return {\n      //     loggedIn: data \n      //     }\n    });\n\n    this.state = {\n      username: '',\n      password: '',\n      loggedIn: false\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      loggedIn\n    } = this.state;\n    const {\n      form\n    } = this.props.form;\n    return __jsx(DemoDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, loggedIn ? __jsx(DemoDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"You are logged in!!!!\")) : __jsx(DemoDiv, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, form[0].label), __jsx(\"input\", {\n      type: \"text\",\n      name: form[0].name,\n      onChange: this.saveToState,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, form[1].label), __jsx(\"input\", {\n      type: \"password\",\n      name: form[1].name,\n      onChange: this.saveToState,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n} // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n\nExhibitorsLogin.getInitialProps = async function () {\n  let res = await fetch('https://prelude.eurobrake.net/login');\n  const data = await res.json().catch(error => console.log(error));\n  ;\n  return {\n    form: data\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/exhibitorsArea.js"],"names":["React","FormBuilder","fetch","styled","DemoDiv","form","props","theme","maxWidth","Demo","h1","ExhibitorsArea","Component","constructor","e","setState","target","name","value","preventDefault","console","log","formData","username","state","password","loggedIn","render","onSubmit","label","saveToState","ExhibitorsLogin","getInitialProps","res","data","json","catch","error"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormBuilder from '../components/FormBuilder';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\n\n\nconst DemoDiv = styled.form`\n\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    margin-top: 10rem;\n    max-width: ${props => props.theme.maxWidth};\n\n`;\n\n\nconst Demo = styled.h1`\n    padding: 10rem;\n    margin: 5rem;\n    color: orangered;\n\n`;\n\nexport default class ExhibitorsArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            loggedIn: false,\n        }\n    }\n\n    saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        console.log('click');\n        const formData = {\n            username: this.state.username,\n            password: this.state.password,\n\n        }\n\n        // let res = await fetch('https://prelude.eurobrake.net/login', {\n        //         method: 'POST',\n        //         credentials: 'include',\n        //         body: JSON.stringify(formData)\n        //     });\n        // const data = await res.json().catch(error => console.log(error));\n        // console.log(data);\n        // return {\n        //     loggedIn: data \n        //     }\n    }\n\n\n\n    render() {\n        console.log(this.props)\n        const {loggedIn} = this.state;\n        const { form } = this.props.form;\n        return (\n                <DemoDiv>\n\n            { loggedIn ?\n                   (<DemoDiv>\n                        <h1>You are logged in!!!!</h1>\n                    </DemoDiv> \n                    )\n                    :\n                    (\n                    <DemoDiv onSubmit={this.onSubmit}>\n                        <div className=\"\">\n                            <label htmlFor=\"label\">{form[0].label}</label>\n                            <input type=\"text\" name={form[0].name} onChange={this.saveToState} value={this.state.username} />\n                        </div>\n                        <div className=\"\">\n                            <label htmlFor=\"label\">{form[1].label}</label>\n                            <input type=\"password\" name={form[1].name} onChange={this.saveToState} value={this.state.password} />\n                        </div>\n                        <input type=\"submit\" value=\"Submit\" />\n                    </DemoDiv>\n                    )\n            }\n                </DemoDiv>\n            )\n        \n    }\n}\n\n// action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\nExhibitorsLogin.getInitialProps = async function () {\n\n            let res = await fetch('https://prelude.eurobrake.net/login');\n            const data = await res.json().catch(error => console.log(error));;\n            return {\n                form: data\n            };\n          \n};"]},"metadata":{},"sourceType":"module"}