{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Contact.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { LoginSchema } from './FormControl'; // async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport var ContactForm = function ContactForm() {\n  var _useState = useState(false),\n      Loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var FT = 'contact';\n  var url = 'https://prelude.eurobrake.net/contact';\n  console.log({\n    url: url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        validateForm = _ref.validateForm,\n        errors = _ref.errors,\n        setFieldTouched = _ref.setFieldTouched,\n        handleSubmit = _ref.handleSubmit,\n        submitForm = _ref.submitForm;\n\n    var allTouched =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('touched!');\n                console.log({\n                  errors: errors\n                });\n                _context.next = 4;\n                return _Object$keys(values).forEach(function (key) {\n                  setFieldTouched(key, true);\n                });\n\n              case 4:\n                _context.next = 6;\n                return validateForm().then(function (errors) {\n                  return _Object$keys(errors).length === 0 && onSubmit();\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function allTouched() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoading(true);\n                values.__csrf_token = csrf;\n                console.log('submitting');\n                _context2.next = 5;\n                return SendForm({\n                  values: values,\n                  url: url,\n                  csrf: csrf,\n                  FT: FT\n                });\n\n              case 5:\n                res = _context2.sent;\n                _context2.next = 8;\n                return res;\n\n              case 8:\n                _context2.t0 = _context2.sent;\n\n                if (!_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.t0 = res.status;\n\n              case 11:\n                data = _context2.t0;\n                console.log({\n                  status: status\n                });\n                data && setStatus(data) && setToggle(true) && setLoading(false);\n                return _context2.abrupt(\"return\");\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"firstname\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"First name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.fisrstname,\n      style: {},\n      name: \"firstname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"lastname\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Last name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.lastname,\n      style: {},\n      name: \"lastname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"jobtitle\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Job title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.jobtitle,\n      style: {},\n      name: \"jobtitle\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"company\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Company:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.company,\n      style: {},\n      name: \"company\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"address\",\n      className: \"form-notes-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Address:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.address,\n      style: {},\n      name: \"address\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"enquiry\",\n      className: \"form-notes-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Your message:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.enquiry,\n      style: {},\n      name: \"enquiry\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }) : __jsx(Button, {\n      onClick: allTouched,\n      padding: \".5rem \",\n      style: {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, Status ? Status : 'submit'));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nvar emptyInitial = {\n  name: '',\n  firstneme: '',\n  lastname: '',\n  jobtitle: '',\n  company: '',\n  address: '',\n  email: '',\n  enquiry: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Contact.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","LoginSchema","ContactForm","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","console","log","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","forEach","key","then","length","onSubmit","__csrf_token","csrf","res","status","data","name","fisrstname","lastname","jobtitle","company","address","enquiry","fontSize","height","alignSelf","firstneme","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {LoginSchema} from './FormControl';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const ContactForm = () => {\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = 'contact';\n    const url = 'https://prelude.eurobrake.net/contact';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            enableReinitialize\n        >\n             {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendForm({values, url, csrf, FT});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n\n                return (\n                    <StyledForm>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label\">\n                                Title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"firstname\"\n                                className=\"form-label\">\n                                First name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fisrstname}\n                                style={{ }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"lastname\"\n                                className=\"form-label\">\n                                Last name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"jobtitle\"\n                                className=\"form-label\">\n                                Job title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"company\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"address\"\n                                className=\"form-notes-label\">\n                                Address:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.address}\n                                style={{ }}\n                                name=\"address\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"enquiry\"\n                                className=\"form-notes-label\">\n                                Your message:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.enquiry}\n                                style={{ }}\n                                name=\"enquiry\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                        onClick={allTouched}\n                           padding=\".5rem \" \n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    firstneme: '',\n    lastname: '',\n    jobtitle: '',\n    company: '',\n    address: '',\n    email: '',\n    enquiry: ''\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}