{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm, SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport { PitchVideoSchema } from '../TaskControl'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const PitchVideo = props => {\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null);\n  const emptyInitial = {\n    pitchvideo_filename: '',\n    ok_to_publish_pitchvideo: ''\n  };\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId,\n    type\n  } = props;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type);\n  const url = `https://prelude.eurobrake.net/authors/tasks/pitchvideo/${paperId}`;\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: PitchVideoSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    setFieldTouched,\n    isValidating,\n    validateForm,\n    handleSubmit,\n    errors\n  }) => {\n    const allTouched = async () => {\n      console.log('touched!');\n      console.log({\n        errors\n      });\n      await _Object$keys(values).forEach(key => {\n        setFieldTouched(key, true);\n      });\n      await validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit());\n    };\n\n    const onSubmit = async () => {\n      setLoading(true);\n      values.__csrf_token = csrf;\n      console.log('submitting');\n      let res = await SendFile({\n        values,\n        url,\n        csrf\n      });\n      let data = (await res) && res.status;\n      console.log({\n        status\n      });\n      data && setStatus(data) && setToggle(true) && setLoading(false);\n      return;\n    };\n\n    return __jsx(StyledTask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, paperId), __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Upload Pitch Video Slide\"), __jsx(Typography, {\n      gutterBottom: true,\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Please upload your pitch video as a PowerPoint slide using the form below\"), __jsx(\"div\", {\n      className: \"task-field\",\n      style: {\n        marginBottom: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Pitch video slide upload\"), __jsx(Field, {\n      className: \"task-input\",\n      value: values.pitchvideo_filename,\n      style: {\n        color: '#134381'\n      },\n      name: \"pitchvideo_filename\",\n      component: SimpleFileUpload,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), errors.pitchvideo_filename && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-2rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, errors.pitchvideo_filename)), __jsx(Typography, {\n      gutterBottom: true,\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n      className: \"task-field-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Grant permission?\"), __jsx(Field, {\n      className: \"task-radio\",\n      value: values.ok_to_publish_pitchvideo,\n      style: {\n        color: '#134381'\n      },\n      name: \"ok_to_publish_pitchvideo\",\n      component: RadioGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"task-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      onChange: handleChange,\n      style: {\n        margin: '1rem'\n      },\n      type: \"radio\",\n      name: \"ok_to_publish_pitchvideo\",\n      value: \"yes\",\n      id: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"Yes, I grant permission for my presentation to be included\"), __jsx(\"label\", {\n      style: {\n        margin: '1rem'\n      },\n      htmlFor: \"label\",\n      className: \"task-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      style: {\n        margin: '1rem'\n      },\n      onChange: handleChange,\n      type: \"radio\",\n      name: \"ok_to_publish_pitchvideo\",\n      value: \"no\",\n      id: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"No, I do not grant permission\")), errors.ok_to_publish_pitchvideo && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, errors.ok_to_publish_pitchvideo)), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : __jsx(Button, {\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \".5rem 0\"\n      },\n      fontSize: \"2rem\",\n      onClick: allTouched,\n      style: {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, Status ? Status : 'submit'));\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PitchVideo.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","CircularProgress","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","SendFile","StyledTask","PitchVideoSchema","PitchVideo","props","Loading","setLoading","Toggle","setToggle","Status","setStatus","emptyInitial","pitchvideo_filename","ok_to_publish_pitchvideo","presets","csrf","apiUrl","paperId","type","console","log","url","values","handleChange","setFieldTouched","isValidating","validateForm","handleSubmit","errors","allTouched","forEach","key","then","length","onSubmit","__csrf_token","res","data","status","marginBottom","color","position","bottom","right","fontSize","margin","height","alignSelf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAAgC,QAAhC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,iBAAtC,EAAyDC,QAAzD,EAAmEC,UAAnE,QAAoF,oBAApF;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,gBAAnC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAAQC,gBAAR,QAA+B,gBAA/B,C,CAIA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACJ,QAAM;AAAA,OAACoB,MAAD;AAAA,OAASC;AAAT,MAAsBrB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACsB,MAAD;AAAA,OAASC;AAAT,MAAsBvB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMwB,YAAY,GAAG;AACjBC,IAAAA,mBAAmB,EAAE,EADJ;AAEjBC,IAAAA,wBAAwB,EAAE;AAFT,GAArB;AAKA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAAyCd,KAA/C;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,OAArB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,IAArD;AACA,QAAMG,GAAG,GAAI,0DAAyDJ,OAAQ,EAA9E;AAEA,SACI,MAAC,MAAD;AACC,IAAA,aAAa,EAAEN,YADhB;AAEC,IAAA,gBAAgB,EAAET,gBAFnB;AAGI,IAAA,kBAAkB,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEoB,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,eAAxB;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA,YAAvD;AAAqEC,IAAAA,YAArE;AAAmFC,IAAAA;AAAnF,GAAD,KAAgG;AAG1F,UAAMC,UAAU,GAAG,YAAY;AAC3BV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACQ,QAAAA;AAAD,OAAZ;AACF,YAAM,aAAYN,MAAZ,EAAoBQ,OAApB,CAA4BC,GAAG,IAAI;AACtCP,QAAAA,eAAe,CAACO,GAAD,EAAM,IAAN,CAAf;AAA2B,OADxB,CAAN;AAGE,YAAML,YAAY,GAAGM,IAAf,CAAoBJ,MAAM,IAAI,aAAYA,MAAZ,EAAoBK,MAApB,KAA+B,CAA/B,IAAoCC,QAAQ,EAA1E,CAAN;AACN,KAPE;;AASA,UAAMA,QAAQ,GAAG,YAAY;AAC5B5B,MAAAA,UAAU,CAAC,IAAD,CAAV;AACFgB,MAAAA,MAAM,CAACa,YAAP,GAAsBpB,IAAtB;AACEI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACF,UAAIgB,GAAG,GAAI,MAAMpC,QAAQ,CAAC;AAACsB,QAAAA,MAAD;AAASD,QAAAA,GAAT;AAAcN,QAAAA;AAAd,OAAD,CAAzB;AACA,UAAIsB,IAAI,GAAG,OAAOD,GAAP,KAAcA,GAAG,CAACE,MAA7B;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACkB,QAAAA;AAAD,OAAZ;AACDD,MAAAA,IAAI,IAAI3B,SAAS,CAAC2B,IAAD,CAAjB,IAA2B7B,SAAS,CAAC,IAAD,CAApC,IAA8CF,UAAU,CAAC,KAAD,CAAxD;AACC;AACH,KATI;;AAUH,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCW,OAApC,CADJ,EAEI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAHJ,EAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAACsB,QAAAA,YAAY,EAAE;AAAf,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAEjB,MAAM,CAACV,mBAFlB;AAGI,MAAA,KAAK,EAAE;AAAE4B,QAAAA,KAAK,EAAE;AAAT,OAHX;AAII,MAAA,IAAI,EAAC,qBAJT;AAKI,MAAA,SAAS,EAAE9C,gBALf;AAMI,MAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAcIkC,MAAM,CAAChB,mBAAP,IAA8B;AAAO,MAAA,KAAK,EAAE;AAAC6B,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE,OAA/B;AAAwCC,QAAAA,KAAK,EAAE,MAA/C;AAAuDH,QAAAA,KAAK,EAAE,SAA9D;AAAyEI,QAAAA,QAAQ,EAAE;AAAnF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6GhB,MAAM,CAAChB,mBAApH,CAdlC,CALJ,EAwBK,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mOAxBL,EA0BK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH,EAMG,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAEU,MAAM,CAACT,wBAFlB;AAGI,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE;AAAT,OAHX;AAII,MAAA,IAAI,EAAC,0BAJT;AAKI,MAAA,SAAS,EAAE3C,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AACI,MAAA,KAAK,EAAE;AAAEgD,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACA,MAAA,QAAQ,EAAEtB,YADV;AAEA,MAAA,KAAK,EAAE;AAAEsB,QAAAA,MAAM,EAAE;AAAV,OAFP;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,IAAI,EAAC,0BAJL;AAKA,MAAA,KAAK,EAAC,KALN;AAMA,MAAA,EAAE,EAAC,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,+DAPJ,EAqBI;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACJ,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OADH;AAEA,MAAA,QAAQ,EAAEtB,YAFV;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,IAAI,EAAC,0BAJL;AAKA,MAAA,KAAK,EAAC,IALN;AAMA,MAAA,EAAE,EAAC,IANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,kCArBJ,CANH,EA0CIK,MAAM,CAACf,wBAAP,IAAmC;AAAO,MAAA,KAAK,EAAE;AAAC4B,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE,OAA/B;AAAwCC,QAAAA,KAAK,EAAE,MAA/C;AAAuDH,QAAAA,KAAK,EAAE,SAA9D;AAAyEI,QAAAA,QAAQ,EAAE;AAAnF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6GhB,MAAM,CAACf,wBAApH,CA1CvC,CA1BL,EAwEKR,OAAO,GAAI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GACT,MAAC,MAAD;AACE,MAAA,MAAM,EAAC,SADT;AAES,MAAA,UAAU,EAAC,SAFpB;AAGS,MAAA,EAAE,EAAC,QAHZ;AAIS,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE;AAAV,OAJhB;AAKS,MAAA,QAAQ,EAAC,MALlB;AAMC,MAAA,OAAO,EAAEhB,UANV;AAOI,MAAA,KAAK,EAAE;AAAEe,QAAAA,QAAQ,EAAE,MAAZ;AAAoBE,QAAAA,MAAM,EAAE,MAA5B;AAAoCC,QAAAA,SAAS,EAAE;AAA/C,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQMtC,MAAM,GAAGA,MAAH,GAAY,QARxB,CAzEH,CADJ;AAuFH,GAlHL,CADJ;AAsHH,CAnIM","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm, SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport {PitchVideoSchema} from '../TaskControl';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const PitchVideo = (props) => {\n        const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const emptyInitial = {\n        pitchvideo_filename: '',\n        ok_to_publish_pitchvideo: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    const url = `https://prelude.eurobrake.net/authors/tasks/pitchvideo/${paperId}`;\n    \n    return (\n        <Formik\n         initialValues={emptyInitial}\n         validationSchema={PitchVideoSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldTouched, isValidating, validateForm, handleSubmit, errors}) => {\n            \n               \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendFile({values, url, csrf});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload Pitch Video Slide</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your pitch video as a PowerPoint slide using the form below</Typography>\n                       \n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.pitchvideo_filename}\n                                style={{ color: '#134381' }}\n                                name=\"pitchvideo_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                           {errors.pitchvideo_filename && <label style={{position: 'absolute', bottom: '-2rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.pitchvideo_filename}</label>}\n\n                        </div>\n\n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_pitchvideo}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                    Yes, I grant permission for my presentation to be included\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_pitchvideo\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                    No, I do not grant permission\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_pitchvideo && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_pitchvideo}</label>}\n\n                        </div>\n                       \n                        {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}