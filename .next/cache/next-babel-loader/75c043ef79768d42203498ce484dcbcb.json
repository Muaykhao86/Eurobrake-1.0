{"ast":null,"code":"var _jsxFileName = \"/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Contact.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { ContactSchema } from './FormControl';\nimport { Typography } from '@material-ui/core';\nexport const ContactForm = props => {\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId\n  } = props;\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null);\n  const FT = 'contact';\n  const url = 'https://prelude.eurobrake.net/contact';\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: ContactSchema,\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    validateForm,\n    errors,\n    setFieldTouched,\n    handleSubmit,\n    submitForm\n  }) => {\n    const allTouched = async () => {\n      console.log('touched!');\n      console.log({\n        errors\n      });\n      await Object.keys(values).forEach(key => {\n        setFieldTouched(key, true);\n      });\n      await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit());\n    };\n\n    const onSubmit = async () => {\n      await setLoading(true);\n      await console.log('submitting');\n      let FT = 'contact';\n      let res = await SendForm({\n        values,\n        url,\n        FT\n      });\n      let data = await res;\n      let dataStatus = (await data) && data.status;\n      setStatus(dataStatus);\n      console.log({\n        data\n      });\n\n      let result = async () => {\n        await setLoading(false);\n        await setToggle(true);\n      };\n\n      return result();\n    };\n\n    return __jsx(StyledForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Contact us\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"firstname\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"First name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.fisrstname,\n      style: {},\n      name: \"firstname\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"lastname\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Last name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.lastname,\n      style: {},\n      name: \"lastname\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"jobtitle\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Job title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.jobtitle,\n      style: {},\n      name: \"jobtitle\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"company\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Company:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.company,\n      style: {},\n      name: \"company\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"address\",\n      className: \"form-notes-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Address:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.address,\n      style: {},\n      name: \"address\",\n      component: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"enquiry\",\n      className: \"form-notes-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Your message:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.enquiry,\n      style: {},\n      name: \"enquiry\",\n      component: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), errors.enquiry && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 48\n      }\n    }, errors.enquiry)), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 36\n      }\n    }) : __jsx(Button, {\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      fontSize: \"2rem\",\n      onClick: allTouched,\n      style: {\n        alignSelf: 'center',\n        color: '#FFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 24\n      }\n    }, \"submit\"), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      style: {\n        alignSelf: 'center',\n        textTransform: 'uppercase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 32\n      }\n    }, Status));\n  });\n};\nconst emptyInitial = {\n  name: '',\n  firstneme: '',\n  lastname: '',\n  jobtitle: '',\n  company: '',\n  address: '',\n  email: '',\n  enquiry: ''\n};","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Contact.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","ContactSchema","Typography","ContactForm","props","presets","csrf","apiUrl","paperId","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","console","log","Object","keys","forEach","key","then","length","onSubmit","res","data","dataStatus","status","result","name","fisrstname","lastname","jobtitle","company","address","enquiry","position","bottom","right","color","fontSize","alignSelf","textTransform","firstneme","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAqC,QAArC;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,MAAoCJ,KAA1C;AAEA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACmB,MAAD;AAAA,OAASC;AAAT,MAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACqB,MAAD;AAAA,OAASC;AAAT,MAAsBtB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMuB,EAAE,GAAG,SAAX;AACA,QAAMC,GAAG,GAAG,uCAAZ;AACA,SACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAEC,YADnB;AAEI,IAAA,gBAAgB,EAAEhB,aAFtB;AAGI,IAAA,kBAAkB,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKM,CAAC;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA,eAA9C;AAA+DC,IAAAA,YAA/D;AAA6EC,IAAAA;AAA7E,GAAD,KAA8F;AAGzF,UAAMC,UAAU,GAAG,YAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACN,QAAAA;AAAD,OAAZ;AACF,YAAMO,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBY,OAApB,CAA4BC,GAAG,IAAI;AACtCT,QAAAA,eAAe,CAACS,GAAD,EAAM,IAAN,CAAf;AAA2B,OADxB,CAAN;AAGE,YAAMX,YAAY,GAAGY,IAAf,CAAoBX,MAAM,IAAIO,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBY,MAApB,KAA+B,CAA/B,IAAoCC,QAAQ,EAA1E,CAAN;AACN,KAPE;;AASC,UAAMA,QAAQ,GAAG,YAAY;AAChC,YAAMxB,UAAU,CAAC,IAAD,CAAhB;AACC,YAAOgB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP;AACA,UAAIZ,EAAE,GAAG,SAAT;AACA,UAAIoB,GAAG,GAAI,MAAMnC,QAAQ,CAAC;AAACkB,QAAAA,MAAD;AAASF,QAAAA,GAAT;AAAcD,QAAAA;AAAd,OAAD,CAAzB;AACA,UAAIqB,IAAI,GAAG,MAAOD,GAAlB;AACA,UAAIE,UAAU,GAAE,OAAOD,IAAP,KAAeA,IAAI,CAACE,MAApC;AACAxB,MAAAA,SAAS,CAACuB,UAAD,CAAT;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACS,QAAAA;AAAD,OAAZ;;AACA,UAAIG,MAAM,GAAG,YAAY;AACzB,cAAO7B,UAAU,CAAC,KAAD,CAAjB;AACA,cAAME,SAAS,CAAC,IAAD,CAAf;AACE,OAHF;;AAKF,aAAO2B,MAAM,EAAb;AAED,KAhBK;;AAmBJ,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,MADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAEpB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACsB,IAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,MANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFJ,EAkBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACuB,UAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,WANT;AAOI,MAAA,SAAS,EAAE7C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlBJ,EAkCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACwB,QAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,SAAS,EAAE9C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlCJ,EAkDI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACyB,QAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,SAAS,EAAE/C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlDJ,EAkEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAAC0B,OAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,SANT;AAOI,MAAA,SAAS,EAAEhD,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlEJ,EAkFI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,kBAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAAC2B,OAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,SANT;AAOI,MAAA,SAAS,EAAC,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlFJ,EAkGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,OAAO,EAAE1B,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAACsB,IAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,SAAS,EAAE5C,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlGJ,EAkHI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAMI,MAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,kBAFd;AAGI,MAAA,OAAO,EAAEuB,YAHb;AAII,MAAA,KAAK,EAAED,MAAM,CAAC4B,OAJlB;AAKI,MAAA,KAAK,EAAE,EALX;AAMI,MAAA,IAAI,EAAC,SANT;AAOI,MAAA,SAAS,EAAC,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAeKzB,MAAM,CAACyB,OAAP,IAAkB;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,MAAhD;AAAwDC,QAAAA,KAAK,EAAE,SAA/D;AAA0EC,QAAAA,QAAQ,EAAE;AAApF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+G9B,MAAM,CAACyB,OAAtH,CAfvB,CAlHJ,EAmIIrC,OAAO,GAAI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GACR,MAAC,MAAD;AACE,MAAA,MAAM,EAAC,SADT;AAES,MAAA,UAAU,EAAC,SAFpB;AAGS,MAAA,EAAE,EAAC,QAHZ;AAIS,MAAA,QAAQ,EAAC,MAJlB;AAKC,MAAA,OAAO,EAAEgB,UALV;AAMI,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE,QAAb;AAAuBF,QAAAA,KAAK,EAAE;AAA9B,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApIH,EA6ICvC,MAAM,IAAI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,KAAK,EAAE;AAACyC,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,aAAa,EAAE;AAArC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8FxC,MAA9F,CA7IX,CADJ;AAmJH,GAvLL,CADJ;AA2LH,CAnMM;AAsMP,MAAMI,YAAY,GAAG;AACjBuB,EAAAA,IAAI,EAAE,EADW;AAEjBc,EAAAA,SAAS,EAAE,EAFM;AAGjBZ,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,OAAO,EAAE,EALQ;AAMjBC,EAAAA,OAAO,EAAE,EANQ;AAOjBU,EAAAA,KAAK,EAAE,EAPU;AAQjBT,EAAAA,OAAO,EAAE;AARQ,CAArB","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {ContactSchema} from './FormControl';\nimport { Typography } from '@material-ui/core';\n\n\nexport const ContactForm = (props) => {\n    const { presets, csrf, apiUrl, paperId} = props;\n\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = 'contact';\n    const url = 'https://prelude.eurobrake.net/contact';\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={ContactSchema}\n            enableReinitialize\n        >\n             {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                    const onSubmit = async () => {\n                 await setLoading(true);\n                  await  console.log('submitting')\n                  let FT = 'contact';\n                  let res =  await SendForm({values, url, FT});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n\n                return (\n                    <StyledForm>\n                    <Typography gutterBottom className=\"form-title\" >Contact us</Typography>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label\">\n                                Title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"firstname\"\n                                className=\"form-label\">\n                                First name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fisrstname}\n                                style={{ }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"lastname\"\n                                className=\"form-label\">\n                                Last name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"jobtitle\"\n                                className=\"form-label\">\n                                Job title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"company\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"address\"\n                                className=\"form-notes-label\">\n                                Address:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.address}\n                                style={{ }}\n                                name=\"address\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"enquiry\"\n                                className=\"form-notes-label\">\n                                Your message:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.enquiry}\n                                style={{ }}\n                                name=\"enquiry\"\n                                component=\"textarea\"\n                            />\n                            {errors.enquiry && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.enquiry}</label>}\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ alignSelf: 'center', color: '#FFF' }}>\n                            submit\n                        </Button>}\n                    {Toggle && <Typography className=\"form-title\" style={{alignSelf: 'center', textTransform: 'uppercase'}}>{Status }</Typography>}\n\n                    </StyledForm>\n                    \n                )\n            }}\n        </Formik>\n    )\n};\n\n\nconst emptyInitial = {\n    name: '',\n    firstneme: '',\n    lastname: '',\n    jobtitle: '',\n    company: '',\n    address: '',\n    email: '',\n    enquiry: ''\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}