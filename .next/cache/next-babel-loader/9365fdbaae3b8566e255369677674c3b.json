{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/ResetForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport { ResetSchema } from './FormControl'; // async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const ResetForm = props => {\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const url = `https://prelude.eurobrake.net/authors/reset/${props.paperId}`;\n  console.log({\n    url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: ResetSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    validateForm,\n    errors,\n    setFieldTouched,\n    handleSubmit,\n    submitForm\n  }) => {\n    const allTouched = async () => {\n      await _Object$keys(values).forEach(key => {\n        setFieldTouched(key, true);\n      });\n      await validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit());\n    };\n\n    const onSubmit = async () => {\n      console.log('click');\n      let res = await SendForm({\n        values,\n        url\n      });\n      let status = await res.status;\n      console.log({\n        status\n      });\n      status == 'success' && setToggle(Toggle => !Toggle);\n      return status;\n    };\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, Toggle && __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"It onllllllllllllly works \", status), console.log({\n      errors\n    }), __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Please provide your new password\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Password:\"), __jsx(Field, {\n      type: \"password\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.new_password,\n      style: {\n        color: '#134381'\n      },\n      name: \"new_password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"confirm_password\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Confirm Password:\"), __jsx(Field, {\n      type: \"password\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.confirm_password,\n      style: {\n        color: '#134381'\n      },\n      name: \"confirm_password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: () => allTouched(),\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem\"\n      },\n      padding: \".5rem 4rem\",\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Reset\"));\n  });\n};\nconst emptyInitial = {\n  new_password: '',\n  confirm_password: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/ResetForm.js"],"names":["React","Component","useState","Formik","Form","Field","ErrorMessage","TextField","StyledForm","Button","SendForm","Typography","ResetSchema","ResetForm","props","Toggle","setToggle","url","paperId","console","log","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","forEach","key","then","length","onSubmit","res","status","new_password","color","confirm_password","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport {ResetSchema} from './FormControl';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const ResetForm = (props) => {\n    const [Toggle, setToggle] = useState(false);\n    const url =  `https://prelude.eurobrake.net/authors/reset/${props.paperId}`;\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={ResetSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm }) => {\n\n                const allTouched = async () => {\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n\n\n                const onSubmit = async () => {\n                console.log('click')\n                  let res =  await SendForm({values, url});\n                  let status = await res.status;\n                  console.log({status})\n                  status == 'success' && setToggle(Toggle => !Toggle)\n                  return status\n                }\n\n                return (\n                    <StyledForm>\n                    {Toggle && <h1>It onllllllllllllly works {status}</h1>}\n                    {console.log({errors})}\n                    <Typography className=\"form-title\">Please provide your new password</Typography>\n\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Password:\n                        </label>\n                            <Field\n                                type=\"password\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.new_password}\n                                style={{ color: '#134381' }}\n                                name=\"new_password\"\n                                component={TextField}\n                            />\n                        </div>\n                     \n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"confirm_password\"\n                                className=\"form-label\">\n                                Confirm Password:\n                        </label>\n                            <Field\n                                type=\"password\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.confirm_password}\n                                style={{ color: '#134381' }}\n                                name=\"confirm_password\"\n                                component={TextField}\n                            />\n                        </div>\n                      \n                        <Button \n                            onClick={() => allTouched()}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\" }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Reset\n                        </Button>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\nconst emptyInitial = {\n    new_password: '',\n    confirm_password: '',\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}