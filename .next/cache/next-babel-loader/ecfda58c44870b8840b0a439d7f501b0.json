{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login } from '../../utils/auth';\nexport async function GetFormSSR({\n  url,\n  context\n}) {\n  // use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n  const {\n    logintoken\n  } = cookies(context);\n  console.log({\n    logintoken\n  });\n\n  try {\n    const apiUrl = url;\n    const response = await fetch(apiUrl, {\n      credentials: 'include',\n      cache: 'no-cache',\n      headers: {\n        Authorization: 'Bearer ' + logintoken\n      }\n    });\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      console.log('getForm', data);\n      console.log('tkn', data.__csrf_token);\n      return data;\n    } else {\n      let error = new Error(data.error);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error('Failed to get form, please try again', error);\n    return error;\n  }\n\n  return;\n}\nexport async function GetForm(url) {\n  const {\n    logintoken\n  } = cookie.get();\n  console.log({\n    logintoken\n  });\n\n  try {\n    const apiUrl = url;\n    const response = await fetch(apiUrl, {\n      credentials: 'include',\n      cache: 'no-cache',\n      headers: {\n        Authorization: 'Bearer ' + logintoken\n      }\n    });\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      console.log('getForm', data);\n      console.log('tkn', data.__csrf_token);\n      return data;\n    } else {\n      let error = new Error(data.error);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error('Failed to get form, please try again', error);\n    return error;\n  }\n\n  return;\n}\nexport async function SendFile({\n  values,\n  url,\n  csrf\n}) {\n  const {\n    logintoken\n  } = cookie.get();\n  const formData = new FormData(); // * Standard\n\n  (await values.accept) && values.accept === true ? values.accept = 'yes' : null;\n  (await values.copyright) && values.copyright === true ? values.copyright = 'yes' : null; // * Fiec\n\n  (await values.consent_sponsors) && values.consent_sponsors === true ? values.consent_sponsors = 'yes' : null;\n  (await values.consent_fiec) && values.consent_fiec === true ? values.consent_fiec = 'yes' : null;\n  (await values.consent_wep) && values.consent_wep === true ? values.consent_wep = 'yes' : null;\n  (await values.consent_bursary) && values.consent_bursary === true ? values.consent_bursary = 'yes' : null;\n  (await values.consent_events) && values.consent_events === true ? values.consent_events = 'yes' : null;\n  (await values.consent_yfia) && values.consent_yfia === true ? values.consent_yfia = 'yes' : null;\n\n  _Object$keys(values).forEach(key => {\n    formData.append(key, values[key]);\n  });\n\n  console.log({\n    logintoken,\n    url\n  });\n\n  if (logintoken && csrf) {\n    try {\n      const apiUrl = url;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: formData,\n        credentials: 'include',\n        headers: {\n          Authorization: 'Bearer ' + logintoken\n        }\n      });\n      const data = await response.json();\n      await console.log({\n        data\n      });\n\n      if (data.status === 'success') {\n        console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to get form, please try again', error);\n      return error;\n    }\n  }\n\n  if (url === 'https://prelude.eurobrake.net/esop') {\n    try {\n      const apiUrl = url;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      await console.log({\n        data\n      });\n\n      if (data.status === 'success') {\n        console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to send form, please try again', error);\n      return error;\n    }\n  }\n\n  return;\n}\nexport async function SendForm({\n  csrf,\n  values,\n  url,\n  FT\n}) {\n  values && values.accept && values.accept === true ? values.accept = 'yes' : null;\n  values && values.copyright && values.copyright === true ? values.copyright = 'yes' : null; // console.log('sendform',values)\n\n  const form = _JSON$stringify(values);\n\n  const {\n    logintoken\n  } = cookie.get(); // console.log({url, form, FT, csrf});\n\n  if (logintoken && csrf && form) {\n    try {\n      const apiUrl = url;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: form,\n        credentials: 'include',\n        headers: {\n          Authorization: 'Bearer ' + logintoken,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        // console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to send form, please try again', error);\n      return error;\n    }\n  }\n\n  if (url === 'https://prelude.eurobrake.net/authors/login') {\n    // console.log({url, form});\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        credentials: 'include',\n        body: form,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        const {\n          logintoken\n        } = data;\n        await login({\n          logintoken\n        });\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to login, please try again', error);\n      return error;\n    }\n  }\n\n  if (FT === 'reset') {\n    // console.log({url, form});\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        credentials: 'include',\n        body: form,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        // console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to reset, please try again', error);\n      return error;\n    }\n  }\n\n  if (FT === 'newsletter' || FT === 'contact') {\n    // console.log({url, form});\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        credentials: 'include',\n        body: form,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        // console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to send form, please try again', error);\n      return error;\n    }\n  }\n\n  if (FT === 'withdraw') {\n    // console.log({url, csrf});\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: _JSON$stringify(csrf),\n        credentials: 'include',\n        headers: {\n          Authorization: 'Bearer ' + logintoken,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        // console.log('getForm', data);\n        return data;\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to withdraw, please try again', error);\n      return error;\n    }\n  }\n\n  return;\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/FormActions.js"],"names":["cookie","cookies","fetch","login","GetFormSSR","url","context","logintoken","console","log","apiUrl","response","credentials","cache","headers","Authorization","data","json","status","__csrf_token","error","Error","GetForm","get","SendFile","values","csrf","formData","FormData","accept","copyright","consent_sponsors","consent_fiec","consent_wep","consent_bursary","consent_events","consent_yfia","forEach","key","append","method","body","SendForm","FT","form"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\nexport async function GetFormSSR({url, context}) {\n    // use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n    const { logintoken } = cookies(context);\n    console.log({logintoken})\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        return error\n    }\n    return\n}\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n             cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        return error\n    }\n    return \n}\n\nexport async function SendFile({ values, url, csrf }) {\n    const { logintoken } = cookie.get();\n    const formData = new FormData();\n    \n        // * Standard\n    await values.accept && values.accept === true ? values.accept = 'yes' : null;\n    await values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n        // * Fiec\n    await values.consent_sponsors && values.consent_sponsors === true ? values.consent_sponsors = 'yes' : null;\n    await values.consent_fiec && values.consent_fiec === true ? values.consent_fiec = 'yes' : null;\n    await values.consent_wep && values.consent_wep === true ? values.consent_wep = 'yes' : null;\n    await values.consent_bursary && values.consent_bursary === true ? values.consent_bursary = 'yes' : null;\n    await values.consent_events && values.consent_events === true ? values.consent_events = 'yes' : null;\n    await values.consent_yfia && values.consent_yfia === true ? values.consent_yfia = 'yes' : null;\n    \n    Object.keys(values).forEach(key => {   \n      formData.append(key, values[key])});\n    \n  \n    console.log({ logintoken,  url})\n    if (logintoken && csrf ) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            return error\n        }\n    }\n    if (url === 'https://prelude.eurobrake.net/esop') {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url, FT }) {\n     values && values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values && values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    // console.log('sendform',values)\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        // console.log({url, form, FT, csrf});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST', \n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n                // console.log('getForm', data);\n                return data\n            } else {\n                let error = new Error(data.error)\n                error.response = response   \n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/authors/login' ){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'reset' ){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to reset, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'newsletter' || FT === 'contact'){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'withdraw' ){\n        // console.log({url, csrf});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                body: JSON.stringify(csrf),\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to withdraw, please try again', error\n            )\n            return error\n         }\n        }\n    return\n    }\n\n"]},"metadata":{},"sourceType":"module"}