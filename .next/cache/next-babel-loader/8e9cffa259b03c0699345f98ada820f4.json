{"ast":null,"code":"import * as yup from 'yup';\nexport const PaperSchema = yup.object().shape({\n  accept: yup.bool().test('accept', 'Field must be checked', value => value === true).required(),\n  technicalpaper_filename: yup.mixed().required('Required').test(\"fileFormat\", \"Unsupported Format\", value => value && PDF_SUPPORTED_FORMATS.includes(value.type)),\n  author_notes: yup.string(),\n  copyright: yup.bool().test('copyright', 'Field must be checked', value => value === true).required()\n});\nconst PDF_SUPPORTED_FORMATS = ['application/pdf'];\nexport const PPTSchema = yup.object().shape({\n  accept: yup.bool().test('accept', 'Field must be checked', value => value === true).required(),\n  ppt_filename: yup.mixed().required('Required').test(\"fileFormat\", \"Unsupported Format\", value => value && PPT_SUPPORTED_FORMATS.includes(value.type)),\n  author_notes: yup.string()\n});\nconst PPT_SUPPORTED_FORMATS = ['\tapplication/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'];\nexport const PermissionSchema = yup.object().shape({\n  accept: yup.String().required()\n});","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskControl.js"],"names":["yup","PaperSchema","object","shape","accept","bool","test","value","required","technicalpaper_filename","mixed","PDF_SUPPORTED_FORMATS","includes","type","author_notes","string","copyright","PPTSchema","ppt_filename","PPT_SUPPORTED_FORMATS","PermissionSchema","String"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,MAAM,EACLJ,GAAG,CAACK,IAAJ,GACEC,IADF,CAEG,QAFH,EAGG,uBAHH,EAIGC,KAAK,IAAIA,KAAK,KAAK,IAJtB,EAKGC,QALH,EAFyC;AAS1CC,EAAAA,uBAAuB,EAAET,GAAG,CAACU,KAAJ,GAAYF,QAAZ,CAAqB,UAArB,EACxBF,IADwB,CACnB,YADmB,EAEnB,oBAFmB,EAGnBC,KAAK,IAAIA,KAAK,IAAII,qBAAqB,CAACC,QAAtB,CAA+BL,KAAK,CAACM,IAArC,CAHC,CATiB;AAa1CC,EAAAA,YAAY,EAAEd,GAAG,CAACe,MAAJ,EAb4B;AAc1CC,EAAAA,SAAS,EAAEhB,GAAG,CAACK,IAAJ,GACRC,IADQ,CAEP,WAFO,EAGP,uBAHO,EAIPC,KAAK,IAAIA,KAAK,KAAK,IAJZ,EAKPC,QALO;AAd+B,CAAnB,CAApB;AAuBL,MAAMG,qBAAqB,GAAG,CAC3B,iBAD2B,CAA9B;AAIF,OAAO,MAAMM,SAAS,GAAGjB,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,MAAM,EACLJ,GAAG,CAACK,IAAJ,GACEC,IADF,CAEG,QAFH,EAGG,uBAHH,EAIGC,KAAK,IAAIA,KAAK,KAAK,IAJtB,EAKGC,QALH,EAFuC;AASxCU,EAAAA,YAAY,EAAElB,GAAG,CAACU,KAAJ,GAAYF,QAAZ,CAAqB,UAArB,EACbF,IADa,CACR,YADQ,EAER,oBAFQ,EAGRC,KAAK,IAAIA,KAAK,IAAIY,qBAAqB,CAACP,QAAtB,CAA+BL,KAAK,CAACM,IAArC,CAHV,CAT0B;AAaxCC,EAAAA,YAAY,EAAEd,GAAG,CAACe,MAAJ;AAb0B,CAAnB,CAAlB;AAgBL,MAAMI,qBAAqB,GAAG,CACpB,gCADoB,EACc,2EADd,CAA9B;AAMF,OAAO,MAAMC,gBAAgB,GAAGpB,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC/CC,EAAAA,MAAM,EACLJ,GAAG,CAACqB,MAAJ,GACEb,QADF;AAF8C,CAAnB,CAAzB","sourcesContent":["import * as yup from 'yup';\n\nexport const PaperSchema = yup.object().shape({\n    accept: \n     yup.bool()\n      .test(\n        'accept',\n        'Field must be checked',\n        value => value === true\n      ).required()\n    ,\n    technicalpaper_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PDF_SUPPORTED_FORMATS.includes(value.type)),\n    author_notes: yup.string(),\n    copyright: yup.bool()\n      .test(\n        'copyright',\n        'Field must be checked',\n        value => value === true\n      ).required()\n})\n \n\n  const PDF_SUPPORTED_FORMATS = [\n     'application/pdf'\n    ];\n\nexport const PPTSchema = yup.object().shape({\n    accept: \n     yup.bool()\n      .test(\n        'accept',\n        'Field must be checked',\n        value => value === true\n      ).required()\n    ,\n    ppt_filename: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PPT_SUPPORTED_FORMATS.includes(value.type)),\n    author_notes: yup.string()\n})\n  \n  const PPT_SUPPORTED_FORMATS = [\n            '\tapplication/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\n    ];\n\n\nexport const PermissionSchema = yup.object().shape({\n    accept: \n     yup.String()\n      .required()\n    ,\n    \n})\n  "]},"metadata":{},"sourceType":"module"}