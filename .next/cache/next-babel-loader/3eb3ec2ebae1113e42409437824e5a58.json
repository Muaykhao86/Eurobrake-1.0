{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/Player.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\n\nclass Player extends Component {\n  componentDidMount() {\n    // instantiate Video.js\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log('onPlayerReady', this);\n    });\n  } // destroy player on unmount\n\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  } // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      \"data-vjs-player\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"video\", {\n      ref: node => this.videoNode = node,\n      className: \"video-js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/Player.js"],"names":["React","Component","videojs","Player","componentDidMount","player","videoNode","props","onPlayerReady","console","log","componentWillUnmount","dispose","render","node"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,iBAAiB,GAAI;AACnB;AACA,SAAKC,MAAL,GAAcH,OAAO,CAAC,KAAKI,SAAN,EAAiB,KAAKC,KAAtB,EAA6B,SAASC,aAAT,GAA0B;AAC1EC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,IAA7B;AACD,KAFoB,CAArB;AAGD,GAN4B,CAQ7B;;;AACAC,EAAAA,oBAAoB,GAAI;AACtB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYO,OAAZ;AACD;AACF,GAb4B,CAe7B;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,6BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAEC,IAAI,IAAK,KAAKR,SAAL,GAAiBQ,IAAtC;AAA6C,MAAA,SAAS,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AA1B4B;;AA6B/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport videojs from 'video.js'\n\n\nclass Player extends Component {\n  componentDidMount () {\n    // instantiate Video.js\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady () {\n      console.log('onPlayerReady', this)\n    })\n  }\n\n  // destroy player on unmount\n  componentWillUnmount () {\n    if (this.player) {\n      this.player.dispose()\n    }\n  }\n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  render () {\n    return (\n      <div>\n        <div data-vjs-player>\n          <video ref={node => (this.videoNode = node)} className='video-js' />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Player"]},"metadata":{},"sourceType":"module"}