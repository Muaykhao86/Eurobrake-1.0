{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PPT.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport { PPTSchema } from '../TaskControl'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport var PPT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PPT, _Component);\n\n  function PPT(props) {\n    _classCallCheck(this, PPT);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PPT).call(this, props));\n  }\n\n  _createClass(PPT, [{\n    key: \"render\",\n    value: function render() {\n      var emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n      };\n      var _this$props = this.props,\n          presets = _this$props.presets,\n          csrf = _this$props.csrf,\n          apiUrl = _this$props.apiUrl,\n          paperId = _this$props.paperId,\n          type = _this$props.type;\n      console.log('tasks', presets, csrf, apiUrl, paperId, type);\n      return (// ! NEED PRESETS FOR TASKS\n        __jsx(Formik, {\n          initialValues: emptyInitial,\n          validationSchema: PPTSchema,\n          enableReinitialize: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, function (_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange;\n          console.log(values, 'Tasks');\n          return __jsx(StyledTask, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, paperId), __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Please upload your PowerPoint persentation using the form below\"), __jsx(\"div\", {\n            className: \"task-checkboxField\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-checkboxField-label\",\n            style: {\n              color: '#134381'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"I have read the \", __jsx(Link, {\n            href: \"/authorsAreaInstructions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            className: \"task-link_bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Instructions for Preparing your Powerpoint Presentation\")), \" and have followed the guidance notes available there.\"), __jsx(Field, {\n            className: \"task-checkboxField-box\",\n            value: values.accept,\n            style: {\n              color: '#134381'\n            },\n            name: \"accept\",\n            component: CheckboxWithLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          })), __jsx(\"div\", {\n            className: \"task-field\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"File upload\"), __jsx(Field, {\n            className: \"task-input\",\n            value: values.ppt_filename,\n            style: {\n              color: '#134381'\n            },\n            name: \"ppt_filename\",\n            component: SimpleFileUpload,\n            fullWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          })), __jsx(\"div\", {\n            className: \"task-notes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-notes-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Notes for reviewers:\"), __jsx(Field, {\n            className: \"task-notes-input\",\n            onClick: handleChange,\n            value: values.author_notes,\n            style: {\n              color: '#134381'\n            },\n            name: \"author_notes\",\n            component: \"textarea\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          })), __jsx(Button, {\n            onClick: function onClick() {\n              return console.log(values);\n            },\n            bcolor: \"#134381\",\n            background: \"#134381\",\n            br: \"100rem\",\n            style: {\n              margin: \"3rem\",\n              color: '#FFF'\n            },\n            padding: \".5rem 4rem\",\n            fontSize: \"1.7rem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Send\"));\n        })\n      );\n    }\n  }]);\n\n  return PPT;\n}(Component);","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PPT.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","Button","SendForm","StyledTask","PPTSchema","PPT","props","emptyInitial","accept","ppt_filename","author_notes","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","color","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport {PPTSchema} from '../TaskControl';\n\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class PPT extends Component{\nconstructor(props) {\n    super(props);\n   \n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PPTSchema}\n\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your PowerPoint persentation using the form below</Typography>\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            \n                            </Field>\n                        </div>\n                         <div className=\"task-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                File upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.ppt_filename}\n                                style={{ color: '#134381' }}\n                                name=\"ppt_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}