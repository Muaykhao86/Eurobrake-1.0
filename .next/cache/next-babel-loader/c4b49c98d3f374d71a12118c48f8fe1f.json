{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Contact.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { ContactSchema } from './FormControl';\nimport { Typography } from '@material-ui/core';\nexport var ContactForm = function ContactForm(props) {\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId;\n\n  var _useState = useState(false),\n      Loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var FT = 'contact';\n  var url = 'https://prelude.eurobrake.net/contact';\n  console.log({\n    url: url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: ContactSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        validateForm = _ref.validateForm,\n        errors = _ref.errors,\n        setFieldTouched = _ref.setFieldTouched,\n        handleSubmit = _ref.handleSubmit,\n        submitForm = _ref.submitForm;\n\n    var allTouched =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('touched!');\n                console.log({\n                  errors: errors\n                });\n                _context.next = 4;\n                return _Object$keys(values).forEach(function (key) {\n                  setFieldTouched(key, true);\n                });\n\n              case 4:\n                _context.next = 6;\n                return validateForm().then(function (errors) {\n                  return _Object$keys(errors).length === 0 && onSubmit();\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function allTouched() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var FT, res, data, dataStatus, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return setLoading(true);\n\n              case 2:\n                _context3.next = 4;\n                return console.log('submitting');\n\n              case 4:\n                FT = 'contact';\n                _context3.next = 7;\n                return SendForm({\n                  values: values,\n                  url: url,\n                  FT: FT\n                });\n\n              case 7:\n                res = _context3.sent;\n                _context3.next = 10;\n                return res;\n\n              case 10:\n                data = _context3.sent;\n                _context3.next = 13;\n                return data;\n\n              case 13:\n                _context3.t0 = _context3.sent;\n\n                if (!_context3.t0) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.t0 = data.status;\n\n              case 16:\n                dataStatus = _context3.t0;\n                setStatus(dataStatus);\n                console.log({\n                  data: data\n                });\n\n                result =\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2() {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return setLoading(false);\n\n                          case 2:\n                            _context2.next = 4;\n                            return setToggle(true);\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function result() {\n                    return _ref4.apply(this, arguments);\n                  };\n                }();\n\n                return _context3.abrupt(\"return\", result());\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function onSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Contact us\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"firstname\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"First name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.fisrstname,\n      style: {},\n      name: \"firstname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"lastname\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Last name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.lastname,\n      style: {},\n      name: \"lastname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"jobtitle\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Job title:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.jobtitle,\n      style: {},\n      name: \"jobtitle\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"company\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Company:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.company,\n      style: {},\n      name: \"company\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"address\",\n      className: \"form-notes-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Address:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.address,\n      style: {},\n      name: \"address\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"enquiry\",\n      className: \"form-notes-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Your message:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-notes-input\",\n      onClick: handleChange,\n      value: values.enquiry,\n      style: {},\n      name: \"enquiry\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), errors.enquiry && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, errors.enquiry)), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : __jsx(Button, {\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      fontSize: \"2rem\",\n      onClick: allTouched,\n      style: {\n        alignSelf: 'center',\n        color: '#FFF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"submit\"), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      style: {\n        alignSelf: 'center',\n        textTransform: 'uppercase'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, Status));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nvar emptyInitial = {\n  name: '',\n  firstneme: '',\n  lastname: '',\n  jobtitle: '',\n  company: '',\n  address: '',\n  email: '',\n  enquiry: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Contact.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","ContactSchema","Typography","ContactForm","props","presets","csrf","apiUrl","paperId","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","console","log","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","forEach","key","then","length","onSubmit","res","data","status","dataStatus","result","name","fisrstname","lastname","jobtitle","company","address","enquiry","position","bottom","right","color","fontSize","alignSelf","textTransform","firstneme","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {ContactSchema} from './FormControl';\nimport { Typography } from '@material-ui/core';\n\n\n\nexport const ContactForm = (props) => {\n    const { presets, csrf, apiUrl, paperId} = props;\n\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = 'contact';\n    const url = 'https://prelude.eurobrake.net/contact';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={ContactSchema}\n            enableReinitialize\n        >\n             {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                    const onSubmit = async () => {\n                 await setLoading(true);\n                  await  console.log('submitting')\n                  let FT = 'contact';\n                  let res =  await SendForm({values, url, FT});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n\n                return (\n                    <StyledForm>\n                    <Typography gutterBottom className=\"form-title\" >Contact us</Typography>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label\">\n                                Title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"firstname\"\n                                className=\"form-label\">\n                                First name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fisrstname}\n                                style={{ }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"lastname\"\n                                className=\"form-label\">\n                                Last name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"jobtitle\"\n                                className=\"form-label\">\n                                Job title:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"company\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"address\"\n                                className=\"form-notes-label\">\n                                Address:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.address}\n                                style={{ }}\n                                name=\"address\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-notes\">\n                            <label\n                                htmlFor=\"enquiry\"\n                                className=\"form-notes-label\">\n                                Your message:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-notes-input\"\n                                onClick={handleChange}\n                                value={values.enquiry}\n                                style={{ }}\n                                name=\"enquiry\"\n                                component=\"textarea\"\n                            />\n                            {errors.enquiry && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.enquiry}</label>}\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ alignSelf: 'center', color: '#FFF' }}>\n                            submit\n                        </Button>}\n                    {Toggle && <Typography className=\"form-title\" style={{alignSelf: 'center', textTransform: 'uppercase'}}>{Status }</Typography>}\n\n                    </StyledForm>\n                    \n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    firstneme: '',\n    lastname: '',\n    jobtitle: '',\n    company: '',\n    address: '',\n    email: '',\n    enquiry: ''\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}