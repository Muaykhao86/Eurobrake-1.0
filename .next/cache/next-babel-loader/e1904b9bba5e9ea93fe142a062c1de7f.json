{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport { PaperSchema } from '../TaskControl';\nexport var Paper = function Paper(props) {\n  var _useState = useState(false),\n      Loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var emptyInitial = {\n    accept: '',\n    technicalpaper_filename: '',\n    author_notes: '',\n    copyright: ''\n  };\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId,\n      type = props.type;\n  var url = \"https://prelude.eurobrake.net/authors/tasks/paper/\".concat(paperId);\n  console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n  return (// ! NEED PRESETS FOR TASKS\n    __jsx(Formik, {\n      initialValues: emptyInitial,\n      validationSchema: PaperSchema,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, function (_ref) {\n      var _jsx;\n\n      var values = _ref.values,\n          handleChange = _ref.handleChange,\n          setFieldTouched = _ref.setFieldTouched,\n          isValidating = _ref.isValidating,\n          validateForm = _ref.validateForm,\n          handleSubmit = _ref.handleSubmit,\n          errors = _ref.errors;\n\n      var allTouched =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log('touched!');\n                  console.log({\n                    errors: errors\n                  });\n                  _context.next = 4;\n                  return _Object$keys(values).forEach(function (key) {\n                    setFieldTouched(key, true);\n                  });\n\n                case 4:\n                  _context.next = 6;\n                  return validateForm().then(function (errors) {\n                    return _Object$keys(errors).length === 0 && onSubmit();\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function allTouched() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var onSubmit =\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var res, data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  setLoading(true);\n                  values.__csrf_token = csrf;\n                  console.log('submitting');\n                  _context2.next = 5;\n                  return SendFile({\n                    values: values,\n                    url: url,\n                    csrf: csrf\n                  });\n\n                case 5:\n                  res = _context2.sent;\n                  _context2.next = 8;\n                  return res;\n\n                case 8:\n                  _context2.t0 = _context2.sent;\n\n                  if (!_context2.t0) {\n                    _context2.next = 11;\n                    break;\n                  }\n\n                  _context2.t0 = res.status;\n\n                case 11:\n                  data = _context2.t0;\n                  console.log({\n                    status: status\n                  });\n                  data && setStatus(data) && setToggle(true) && setLoading(false);\n                  return _context2.abrupt(\"return\");\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function onSubmit() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Please upload your paper PDF using the form below.\"), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381',\n          width: '80%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"I have used the templates available in the \", __jsx(Link, {\n        href: \"/authorsAreaInstructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"task-link_bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Instructions and Templates\")), \" section of the Author\\u2019s Area and I have also followed the guidance notes available there.\"), __jsx(Field, {\n        className: \"task-checkboxField-box\",\n        style: {\n          color: '#134381'\n        },\n        value: values.accept,\n        name: \"accept\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), errors.accept && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, errors.accept)), __jsx(\"div\", {\n        className: \"task-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"PDF upload\"), __jsx(Field, {\n        className: \"task-input\",\n        value: values.technicalpaper_filename,\n        style: {\n          color: '#134381'\n        },\n        name: \"technicalpaper_filename\",\n        component: SimpleFileUpload,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), errors.technicalpaper_filename && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-2rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, errors.technicalpaper_filename)), __jsx(\"div\", {\n        className: \"task-notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-notes-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Notes for reviewers:\"), __jsx(Field, {\n        className: \"task-notes-input\",\n        onClick: handleChange,\n        value: values.author_notes,\n        style: {\n          color: '#134381'\n        },\n        name: \"author_notes\",\n        component: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"task-field-copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Please confirm that you agree to assign copyright, by checking the box below.\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, __jsx(InstructionsPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" Click here \"), \"to read the copyright guidelines.\")), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"I agree to assign copyright in this paper to FISITA (UK) Ltd.\"), __jsx(Field, {\n        className: \"task-checkboxField-box\",\n        value: values.copyright,\n        style: {\n          color: '#134381'\n        },\n        name: \"copyright\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), errors.copyright && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, errors.copyright)), Loading ? __jsx(CircularProgress, {\n        size: 24,\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }) : __jsx(Button, (_jsx = {\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \".5rem 0\"\n        },\n        fontSize: \"2rem\",\n        onClick: allTouched\n      }, _defineProperty(_jsx, \"style\", {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      }), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }), _defineProperty(_jsx, \"__self\", this), _jsx), Status ? Status : 'submit'));\n    })\n  );\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js"],"names":["React","Component","useState","Link","Typography","CircularProgress","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","Button","SendFile","StyledTask","InstructionsPopup","PaperSchema","Paper","props","Loading","setLoading","Toggle","setToggle","Status","setStatus","emptyInitial","accept","technicalpaper_filename","author_notes","copyright","presets","csrf","apiUrl","paperId","type","url","console","log","values","handleChange","setFieldTouched","isValidating","validateForm","handleSubmit","errors","allTouched","forEach","key","then","length","onSubmit","__csrf_token","res","status","data","color","width","position","bottom","right","fontSize","margin","height","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport {PaperSchema} from '../TaskControl';\n\nexport const Paper = (props) => {\nconst [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n\n    const emptyInitial = {\n        accept: '',\n        technicalpaper_filename: '',\n        author_notes: '',\n        copyright: '',\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    const url = `https://prelude.eurobrake.net/authors/tasks/paper/${paperId}`;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PaperSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldTouched, isValidating, validateForm, handleSubmit, errors }) => {\n\n                  const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendFile({values, url, csrf});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n\n    \n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your paper PDF using the form below.</Typography>\n                         <div className=\"task-checkboxField\">\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381', width: '80%' }}\n\n                                >\n                                I have used the templates available in the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions and Templates</a></Link> section of the Author’s Area and I have also followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                style={{ color: '#134381', }}\n                                value={values.accept}\n                                name=\"accept\"\n                                component={Checkbox}\n                            >\n                            </Field>\n                           {errors.accept && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.accept}</label>}\n                        </div>\n                         <div className=\"task-field\">\n                            {/* REQUIRED AND FILE MUST BE A PDF */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                PDF upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.technicalpaper_filename}\n                                style={{ color: '#134381' }}\n                                name=\"technicalpaper_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                           {errors.technicalpaper_filename && <label style={{position: 'absolute', bottom: '-2rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.technicalpaper_filename}</label>}\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                         <div className=\"task-field-copy\">\n\n                        <Typography gutterBottom className=\"task-label\">Please confirm that you agree to assign copyright, by checking the box below.</Typography>\n                        <Typography gutterBottom className=\"task-label\"><InstructionsPopup > Click here </InstructionsPopup>to read the copyright guidelines.</Typography>\n                         </div>\n                          <div className=\"task-checkboxField\">\n\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381'}}\n\n                                >\n                                I agree to assign copyright in this paper to FISITA (UK) Ltd.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.copyright}\n                                style={{ color: '#134381', }}\n                                name=\"copyright\"\n                                component={Checkbox}\n                            >\n                            </Field>\n                            {errors.copyright && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.copyright}</label>}\n\n                        </div>\n                       \n                         {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}