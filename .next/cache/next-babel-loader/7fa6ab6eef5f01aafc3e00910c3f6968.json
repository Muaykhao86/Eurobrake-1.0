{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\nexport var login = function login(_ref) {\n  var logintoken = _ref.logintoken;\n  cookie.set('logintoken', logintoken, {\n    expires: 1\n  });\n  Router.push('/authorsAreaDash');\n}; // CHECK TOKEN, IF WE HAVE ONE RETURN TOKEN, IF WE DONT REDIRECT TO LOGIN PAGE\n\nexport var auth = function auth(ctx) {\n  var _cookies = cookies(ctx),\n      logintoken = _cookies.logintoken;\n\n  console.log('auth', logintoken); // If there's no token, it means the user is not logged in.\n\n  if (!logintoken) {\n    if (ctx.req) {\n      // If `ctx.req` is available it means we are on the server.\n      ctx.res.writeHead(302, {\n        Location: '/authorsArea'\n      });\n      ctx.res.end();\n    } else {\n      // This should only happen on client.\n      Router.push('/authorsArea');\n    }\n  }\n\n  return logintoken;\n}; // LOGOUT FUNCTION\n\nexport var logout =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return cookie.remove('logintoken');\n\n          case 2:\n            _context.next = 4;\n            return window.localStorage.setItem(\"logout\", _Date$now());\n\n          case 4:\n            _context.next = 6;\n            return Router.push(\"/authorsArea\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function logout(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // IF LOGGED IN/ HAS TOKEN RETURN THE COMPONENT \n\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var Wrapper = function Wrapper(props) {\n    var syncLogout = function syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/authorsArea');\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener('storage', syncLogout);\n      return function () {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, props);\n  };\n\n  Wrapper.getInitialProps =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(ctx) {\n      var logintoken, componentProps;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              logintoken = auth(ctx); // ! AUTH\n\n              _context2.t0 = WrappedComponent.getInitialProps;\n\n              if (!_context2.t0) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 5;\n              return WrappedComponent.getInitialProps(ctx);\n\n            case 5:\n              _context2.t0 = _context2.sent;\n\n            case 6:\n              componentProps = _context2.t0;\n              return _context2.abrupt(\"return\", _objectSpread({}, componentProps, {\n                logintoken: logintoken\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return Wrapper;\n};","map":null,"metadata":{},"sourceType":"module"}