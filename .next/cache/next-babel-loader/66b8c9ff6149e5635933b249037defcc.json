{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport { LoginSchema } from './FormControl';\nimport Link from 'next/link'; // async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const LoginForm = () => {\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const url = Toggle ? 'https://prelude.eurobrake.net/authors/reset' : 'https://prelude.eurobrake.net/authors/login';\n  console.log({\n    url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: LoginSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    handleSubmit\n  }) => {\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Please enter your email to reset your password\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.username,\n      style: {\n        color: '#134381'\n      },\n      name: \"username\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), !Toggle && __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Password:\"), __jsx(Field, {\n      type: \"password\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: () => {\n        handleSubmit();\n        {\n          /* SendForm({url, values}) */\n        }\n      },\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem\"\n      },\n      padding: \".5rem 4rem\",\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, Toggle ? 'Reset' : 'Login'), __jsx(\"a\", {\n      onClick: () => setToggle(Toggle => !Toggle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"form-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, Toggle ? `Back to login` : `Forgotten your password?`)));\n  });\n};\nconst emptyInitial = {\n  username: '',\n  password: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","StyledForm","Button","SendForm","Typography","LoginSchema","Link","LoginForm","Toggle","setToggle","url","console","log","emptyInitial","values","handleChange","handleSubmit","username","color","password","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport {LoginSchema} from './FormControl';\nimport Link from 'next/link';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const LoginForm = () => {\n    const [Toggle, setToggle] = useState(false);\n    const url = Toggle ? 'https://prelude.eurobrake.net/authors/reset' : 'https://prelude.eurobrake.net/authors/login';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={LoginSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange,handleSubmit }) => {\n                return (\n                    <StyledForm>\n                        {Toggle && <Typography className=\"form-title\">Please enter your email to reset your password</Typography>}\n\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.username}\n                                style={{ color: '#134381' }}\n                                name=\"username\"\n                                component={TextField}\n                            />\n                        </div>\n                        {!Toggle &&\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Password:\n                        </label>\n                            <Field\n                                type=\"password\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"password\"\n                                component={TextField}\n                            />\n                        </div>\n                        }\n                        <Button \n                            onClick={() => {\n                                handleSubmit()\n                                {/* SendForm({url, values}) */}\n                                }}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\" }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            {Toggle ? 'Reset' : 'Login'}\n                        </Button>\n                        <a onClick={() => setToggle(Toggle => !Toggle)}>\n                           <Typography className=\"form-link\">{Toggle ? `Back to login` : `Forgotten your password?`}</Typography> \n                        </a>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\nconst emptyInitial = {\n    username: '',\n    password: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}