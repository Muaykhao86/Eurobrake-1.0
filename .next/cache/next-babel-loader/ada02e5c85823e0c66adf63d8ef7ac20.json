{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport var AcceptPoster =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AcceptPoster, _Component);\n\n  function AcceptPoster(props) {\n    var _this;\n\n    _classCallCheck(this, AcceptPoster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AcceptPoster).call(this, props));\n    _this.state = {\n      taskType: ''\n    };\n    return _this;\n  }\n\n  _createClass(AcceptPoster, [{\n    key: \"render\",\n    value: function render() {\n      var emptyInitial = {\n        accept_poster_invitation: ''\n      };\n      var _this$props = this.props,\n          presets = _this$props.presets,\n          csrf = _this$props.csrf,\n          apiUrl = _this$props.apiUrl,\n          paperId = _this$props.paperId,\n          type = _this$props.type;\n      console.log('tasks', presets, csrf, apiUrl, paperId, type);\n      return (// ! NEED PRESETS FOR TASKS\n        __jsx(Formik, {\n          initialValues: emptyInitial,\n          enableReinitialize: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, function (_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange,\n              setFieldValue = _ref.setFieldValue,\n              isValidating = _ref.isValidating,\n              validateForm = _ref.validateForm,\n              handleSubmit = _ref.handleSubmit,\n              errors = _ref.errors;\n          console.log(values, 'Tasks');\n          return __jsx(StyledTask, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, paperId), __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"Accept invitation to present a poster submission\"), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"Your abstract has been accepted as a poster presentation at EuroBrake 2020.\"), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.\"), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Please use the options below to accept or decline this poster presentation offer.\"), __jsx(\"div\", {\n            className: \"task-field-radio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Accept invitation?\"), __jsx(Field, {\n            className: \"task-radio\",\n            value: values.accept_poster_invitation,\n            style: {\n              color: '#134381'\n            },\n            name: \"ok_to_publish_pitchvideo\",\n            component: RadioGroup,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Yes, I will make a poster presentation\", __jsx(\"input\", {\n            onChange: handleChange,\n            style: {\n              margin: '1rem'\n            },\n            type: \"radio\",\n            name: \"accept_poster_invitation\",\n            value: \"yes\",\n            id: \"yes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"No, please withdraw my paper from EuroBrake 2020\", __jsx(\"input\", {\n            style: {\n              margin: '1rem'\n            },\n            onChange: handleChange,\n            type: \"radio\",\n            name: \"accept_poster_invitation\",\n            value: \"no\",\n            id: \"no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }))), errors.ok_to_publish_ppt && __jsx(\"label\", {\n            style: {\n              position: 'absolute',\n              bottom: '-1rem',\n              right: '1rem',\n              color: '#ff0000',\n              fontSize: '1.5rem'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, errors.ok_to_publish_ppt)), __jsx(Button, {\n            onClick: function onClick() {\n              return validateForm().then(function (errors) {\n                return _Object$keys(errors).length === 0 && onSubmit();\n              });\n            },\n            bcolor: \"#134381\",\n            background: \"#134381\",\n            br: \"100rem\",\n            style: {\n              margin: \"3rem\",\n              color: '#FFF'\n            },\n            padding: \".5rem 4rem\",\n            fontSize: \"1.7rem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"Send\"));\n        })\n      );\n    }\n  }]);\n\n  return AcceptPoster;\n}(Component);","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","AcceptPoster","props","state","taskType","emptyInitial","accept_poster_invitation","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","color","margin","ok_to_publish_ppt","position","bottom","right","fontSize","then","length","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class AcceptPoster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n\n}\n\nrender(){\n    const emptyInitial = {\n       accept_poster_invitation: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange,  setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Accept invitation to present a poster submission</Typography>\n                        <Typography gutterBottom className=\"task-title\" >Your abstract has been accepted as a poster presentation at EuroBrake 2020.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please use the options below to accept or decline this poster presentation offer.</Typography>     \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Accept invitation?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.accept_poster_invitation}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                         Yes, I will make a poster presentation\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, please withdraw my paper from EuroBrake 2020\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_ppt && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_ppt}</label>}\n                        </div>\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}