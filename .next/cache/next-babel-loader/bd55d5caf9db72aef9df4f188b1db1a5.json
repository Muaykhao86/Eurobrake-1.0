{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    @font-face {\\n    font-family: 'MyriadPro-Regular';\\n    src: url('/fonts/MyriadPro-Regular.otf');\\n    font-weight: normal;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-Bold';\\n    src: url('/fonts/MyriadPro-Bold.otf');\\n    font-weight: bold;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-BoldIt';\\n    src: url('/fonts/MyriadPro-BoldIt.otf');\\n    font-weight: bold;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-Semibold';\\n    src: url('/fonts/MyriadPro-Semibold.otf');\\n    font-weight: 600;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-Light';\\n    src: url('/fonts/MyriadPro-Light.otf');\\n    font-weight: 300;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-LightIt';\\n    src: url('/fonts/MyriadPro-LightIt.otf');\\n    font-weight: lighter;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-It';\\n    src: url('/fonts/MyriadPro-It.otf');\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    @font-face {\\n    font-family: 'MyriadPro-Black';\\n    src: url('/fonts/MyriadPro-Black.otf');\\n    font-weight: 300;\\n    font-display: auto;\\n    font-style: normal;\\n    };\\n    *,\\n    *::before,\\n    *::after{\\n        margin: 0;\\n        padding: 0;\\n        box-sizing: inherit;\\n    };\\n    html{\\n        height: 100%;\\n        box-sizing:  border-box;\\n        font-size: 62.5%; \\n        /* 60% */\\n    };\\n    body{\\n        /* To set the footer at the bottom we have to leave space for it in the parent container */\\n        position: relative;\\n        min-height: 100%;\\n        padding-bottom: 40rem; /* ! FOOTER PADDING , HAS BEEN KNOW TO PUSH PAGE UP\\n        font-family: \", \";\\n        color: black;\\n        line-height: 1.6;\\n        /* 1.2 */\\n    }\\n    \\n    a{\\n        text-decoration: none;\\n        color: black;\\n    }\\n    ;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Meta from './Meta';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nvar theme = {\n  black: '#000',\n  white: '#FFF',\n  primary: '#134381',\n  secondary: '#F9B721',\n  MPRegular: 'MyriadPro-Regular',\n  MPBold: 'MyriadPro-Bold',\n  MPBoldIt: 'MyriadPro-BoldIt',\n  MPSemibold: 'MyriadPro-Semibold',\n  MPLight: 'MyriadPro-Light',\n  MPLightIt: 'MyriadPro-LightIt',\n  MPIt: 'MyriadPro-It',\n  MPBlack: 'MyriadPro-Black',\n  minWidth: '50%',\n  bs: '0 1.2rem 2.4rem rgba(0, 0, 0, .09)'\n};\nvar StyledPage = styled.div.withConfig({\n  displayName: \"Page__StyledPage\",\n  componentId: \"sc-1cyutnt-0\"\n})([\"display:flex;flex-flow:column;justify-content:space-between;background:white;\"]);\nvar GlobalStyle = createGlobalStyle(_templateObject(), function (props) {\n  return props.theme.MPRegular;\n});\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    _classCallCheck(this, Page);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Page).apply(this, arguments));\n  }\n\n  _createClass(Page, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(GlobalStyle, null), __jsx(StyledPage, null, __jsx(Meta, null), __jsx(Header, null), this.props.children, __jsx(Footer, null)));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport { Page as default };","map":null,"metadata":{},"sourceType":"module"}