{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/_app.js\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport Page from '../components/Page';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    // need to remove the server-side injected CSS on the client side because of avoiding duplicated injection of CSS. as per material ui docs\n    value: function componentDidMount() {\n      var jssStyles = document.querySelector('#jss-server-side');\n      if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/pages/_app.js"],"names":["App","React","Page","MyApp","jssStyles","document","querySelector","parentNode","removeChild","props","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAkB,oBAAlB;;IAIqBC,K;;;;;;;;;;;;;AACnB;wCACoB;AAClB,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;AACA,UAAIF,SAAS,IAAIA,SAAS,CAACG,UAA3B,EACEH,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACH;;;6BACS;AAAA,wBACyB,KAAKK,KAD9B;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAER,aACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADJ;AAKD;;;;EAdgCX,G;;SAAdG,K","sourcesContent":["import App from 'next/app'\nimport React from 'react'\nimport Page  from '../components/Page';\n\n\n\nexport default class MyApp extends App {\n  // need to remove the server-side injected CSS on the client side because of avoiding duplicated injection of CSS. as per material ui docs\n  componentDidMount() {\n    const jssStyles = document.querySelector('#jss-server-side')\n    if (jssStyles && jssStyles.parentNode)\n      jssStyles.parentNode.removeChild(jssStyles)\n  }\n  render () {\n    const { Component, pageProps } = this.props\n    return (\n        <Page>\n        <Component {...pageProps} />\n        </Page>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}