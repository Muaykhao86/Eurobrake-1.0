{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport var AcceptPoster =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AcceptPoster, _Component);\n\n  function AcceptPoster(props) {\n    var _this;\n\n    _classCallCheck(this, AcceptPoster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AcceptPoster).call(this, props));\n    _this.state = {\n      taskType: ''\n    };\n    return _this;\n  }\n\n  _createClass(AcceptPoster, [{\n    key: \"render\",\n    value: function render() {\n      var emptyInitial = {\n        accept_poster_invitation: ''\n      };\n      var _this$props = this.props,\n          presets = _this$props.presets,\n          csrf = _this$props.csrf,\n          apiUrl = _this$props.apiUrl,\n          paperId = _this$props.paperId,\n          type = _this$props.type;\n      console.log('tasks', presets, csrf, apiUrl, paperId, type);\n      return __jsx(Formik, {\n        initialValues: emptyInitial,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, function (_ref) {\n        var values = _ref.values,\n            handleChange = _ref.handleChange,\n            setFieldValue = _ref.setFieldValue,\n            isValidating = _ref.isValidating,\n            validateForm = _ref.validateForm,\n            handleSubmit = _ref.handleSubmit,\n            errors = _ref.errors;\n        console.log(values, 'Tasks');\n\n        var handleCheckBox =\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var accept, copyright;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    accept = values.accept;\n                    copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes');\n                    accept === false && setFieldValue('accept', '');\n                    copyright === true && setFieldValue('copyright', 'yes');\n                    copyright === false && setFieldValue('copyright', '');\n                    return _context.abrupt(\"return\");\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function handleCheckBox() {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n\n        var onSubmit = function onSubmit() {\n          values.__csrf_token = csrf;\n          console.log('submitting', values);\n        };\n\n        return __jsx(StyledTask, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, paperId), __jsx(Typography, {\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Accept invitation to present a poster submission\"), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Your abstract has been accepted as a poster presentation at EuroBrake 2020.\"), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.\"), __jsx(Typography, {\n          gutterBottom: true,\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Please use the options below to accept or decline this poster presentation offer.\"), __jsx(\"div\", {\n          className: \"task-field-radio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"label\",\n          className: \"task-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Accept invitation?\"), __jsx(Field, {\n          className: \"task-radio\",\n          value: values.accept_poster_invitation,\n          style: {\n            color: '#134381'\n          },\n          name: \"ok_to_publish_pitchvideo\",\n          component: RadioGroup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Yes, I will make a poster presentation\", __jsx(\"input\", {\n          onChange: handleChange,\n          style: {\n            margin: '1rem'\n          },\n          type: \"radio\",\n          name: \"accept_poster_invitation\",\n          value: \"yes\",\n          id: \"yes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          style: {\n            margin: '1rem'\n          },\n          htmlFor: \"label\",\n          className: \"task-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"No, please withdraw my paper from EuroBrake 2020\", __jsx(\"input\", {\n          style: {\n            margin: '1rem'\n          },\n          onChange: handleChange,\n          type: \"radio\",\n          name: \"accept_poster_invitation\",\n          value: \"no\",\n          id: \"no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }))), errors.ok_to_publish_ppt && __jsx(\"label\", {\n          style: {\n            position: 'absolute',\n            bottom: '-1rem',\n            right: '1rem',\n            color: '#ff0000',\n            fontSize: '1.5rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, errors.ok_to_publish_ppt)), __jsx(Button, {\n          onClick: function onClick() {\n            return validateForm().then(function (errors) {\n              return _Object$keys(errors).length === 0 && onSubmit();\n            });\n          },\n          bcolor: \"#134381\",\n          background: \"#134381\",\n          br: \"100rem\",\n          style: {\n            margin: \"3rem\",\n            color: '#FFF'\n          },\n          padding: \".5rem 4rem\",\n          fontSize: \"1.7rem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Send\"));\n      });\n    }\n  }]);\n\n  return AcceptPoster;\n}(Component);","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","AcceptPoster","props","state","taskType","emptyInitial","accept_poster_invitation","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","accept","copyright","onSubmit","__csrf_token","color","margin","ok_to_publish_ppt","position","bottom","right","fontSize","then","length"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAAgC,QAAhC;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,iBAAtC,EAAyDC,QAAzD,EAAmEC,UAAnE,QAAoF,oBAApF;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CAIA;AACA;AACA;;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACA,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAMlB;;AAPD;AAAA;AAAA,6BASQ;AACJ,UAAMC,YAAY,GAAG;AAClBC,QAAAA,wBAAwB,EAAE;AADR,OAArB;AADI,wBAK2C,KAAKJ,KALhD;AAAA,UAKGK,OALH,eAKGA,OALH;AAAA,UAKYC,IALZ,eAKYA,IALZ;AAAA,UAKkBC,MALlB,eAKkBA,MALlB;AAAA,UAK0BC,OAL1B,eAK0BA,OAL1B;AAAA,UAKmCC,IALnC,eAKmCA,IALnC;AAMJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,OAArB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,IAArD;AAEA,aACI,MAAC,MAAD;AACC,QAAA,aAAa,EAAEN,YADhB;AAEI,QAAA,kBAAkB,MAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,gBAA+F;AAAA,YAA5FS,MAA4F,QAA5FA,MAA4F;AAAA,YAApFC,YAAoF,QAApFA,YAAoF;AAAA,YAArEC,aAAqE,QAArEA,aAAqE;AAAA,YAAtDC,YAAsD,QAAtDA,YAAsD;AAAA,YAAxCC,YAAwC,QAAxCA,YAAwC;AAAA,YAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,YAAZC,MAAY,QAAZA,MAAY;AAC5FR,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,OAApB;;AACG,YAAMO,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,oBAAAA,MADgB,GACPR,MAAM,CAACQ,MADA;AAEhBC,oBAAAA,SAFgB,GAEJT,MAAM,CAACS,SAFH;AAGtBD,oBAAAA,MAAM,KAAK,IAAX,IAAmBN,aAAa,CAAC,QAAD,EAAW,KAAX,CAAhC;AACAM,oBAAAA,MAAM,KAAK,KAAX,IAAoBN,aAAa,CAAC,QAAD,EAAW,EAAX,CAAjC;AACAO,oBAAAA,SAAS,KAAK,IAAd,IAAsBP,aAAa,CAAC,WAAD,EAAc,KAAd,CAAnC;AACAO,oBAAAA,SAAS,KAAK,KAAd,IAAuBP,aAAa,CAAC,WAAD,EAAc,EAAd,CAApC;AANsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH;;AAAA,0BAAdK,cAAc;AAAA;AAAA;AAAA,WAApB;;AAUH,YAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBV,UAAAA,MAAM,CAACW,YAAP,GAAsBjB,IAAtB;AACEI,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,MAA1B;AACL,SAHC;;AAIA,eACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCJ,OAApC,CADJ,EAEI,MAAC,UAAD;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFJ,EAGI,MAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAHJ,EAII,MAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAJJ,EAKI,MAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FALJ,EAMK;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AACI,UAAA,OAAO,EAAC,OADZ;AAEI,UAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADH,EAMG,MAAC,KAAD;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,KAAK,EAAEI,MAAM,CAACR,wBAFlB;AAGI,UAAA,KAAK,EAAE;AAAEoB,YAAAA,KAAK,EAAE;AAAT,WAHX;AAII,UAAA,IAAI,EAAC,0BAJT;AAKI,UAAA,SAAS,EAAE7B,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI;AACI,UAAA,KAAK,EAAE;AAAE8B,YAAAA,MAAM,EAAE;AAAV,WADX;AAEI,UAAA,OAAO,EAAC,OAFZ;AAGI,UAAA,SAAS,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAKQ;AACA,UAAA,QAAQ,EAAEZ,YADV;AAEA,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE;AAAV,WAFP;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,IAAI,EAAC,0BAJL;AAKA,UAAA,KAAK,EAAC,KALN;AAMA,UAAA,EAAE,EAAC,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,CAPJ,EAqBI;AACI,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAE;AAAV,WADX;AAEI,UAAA,OAAO,EAAC,OAFZ;AAGI,UAAA,SAAS,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAKQ;AACJ,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAE;AAAV,WADH;AAEA,UAAA,QAAQ,EAAEZ,YAFV;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,IAAI,EAAC,0BAJL;AAKA,UAAA,KAAK,EAAC,IALN;AAMA,UAAA,EAAE,EAAC,IANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,CArBJ,CANH,EA0CIK,MAAM,CAACQ,iBAAP,IAA4B;AAAO,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAE,UAAX;AAAuBC,YAAAA,MAAM,EAAE,OAA/B;AAAwCC,YAAAA,KAAK,EAAE,MAA/C;AAAuDL,YAAAA,KAAK,EAAE,SAA9D;AAAyEM,YAAAA,QAAQ,EAAE;AAAnF,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6GZ,MAAM,CAACQ,iBAApH,CA1ChC,CANL,EAkDI,MAAC,MAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBAAMV,YAAY,GAAGe,IAAf,CAAoB,UAAAb,MAAM;AAAA,qBAAI,aAAYA,MAAZ,EAAoBc,MAApB,KAA+B,CAA/B,IAAoCV,QAAQ,EAAhD;AAAA,aAA1B,CAAN;AAAA,WADb;AAGI,UAAA,MAAM,EAAC,SAHX;AAII,UAAA,UAAU,EAAC,SAJf;AAKI,UAAA,EAAE,EAAC,QALP;AAMI,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE,MAAV;AAAkBD,YAAAA,KAAK,EAAE;AAAzB,WANX;AAOI,UAAA,OAAO,EAAC,YAPZ;AAQI,UAAA,QAAQ,EAAC,QARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlDJ,CADJ;AAiEH,OArFL,CADJ;AAyFH;AA1GD;;AAAA;AAAA,EAAkCvC,SAAlC","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class AcceptPoster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n\n}\n\nrender(){\n    const emptyInitial = {\n       accept_poster_invitation: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange,  setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n                console.log(values, 'Tasks')\n                   const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    accept === false && setFieldValue('accept', '')\n                    copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '')\n                   return\n                }\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting', values)\n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Accept invitation to present a poster submission</Typography>\n                        <Typography gutterBottom className=\"task-title\" >Your abstract has been accepted as a poster presentation at EuroBrake 2020.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please use the options below to accept or decline this poster presentation offer.</Typography>     \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Accept invitation?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.accept_poster_invitation}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                         Yes, I will make a poster presentation\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, please withdraw my paper from EuroBrake 2020\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_ppt && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_ppt}</label>}\n                        </div>\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}