{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport { LoginSchema } from './FormControl';\nimport Link from 'next/link'; // async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport var LoginForm = function LoginForm() {\n  var _useState = useState(false),\n      Reset = _useState[0],\n      setReset = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var url = Toggle ? 'https://prelude.eurobrake.net/authors/reset' : 'https://prelude.eurobrake.net/authors/login';\n  console.log({\n    url: url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: LoginSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        validateForm = _ref.validateForm;\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SendForm({\n                  url: url,\n                  values: values\n                });\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res;\n\n              case 5:\n                _context.t0 = _context.sent;\n\n                if (!_context.t0) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.t0 = res.status;\n\n              case 8:\n                data = _context.t0;\n                console.log({\n                  status: status\n                });\n                data && setStatus(data) && setToggle(function (Toggle) {\n                  return !Toggle;\n                });\n                return _context.abrupt(\"return\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function onSubmit() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, Reset && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Please enter your email to reset your password\"), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, Status), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.username,\n      style: {\n        color: '#134381'\n      },\n      name: \"username\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), !Reset && __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Password:\"), __jsx(Field, {\n      type: \"password\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: function onClick() {\n        return validateForm().then(function (errors) {\n          return _Object$keys(errors).length === 0 && onSubmit();\n        });\n      },\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem\"\n      },\n      padding: \".5rem 4rem\",\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, Reset ? 'Reset' : 'Login'), __jsx(Link, {\n      href: \"/f/[id]/[formType]\",\n      as: \"/f/XC8Z3FWxDuQtk68qVs3uwF/reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return setReset(function (Reset) {\n          return !Reset;\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"form-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Forgotten your password?\"))));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nvar emptyInitial = {\n  username: '',\n  password: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","StyledForm","Button","SendForm","Typography","LoginSchema","Link","LoginForm","Reset","setReset","Toggle","setToggle","Status","setStatus","url","console","log","emptyInitial","values","handleChange","validateForm","onSubmit","res","status","data","username","color","password","then","errors","length","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport {LoginSchema} from './FormControl';\nimport Link from 'next/link';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const LoginForm = () => {\n    const [Reset, setReset] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n\n    const url = Toggle ? 'https://prelude.eurobrake.net/authors/reset' : 'https://prelude.eurobrake.net/authors/login';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            validationSchema={LoginSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm }) => {\n\n                const onSubmit = async () => {\n                   const res = await SendForm({url, values});\n                   const data = await res && res.status;  \n                   console.log({status})\n                  data && setStatus(data) && setToggle(Toggle => !Toggle)\n                    return              \n              }\n\n                return (\n                    <StyledForm>\n                        {Reset && <Typography className=\"form-title\">Please enter your email to reset your password</Typography>}\n                        {Toggle && <Typography className=\"form-title\">{Status}</Typography>}\n\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.username}\n                                style={{ color: '#134381' }}\n                                name=\"username\"\n                                component={TextField}\n                            />\n                        </div>\n                        {!Reset &&\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Password:\n                        </label>\n                            <Field\n                                type=\"password\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"password\"\n                                component={TextField}\n                            />\n                        </div>\n                        }\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\" }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            {Reset ? 'Reset' : 'Login'}\n                        </Button>\n                        \n                        <Link\n                            href=\"/f/[id]/[formType]\"\n                            as={`/f/XC8Z3FWxDuQtk68qVs3uwF/reset`} >\n                        <a onClick={() => setReset(Reset => !Reset)}>\n                           <Typography className=\"form-link\"> Forgotten your password?</Typography> \n                        </a>\n                        </Link>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    username: '',\n    password: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}