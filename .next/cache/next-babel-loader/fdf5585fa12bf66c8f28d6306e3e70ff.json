{"ast":null,"code":"import * as yup from 'yup';\nexport const ContactSchema = yup.object().shape({\n  name: yup.string().nullable(),\n  firstname: yup.string().required('Required'),\n  lastname: yup.string().required('Required'),\n  jobtitle: yup.string().nullable(),\n  company: yup.string().required('Required'),\n  address: yup.string().nullable(),\n  email: yup.string().required('Required').email(),\n  enquiry: yup.string().required('Required')\n});\nexport const AuthorSchema = yup.object().shape({\n  title: yup.string().nullable(),\n  firstname: yup.string().required('Required'),\n  lastname: yup.string().required('Required'),\n  email: yup.string().required('Required').email(),\n  jobtitle: yup.string().required('Required'),\n  company: yup.string().required('Required'),\n  address1: yup.string().required('Required'),\n  address2: yup.string().nullable(),\n  address3: yup.string().nullable(),\n  city: yup.string().required('Required'),\n  scp: yup.string().nullable(),\n  postal: yup.string().nullable(),\n  country: yup.string().required('Required'),\n  phone: yup.string().required('Required'),\n  fax: yup.string().nullable(),\n  password: yup.string().nullable(),\n  confirmed_password: yup.string().nullable()\n});\nexport const ResetSchema = yup.object().shape({\n  new_password: yup.string().required('Required').min(8, 'Password must be a least 8 characters long'),\n  confirm_password: yup.string().required('Required').min(8, 'Password must be a least 8 characters long').oneOf([yup.ref('new_password'), null], 'Passwords must match')\n});\nexport const LoginSchema = yup.object().shape({\n  username: yup.string().required('Required').email('Please enter a valid email'),\n  password: yup.string().required('Required')\n});\nexport const AbstractSchema = yup.object().shape({\n  author_title: yup.string().nullable(),\n  author_firstname: yup.string().required('Required'),\n  author_lastname: yup.string().required('Required'),\n  author_email: yup.string().required('Required').email(),\n  author_jobtitle: yup.string().required('Required'),\n  author_company: yup.string().required('Required'),\n  author_address1: yup.string().required('Required'),\n  author_address2: yup.string().nullable(),\n  author_address3: yup.string().nullable(),\n  author_city: yup.string().required('Required'),\n  author_scp: yup.string().required('Required'),\n  author_postal: yup.string().required('Required'),\n  author_country: yup.string().required('Required'),\n  author_phone: yup.string().required('Required'),\n  is_presenting_author: yup.string().required('Required'),\n  papertitle: yup.string().required('Required'),\n  abstract: yup.string().required('Required').test('wordCount', 'Max 750 words', value => value && value.match(/[\\w\\d\\’\\'-]+/gi).length <= 750 // split(' ').length <= 100 \n  ),\n  consider_for_journal: yup.string().nullable(),\n  secondary_authors: yup.array().of(yup.object().shape({\n    title: yup.string().nullable(),\n    firstname: yup.string().required('Required'),\n    lastname: yup.string().required('Required'),\n    email: yup.string().email().required('Required'),\n    company: yup.string().required('Required'),\n    country: yup.string().required('Required'),\n    is_presenting_author: yup.string().required('Required')\n  }))\n});\nconst CV_SUPPORTED_FORMATS = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\nconst PROOF_SUPPORTED_FORMATS = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\nconst FILE_SIZE = 5033164800;\nexport const EsopSchema = yup.object().shape({\n  student_title: yup.string().nullable(),\n  student_firstname: yup.string().required('Required'),\n  student_lastname: yup.string().required('Required'),\n  student_email: yup.string().required('Required'),\n  student_address1: yup.string().required('Required'),\n  student_address2: yup.string().nullable(),\n  student_address3: yup.string().nullable(),\n  student_city: yup.string().required('Required'),\n  student_scp: yup.string().nullable(),\n  student_postal: yup.string().nullable(),\n  student_country: yup.string().required('Required'),\n  student_membersociety: yup.string().nullable(),\n  birth_city: yup.string().nullable(),\n  birth_country: yup.string().nullable(),\n  student_level_current: yup.string().required('Required'),\n  student_level_seeking: yup.string().required('Required'),\n  university_course: yup.string().required('Required'),\n  university_name: yup.string().required('Required'),\n  university_address1: yup.string().nullable(),\n  university_address2: yup.string().nullable(),\n  university_address3: yup.string().nullable(),\n  university_city: yup.string().required('Required'),\n  university_scp: yup.string().nullable(),\n  university_postal: yup.string().nullable(),\n  university_country: yup.string().required('Required'),\n  cv_filename_uploader: yup.mixed().required('Required').test(\"fileFormat\", \"Unsupported Format\", value => value && CV_SUPPORTED_FORMATS.includes(value.type)),\n  personal_statement: yup.string().required('Required').test('wordCount', 'Max 250 words', value => value && value.match(/[\\w\\d\\’\\'-]+/gi).length <= 250 // split(' ').length <= 100 \n  ).test('wordCount', 'Min 150 words', value => value && value.match(/[\\w\\d\\’\\'-]+/gi).length >= 150 // split(' ').length <= 100 \n  ),\n  student_status_filename_uploader: yup.string().required('Required').test(\"fileFormat\", \"Unsupported Format\", value => value && PROOF_SUPPORTED_FORMATS.includes(value.type)).test(\"fileSize\", \"File too large\", value => value && value.size <= FILE_SIZE),\n  question_1_answer: yup.string().required('Required'),\n  question_2_answer: yup.string().required('Required'),\n  question_3_answer: yup.string().required('Required'),\n  question_4_answer: yup.array().required('Required').max(3, 'Please select only three').min(3, 'Please select three'),\n  youtube_url: yup.string().nullable(),\n  roundtable: yup.array().nullable(),\n  roundtable_other: yup.string().nullable(),\n  marketing: yup.string().required('Required'),\n  marketing_other: yup.string().nullable(),\n  previous_participant: yup.string().required('Required'),\n  initiatives: yup.array().nullable(),\n  initiatives_other: yup.string().nullable(),\n  consent_sponsors: yup.string().nullable(),\n  consent_fiec: yup.string().nullable(),\n  consent_wep: yup.string().nullable(),\n  consent_bursary: yup.string().nullable(),\n  consent_events: yup.string().nullable(),\n  consent_yfia: yup.string().nullable(),\n  __csrf_token: yup.string()\n});","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/FormControl.js"],"names":["yup","ContactSchema","object","shape","name","string","nullable","firstname","required","lastname","jobtitle","company","address","email","enquiry","AuthorSchema","title","address1","address2","address3","city","scp","postal","country","phone","fax","password","confirmed_password","ResetSchema","new_password","min","confirm_password","oneOf","ref","LoginSchema","username","AbstractSchema","author_title","author_firstname","author_lastname","author_email","author_jobtitle","author_company","author_address1","author_address2","author_address3","author_city","author_scp","author_postal","author_country","author_phone","is_presenting_author","papertitle","abstract","test","value","match","length","consider_for_journal","secondary_authors","array","of","CV_SUPPORTED_FORMATS","PROOF_SUPPORTED_FORMATS","FILE_SIZE","EsopSchema","student_title","student_firstname","student_lastname","student_email","student_address1","student_address2","student_address3","student_city","student_scp","student_postal","student_country","student_membersociety","birth_city","birth_country","student_level_current","student_level_seeking","university_course","university_name","university_address1","university_address2","university_address3","university_city","university_scp","university_postal","university_country","cv_filename_uploader","mixed","includes","type","personal_statement","student_status_filename_uploader","size","question_1_answer","question_2_answer","question_3_answer","question_4_answer","max","youtube_url","roundtable","roundtable_other","marketing","marketing_other","previous_participant","initiatives","initiatives_other","consent_sponsors","consent_fiec","consent_wep","consent_bursary","consent_events","consent_yfia","__csrf_token"],"mappings":"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","sourcesContent":["import * as yup from 'yup';\n\nexport const ContactSchema = yup.object().shape({\n    name: yup.string().nullable(),\n    firstname: yup.string().required('Required'),\n    lastname:yup.string().required('Required'),\n    jobtitle:yup.string().nullable(),\n    company: yup.string().required('Required'),\n    address: yup.string().nullable(),\n    email: yup.string().required('Required')\n    .email(),\n    enquiry: yup.string().required('Required')\n})\n\n\n\nexport const AuthorSchema = yup.object().shape({\n    title: yup.string().nullable(),\n    firstname: yup.string().required('Required'),\n    lastname:yup.string().required('Required'),\n    email: yup.string().required('Required')\n    .email(),\n    jobtitle:yup.string().required('Required'),\n    company: yup.string().required('Required'),\n    address1: yup.string().required('Required'),\n    address2: yup.string().nullable(),\n    address3: yup.string().nullable(),\n    city:yup.string().required('Required'),\n    scp:yup.string().nullable(),\n    postal: yup.string().nullable(),\n    country: yup.string().required('Required'),\n    phone: yup.string().required('Required'),\n    fax: yup.string().nullable(),\n    password:yup.string().nullable(),\n    confirmed_password: yup.string().nullable()\n\n})\n\nexport const ResetSchema = yup.object().shape({\n     new_password:  yup.string().required('Required')\n     .min(8, 'Password must be a least 8 characters long'),\n    confirm_password: yup.string().required('Required')\n    .min(8, 'Password must be a least 8 characters long')\n     .oneOf([yup.ref('new_password'), null],'Passwords must match')\n    \n});\n        \nexport const LoginSchema = yup.object().shape({\n    username: yup.string().required('Required')\n        .email('Please enter a valid email'),\n    password: yup.string().required('Required'),\n});\n        \nexport const AbstractSchema = yup.object().shape({\n    author_title: yup.string().nullable(),\n    author_firstname: yup.string().required('Required'),\n    author_lastname: yup.string().required('Required'),\n    author_email: yup.string().required('Required')\n        .email(),\n    author_jobtitle: yup.string().required('Required'),\n    author_company: yup.string().required('Required'),\n    author_address1: yup.string().required('Required'),\n    author_address2: yup.string().nullable(),\n    author_address3: yup.string().nullable(),\n    author_city: yup.string().required('Required'),\n    author_scp: yup.string().required('Required'),\n    author_postal: yup.string().required('Required'),\n    author_country: yup.string().required('Required'),\n    author_phone: yup.string().required('Required'),\n    is_presenting_author: yup.string().required('Required'),\n    papertitle: yup.string()\n        .required('Required'),   \n    abstract: yup.string().required('Required')\n      .test(\n        'wordCount',\n        'Max 750 words',\n        value => value && \n          value.match(/[\\w\\d\\’\\'-]+/gi)\n          .length <= 750\n          // split(' ').length <= 100 \n      ),\n    consider_for_journal: yup.string().nullable(),\n    secondary_authors: yup.array()\n        .of(yup.object().shape({\n            title: yup.string().nullable(),\n            firstname: yup.string()\n                .required('Required'),\n            lastname: yup.string()\n                .required('Required'),\n            email: yup.string()\n                .email()\n                .required('Required'),\n            company: yup.string()\n                .required('Required'),\n            country: yup.string()\n                .required('Required'),\n            is_presenting_author: yup.string()\n                .required('Required'),\n        }))\n});\n\n const CV_SUPPORTED_FORMATS = [\n     'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ];\n\n const PROOF_SUPPORTED_FORMATS = [\n     'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ];\n\n  const FILE_SIZE = 5033164800 ;\n\n\nexport const EsopSchema = yup.object().shape({\n    student_title: yup.string().nullable(),\n    student_firstname: yup.string().required('Required'),\n    student_lastname: yup.string().required('Required'),\n    student_email: yup.string().required('Required'),\n    student_address1: yup.string().required('Required'),\n    student_address2: yup.string().nullable(),\n    student_address3: yup.string().nullable(),\n    student_city: yup.string().required('Required'),\n    student_scp: yup.string().nullable(),\n    student_postal: yup.string().nullable(),\n    student_country: yup.string().required('Required'),\n    student_membersociety: yup.string().nullable(),\n    birth_city: yup.string().nullable(),\n    birth_country: yup.string().nullable(),\n    student_level_current: yup.string().required('Required'),\n    student_level_seeking: yup.string().required('Required'),\n    university_course: yup.string().required('Required'),\n    university_name: yup.string().required('Required'),\n    university_address1: yup.string().nullable(),\n    university_address2: yup.string().nullable(),\n    university_address3: yup.string().nullable(),\n    university_city: yup.string().required('Required'),\n    university_scp: yup.string().nullable(),\n    university_postal: yup.string().nullable(),\n    university_country: yup.string().required('Required'),\n    cv_filename_uploader: yup.mixed().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && CV_SUPPORTED_FORMATS.includes(value.type)),\n    personal_statement: yup.string().required('Required')\n      .test(\n        'wordCount',\n        'Max 250 words',\n        value => value && \n          value.match(/[\\w\\d\\’\\'-]+/gi)\n          .length <= 250\n          // split(' ').length <= 100 \n      )\n      .test(\n        'wordCount',\n        'Min 150 words',\n        value => value && \n          value.match(/[\\w\\d\\’\\'-]+/gi)\n          .length >= 150\n          // split(' ').length <= 100 \n      ),\n    student_status_filename_uploader: yup.string().required('Required')\n    .test(\"fileFormat\",\n          \"Unsupported Format\",\n          value => value && PROOF_SUPPORTED_FORMATS.includes(value.type))\n    .test(\n          \"fileSize\",\n          \"File too large\",\n          value => value && value.size <= FILE_SIZE\n        ),\n    question_1_answer: yup.string().required('Required'),\n    question_2_answer: yup.string().required('Required'),\n    question_3_answer: yup.string().required('Required'),\n    question_4_answer: yup.array().required('Required').max(3, 'Please select only three').min(3, 'Please select three'),\n    youtube_url: yup.string().nullable(),\n    roundtable: yup.array().nullable(),\n    roundtable_other: yup.string().nullable(),\n    marketing: yup.string().required('Required'),\n    marketing_other: yup.string().nullable(),\n    previous_participant: yup.string().required('Required'),\n    initiatives: yup.array().nullable(),\n    initiatives_other: yup.string().nullable(),\n    consent_sponsors: yup.string().nullable(),\n    consent_fiec: yup.string().nullable(),\n    consent_wep: yup.string().nullable(),\n    consent_bursary: yup.string().nullable(),\n    consent_events: yup.string().nullable(),\n    consent_yfia: yup.string().nullable(),\n    __csrf_token: yup.string()\n});\n"]},"metadata":{},"sourceType":"module"}