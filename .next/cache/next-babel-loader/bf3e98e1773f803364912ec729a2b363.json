{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage } from 'formik';\nimport { StyledForm } from './Formstyles';\nimport TextField from '@material-ui/core/TextField';\nimport { AbstractSchema } from './FormControl';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nvar url = 'https://prelude.eurobrake.net/login';\nexport var LoginForm = function LoginForm() {\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, actions) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SendForm({\n                  values: values,\n                  url: url\n                });\n\n              case 2:\n                setTimeout(function () {\n                  alert(_JSON$stringify(values, null, 2));\n                  actions.setSubmitting(false);\n                }, 1000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        isSubmitting = _ref2.isSubmitting,\n        isValidating = _ref2.isValidating,\n        handleChange = _ref2.handleChange;\n    console.log(values);\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.login_email,\n      style: {\n        color: '#134381'\n      },\n      name: \"login_email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Password:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.login_password,\n      style: {\n        color: '#134381'\n      },\n      name: \"login_password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), __jsx(Button, {\n      type: \"submit\",\n      bcolor: \"#134381\",\n      padding: \"0.5rem 2rem\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \".5rem 0\"\n      },\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Login\"), __jsx(Typography, {\n      className: \"login_form-link\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Forgotten your password?\"));\n  });\n};\nvar emptyInitial = {\n  login_email: '',\n  login_password: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js"],"names":["React","Component","Formik","Form","Field","FieldArray","FastField","ErrorMessage","StyledForm","TextField","AbstractSchema","Button","SendForm","Typography","url","LoginForm","emptyInitial","values","actions","setTimeout","alert","setSubmitting","isSubmitting","isValidating","handleChange","console","log","login_email","color","login_password","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,YAArD,QAA0E,QAA1E;AAEA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,IAAMC,GAAG,GAAI,qCAAb;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC/B,SACC,MAAC,MAAD;AACW,IAAA,aAAa,EAAEC,YAD1B;AAEW,IAAA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAE,iBAAOC,MAAP,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACFN,QAAQ,CAAC;AAACK,kBAAAA,MAAM,EAANA,MAAD;AAASH,kBAAAA,GAAG,EAAHA;AAAT,iBAAD,CADN;;AAAA;AAERK,gBAAAA,UAAU,CAAC,YAAM;AACXC,kBAAAA,KAAK,CAAC,gBAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,kBAAAA,OAAO,CAACG,aAAR,CAAsB,KAAtB;AACH,iBAHO,EAGL,IAHK,CAAV;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFnB;AASW,IAAA,kBAAkB,MAT7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWY,iBAA0D;AAAA,QAAvDJ,MAAuD,SAAvDA,MAAuD;AAAA,QAA/CK,YAA+C,SAA/CA,YAA+C;AAAA,QAAjCC,YAAiC,SAAjCA,YAAiC;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACJ,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEO,YAFb;AAGI,MAAA,KAAK,EAAEP,MAAM,CAACU,WAHlB;AAII,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,SAAS,EAAEnB,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EAiBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEe,YAFb;AAGI,MAAA,KAAK,EAAEP,MAAM,CAACY,cAHlB;AAII,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,gBALT;AAMI,MAAA,SAAS,EAAEnB,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAjBJ,EAiCI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,MAAM,EAAC,SADf;AAEQ,MAAA,OAAO,EAAC,aAFhB;AAGQ,MAAA,UAAU,EAAC,SAHnB;AAIQ,MAAA,EAAE,EAAC,QAJX;AAKQ,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OALf;AAMQ,MAAA,QAAQ,EAAC,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCJ,EA0CI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAwC,MAAA,IAAI,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA1CJ,CADJ;AA8CH,GA3DZ,CADD;AA+DC,CAhEM;AAoEP,IAAMd,YAAY,GAAG;AACjBW,EAAAA,WAAW,EAAE,EADI;AAEjBE,EAAAA,cAAc,EAAE;AAFC,CAArB","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage, } from 'formik';\n\nimport {StyledForm} from './Formstyles';\nimport TextField from '@material-ui/core/TextField';\nimport {AbstractSchema} from './FormControl';\n\nimport {Button} from '../Button';\nimport {SendForm} from './FormActions';\nimport { Typography } from '@material-ui/core';\n\n\nconst url =  'https://prelude.eurobrake.net/login'\n\nexport const LoginForm = () => {\nreturn (\n <Formik\n            initialValues={emptyInitial }\n            onSubmit={async (values, actions) => {\n              await SendForm({values, url})\n              setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    actions.setSubmitting(false);\n                }, 1000)\n            }}\n            enableReinitialize\n        >\n            {({ values, isSubmitting, isValidating, handleChange }) => {\n                    console.log(values)\n                return (\n                    <StyledForm>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.login_email}\n                                style={{ color: '#134381' }}\n                                name=\"login_email\"\n                                component={TextField}\n                            />\n                        </div>\n                     \n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Password:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.login_password}\n                                style={{ color: '#134381' }}\n                                name=\"login_password\"\n                                component={TextField}\n                            />\n                        </div>\n                       \n                        <Button type=\"submit\" \n                                bcolor=\"#134381\"\n                                padding=\"0.5rem 2rem\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"1.7rem\">\n                                Login\n                        </Button>\n                        <Typography className=\"login_form-link\" href=\"\">Forgotten your password?</Typography>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\nconst emptyInitial = {\n    login_email: '',\n    login_password: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}