{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Newsletter.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { LoginSchema } from './FormControl';\nexport var Newsletter = function Newsletter() {\n  var _useState = useState(false),\n      Loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var FT = \"newsletter\";\n  var url = 'https://prelude.eurobrake.net/signup';\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        validateForm = _ref.validateForm;\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data, dataStatus, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return setLoading(true);\n\n              case 2:\n                values.__csrf_token = csrf;\n                _context2.next = 5;\n                return console.log('submitting');\n\n              case 5:\n                _context2.next = 7;\n                return SendForm({\n                  values: values,\n                  url: url,\n                  csrf: csrf\n                });\n\n              case 7:\n                res = _context2.sent;\n                _context2.next = 10;\n                return res;\n\n              case 10:\n                data = _context2.sent;\n                _context2.next = 13;\n                return data;\n\n              case 13:\n                _context2.t0 = _context2.sent;\n\n                if (!_context2.t0) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.t0 = data.status;\n\n              case 16:\n                dataStatus = _context2.t0;\n                setStatus(dataStatus);\n                console.log({\n                  data: data\n                });\n\n                result =\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return setLoading(false);\n\n                          case 2:\n                            _context.next = 4;\n                            return setToggle(true);\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function result() {\n                    return _ref3.apply(this, arguments);\n                  };\n                }();\n\n                return _context2.abrupt(\"return\", result());\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onSubmit() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Field, {\n      type: \"text\",\n      className: \"form-input-news\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"name\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      className: \"form-label-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input-news\",\n      onClick: handleChange,\n      value: values.name,\n      style: {},\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : __jsx(Button, {\n      onClick: onSubmit,\n      padding: \".5rem \",\n      style: {\n        fontSize: \"1rem\",\n        height: '2rem',\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, Status ? Status : 'submit')));\n  });\n}; // ? For now im by passin the email link just to check what i have with a reset token\n\nvar emptyInitial = {\n  name: '',\n  email: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Newsletter.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","CircularProgress","StyledForm","Button","SendForm","LoginSchema","Newsletter","Loading","setLoading","Toggle","setToggle","Status","setStatus","FT","url","emptyInitial","values","handleChange","validateForm","onSubmit","__csrf_token","csrf","console","log","res","data","status","dataStatus","result","name","fontSize","height","alignSelf","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport {LoginSchema} from './FormControl';\n\n\n\n\nexport const Newsletter = () => {\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const FT = \"newsletter\"\n    const url = 'https://prelude.eurobrake.net/signup';\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm }) => {\n\n              const onSubmit = async () => {\n                 await setLoading(true);\n                values.__csrf_token = csrf\n                  await  console.log('submitting')\n                  let res =  await SendForm({values, url, csrf});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n\n                return (\n                    <StyledForm>\n                      <div className=\"form\" >\n\n                        <div className=\"form-field-news\">\n                            <label\n                                htmlFor=\"name\"\n                                className=\"form-label-news\">\n                                Name:\n                        </label>\n                            <Field\n                                type=\"text\"\n                                className=\"form-input-news\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{ }}\n                                name=\"name\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field-news\">\n                            <label\n                                htmlFor=\"email\"\n                                className=\"form-label-news\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input-news\"\n                                onClick={handleChange}\n                                value={values.name}\n                                style={{  }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                       {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                        onClick={onSubmit}\n                           padding=\".5rem \" \n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                      </div>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n// ? For now im by passin the email link just to check what i have with a reset token\n\n\nconst emptyInitial = {\n    name: '',\n    email: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}