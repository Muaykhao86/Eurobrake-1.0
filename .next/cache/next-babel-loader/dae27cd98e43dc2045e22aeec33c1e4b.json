{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login } from '../../utils/auth';\n\nconst handleCheckBox = async () => {\n  const accept = values.accept;\n  const copyright = values.copyright;\n  accept === true && setFieldValue('accept', 'yes');\n  {\n    /* accept === false && setFieldValue('accept', '') */\n  }\n  {\n    /* copyright === true && setFieldValue('copyright', 'yes')\n    copyright === false && setFieldValue('copyright', '') */\n  }\n  return;\n};\n\nexport async function GetFormSSR({\n  url,\n  context\n}) {\n  // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n  const {\n    logintoken\n  } = cookies(context);\n  console.log({\n    logintoken\n  });\n\n  try {\n    const apiUrl = url;\n    const response = await fetch(apiUrl, {\n      credentials: 'include',\n      cache: 'no-cache',\n      headers: {\n        Authorization: 'Bearer ' + logintoken\n      }\n    });\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      console.log('getForm', data);\n      console.log('tkn', data.__csrf_token);\n      return data;\n    } else {\n      let error = new Error(data.error);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error('Failed to get form, please try again', error); // return error.message\n  }\n\n  return;\n}\nexport async function GetForm(url) {\n  const {\n    logintoken\n  } = cookie.get();\n  console.log({\n    logintoken\n  });\n\n  try {\n    const apiUrl = url;\n    const response = await fetch(apiUrl, {\n      credentials: 'include',\n      headers: {\n        Authorization: 'Bearer ' + logintoken\n      }\n    });\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      console.log('getForm', data);\n      console.log('tkn', data.__csrf_token);\n      return data;\n    } else {\n      let error = new Error(data.error);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error('Failed to get form, please try again', error); // return error.message\n  }\n\n  return;\n}\nexport async function SendFile({\n  values,\n  url\n}) {\n  values.accept && values.accept === true ? values.accept = 'yes' : null;\n  values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n  const formData = new FormData(values);\n  const {\n    logintoken\n  } = cookie.get(); // formData.append('filename', file);\n\n  console.log({\n    logintoken,\n    csrf,\n    formData,\n    url\n  }); // if (logintoken && csrf && file) {\n  //     try {\n  //         const apiUrl = url;\n  //         const response = await fetch(apiUrl, {\n  //             method: 'POST',\n  //             body: formData,\n  //             credentials: 'include',\n  //             headers: {\n  //                 Authorization: 'Bearer ' + logintoken,\n  //             }\n  //         });\n  //         const data = await response.json();\n  //         await console.log({ data })\n  //         if (data.status === 'success') {\n  //             console.log('getForm', data);\n  //         } else {\n  //             let error = new Error(data.error)\n  //             error.response = response\n  //             throw error\n  //         }\n  //     } catch (error) {\n  //         console.error(\n  //             'Failed to get form, please try again', error\n  //         )\n  //         // this.setState({ error: error.message });\n  //     }\n  // }\n\n  return;\n}\nexport async function SendForm({\n  csrf,\n  values,\n  url\n}) {\n  const form = _JSON$stringify(values);\n\n  const {\n    logintoken\n  } = cookie.get();\n  console.log({\n    url,\n    form\n  });\n\n  if (logintoken && csrf && form) {\n    try {\n      const apiUrl = url;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: form,\n        credentials: 'include',\n        headers: {\n          Authorization: 'Bearer ' + logintoken,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        console.log('getForm', data);\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to get form, please try again', error);\n    }\n  }\n\n  if (url === 'https://prelude.eurobrake.net/authors/login') {\n    console.log({\n      url,\n      form\n    });\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        credentials: 'include',\n        body: form,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        const {\n          logintoken\n        } = data;\n        await login({\n          logintoken\n        });\n        return {};\n      } else {\n        let error = new Error(data.error);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error('Failed to login, please try again', error);\n    }\n  }\n\n  return;\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/FormActions.js"],"names":["cookie","cookies","fetch","login","handleCheckBox","accept","values","copyright","setFieldValue","GetFormSSR","url","context","logintoken","console","log","apiUrl","response","credentials","cache","headers","Authorization","data","json","status","__csrf_token","error","Error","GetForm","get","SendFile","formData","FormData","csrf","SendForm","form","method","body"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\n\nconst handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    {/* accept === false && setFieldValue('accept', '') */}\n                    {/* copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '') */}\n                   return\n                }\n\nexport async function GetFormSSR({url, context}) {\n    // We use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n    const { logintoken } = cookies(context);\n    console.log({logintoken})\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        // return error.message\n    }\n    return\n}\n\n    \nexport async function SendFile({ values, url }) {\n    values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    const formData = new FormData(values);\n    const { logintoken } = cookie.get();\n    // formData.append('filename', file);\n    console.log({ logintoken, csrf, formData, url})\n    // if (logintoken && csrf && file) {\n    //     try {\n    //         const apiUrl = url;\n    //         const response = await fetch(apiUrl, {\n    //             method: 'POST',\n    //             body: formData,\n    //             credentials: 'include',\n    //             headers: {\n    //                 Authorization: 'Bearer ' + logintoken,\n    //             }\n    //         });\n    //         const data = await response.json();\n    //         await console.log({ data })\n    //         if (data.status === 'success') {\n    //             console.log('getForm', data);\n\n    //         } else {\n    //             let error = new Error(data.error)\n    //             error.response = response\n    //             throw error\n    //         }\n    //     } catch (error) {\n    //         console.error(\n    //             'Failed to get form, please try again', error\n    //         )\n    //         // this.setState({ error: error.message });\n    //     }\n    // }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url }) {\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        console.log({url, form});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST', \n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n\n            if (data.status === 'success') {\n                console.log('getForm', data);\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/authors/login' ){\n        console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n         }\n        }\n    return\n    }\n\n"]},"metadata":{},"sourceType":"module"}