{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Permissions.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const Permissions = props => {\n  const emptyInitial = {\n    ok_to_publish_ppt: ''\n  };\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId,\n    type\n  } = props;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type);\n  return (// ! NEED PRESETS FOR TASKS\n    __jsx(Formik, {\n      initialValues: emptyInitial,\n      validationSchema: PermissionSchema,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, ({\n      values,\n      handleChange,\n      setFieldValue,\n      isValidating,\n      validateForm,\n      handleSubmit,\n      errors\n    }) => {\n      console.log(values, 'Tasks');\n\n      const handleCheckBox = async () => {\n        const accept = values.accept;\n        const copyright = values.copyright;\n        accept === true && setFieldValue('accept', 'yes');\n        accept === false && setFieldValue('accept', '');\n        copyright === true && setFieldValue('copyright', 'yes');\n        copyright === false && setFieldValue('copyright', '');\n        return;\n      };\n\n      const onSubmit = () => {\n        values.__csrf_token = csrf;\n        console.log('submitting', values);\n      };\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Permissions\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n        className: \"task-field-radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Grant permission?\"), __jsx(Field, {\n        className: \"task-radio\",\n        value: values.ok_to_publish_ppt,\n        style: {\n          color: '#134381'\n        },\n        name: \"ok_to_publish_ppt\",\n        component: RadioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Yes, I grant permission for my presentation to be included\", __jsx(\"input\", {\n        onChange: handleChange,\n        style: {\n          margin: '1rem'\n        },\n        type: \"radio\",\n        name: \"ok_to_publish_ppt\",\n        value: \"yes\",\n        id: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"No, I do not grant permission\", __jsx(\"input\", {\n        style: {\n          margin: '1rem'\n        },\n        onChange: handleChange,\n        type: \"radio\",\n        name: \"ok_to_publish_ppt\",\n        value: \"no\",\n        id: \"no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), errors.ok_to_publish_ppt && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, errors.ok_to_publish_ppt))), __jsx(Button, {\n        onClick: () => validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit()),\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem\",\n          color: '#FFF'\n        },\n        padding: \".5rem 4rem\",\n        fontSize: \"1.7rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Send\"));\n    })\n  );\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Permissions.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","InstructionsPopup","Permissions","props","emptyInitial","ok_to_publish_ppt","presets","csrf","apiUrl","paperId","type","console","log","PermissionSchema","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","accept","copyright","onSubmit","__csrf_token","color","margin","position","bottom","right","fontSize","then","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\n\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport const Permissions = (props) => {\n    const emptyInitial = {\n       ok_to_publish_ppt: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PermissionSchema}\n\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n                console.log(values, 'Tasks')\n                  const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    accept === false && setFieldValue('accept', '')\n                    copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '')\n                   return\n                }\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting', values)\n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Permissions</Typography>\n                        <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_ppt}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_ppt\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            {errors.ok_to_publish_ppt && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_ppt}</label>}\n                            </Field>\n\n                        </div>\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}