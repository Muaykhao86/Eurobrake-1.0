{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport { PaperSchema } from '../TaskControl';\nexport var Paper = function Paper(props) {\n  var emptyInitial = {\n    accept: '',\n    technicalpaper_filename: '',\n    author_notes: ''\n  };\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId,\n      type = props.type;\n  var url = \"https://prelude.eurobrake.net/authors/tasks/paper/\".concat(paperId);\n  console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n  return (// ! NEED PRESETS FOR TASKS\n    __jsx(Formik, {\n      initialValues: emptyInitial,\n      validationSchema: PaperSchema,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, function (_ref) {\n      var values = _ref.values,\n          handleChange = _ref.handleChange,\n          setFieldValue = _ref.setFieldValue,\n          isValidating = _ref.isValidating,\n          validateForm = _ref.validateForm,\n          handleSubmit = _ref.handleSubmit,\n          errors = _ref.errors;\n\n      var handleCheckBox =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var accept, copyright;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  accept = values.accept;\n                  copyright = values.copyright;\n                  accept === true && setFieldValue('accept', 'yes');\n                  return _context.abrupt(\"return\");\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function handleCheckBox() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      console.log(values);\n\n      var onSubmit = function onSubmit() {\n        values.__csrf_token = csrf;\n        {\n          /* handleCheckBox() */\n        }\n        console.log('submitting');\n        SendFile({\n          csrf: csrf,\n          values: values,\n          url: url\n        });\n      };\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Please upload your paper PDF using the form below.\"), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381',\n          width: '80%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"I have used the templates available in the \", __jsx(Link, {\n        href: \"/authorsAreaInstructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"task-link_bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Instructions and Templates\")), \" section of the Author\\u2019s Area and I have also followed the guidance notes available there.\"), __jsx(Field, {\n        onClick: function onClick() {\n          return values.accept === true && setFieldValue('accept', 'yes');\n        },\n        className: \"task-checkboxField-box\",\n        style: {\n          color: '#134381'\n        },\n        value: values.accept,\n        name: \"accept\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), errors.accept && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, errors.accept)), __jsx(\"div\", {\n        className: \"task-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"PDF upload\"), __jsx(Field, {\n        className: \"task-input\",\n        value: values.technicalpaper_filename,\n        style: {\n          color: '#134381'\n        },\n        name: \"technicalpaper_filename\",\n        component: SimpleFileUpload,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), errors.technicalpaper_filename && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-2rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, errors.technicalpaper_filename)), __jsx(\"div\", {\n        className: \"task-notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-notes-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Notes for reviewers:\"), __jsx(Field, {\n        className: \"task-notes-input\",\n        onClick: handleChange,\n        value: values.author_notes,\n        style: {\n          color: '#134381'\n        },\n        name: \"author_notes\",\n        component: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"task-field-copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Please confirm that you agree to assign copyright, by checking the box below.\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(InstructionsPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" Click here \"), \"to read the copyright guidelines.\")), __jsx(\"div\", {\n        className: \"task-checkboxField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-checkboxField-label\",\n        style: {\n          color: '#134381'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"I agree to assign copyright in this paper to FISITA (UK) Ltd.\"), __jsx(Field, {\n        onClick: function onClick() {\n          return values.copyright === true && setFieldValue('accept', 'yes');\n        },\n        className: \"task-checkboxField-box\",\n        value: values.copyright,\n        style: {\n          color: '#134381'\n        },\n        name: \"copyright\",\n        component: Checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, errors.copyright && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, errors.copyright))), __jsx(Button, {\n        onClick: function onClick() {\n          return validateForm().then(function (errors) {\n            return _Object$keys(errors).length === 0 && onSubmit();\n          });\n        },\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem\",\n          color: '#FFF'\n        },\n        padding: \".5rem 4rem\",\n        fontSize: \"1.7rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Send\"));\n    })\n  );\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Paper.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","Button","SendFile","StyledTask","InstructionsPopup","PaperSchema","Paper","props","emptyInitial","accept","technicalpaper_filename","author_notes","presets","csrf","apiUrl","paperId","type","url","console","log","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","copyright","onSubmit","__csrf_token","color","width","position","bottom","right","fontSize","then","length","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport {PaperSchema} from '../TaskControl';\n\nexport const Paper = (props) => {\n\n\n    const emptyInitial = {\n        accept: '',\n        technicalpaper_filename: '',\n        author_notes: '',\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    const url = `https://prelude.eurobrake.net/authors/tasks/paper/${paperId}`;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type, url);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PaperSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldValue, isValidating, validateForm, handleSubmit, errors }) => {\n                \n                const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    {/* accept === false && setFieldValue('accept', '') */}\n                    {/* copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '') */}\n                   return\n                }\n                console.log(values)\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                  {/* handleCheckBox() */}\n                    console.log('submitting')\n                    SendFile({csrf, values, url})\n              }\n    \n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your paper PDF using the form below.</Typography>\n                         <div className=\"task-checkboxField\">\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381', width: '80%' }}\n\n                                >\n                                I have used the templates available in the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions and Templates</a></Link> section of the Author’s Area and I have also followed the guidance notes available there.\n                        </label>\n                            <Field\n                                onClick={() => values.accept === true && setFieldValue('accept', 'yes')}\n\n                                className=\"task-checkboxField-box\"\n                                style={{ color: '#134381', }}\n                                value={values.accept}\n                                name=\"accept\"\n                                component={Checkbox}\n                            >\n                            </Field>\n                           {errors.accept && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.accept}</label>}\n                        </div>\n                         <div className=\"task-field\">\n                            {/* REQUIRED AND FILE MUST BE A PDF */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                PDF upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.technicalpaper_filename}\n                                style={{ color: '#134381' }}\n                                name=\"technicalpaper_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                           {errors.technicalpaper_filename && <label style={{position: 'absolute', bottom: '-2rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.technicalpaper_filename}</label>}\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                         <div className=\"task-field-copy\">\n\n                        <Typography gutterBottom className=\"task-label\">Please confirm that you agree to assign copyright, by checking the box below.</Typography>\n                        <Typography gutterBottom className=\"task-label\"><InstructionsPopup > Click here </InstructionsPopup>to read the copyright guidelines.</Typography>\n                         </div>\n                          <div className=\"task-checkboxField\">\n\n                            {/* REQUIRED */}\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381'}}\n\n                                >\n                                I agree to assign copyright in this paper to FISITA (UK) Ltd.\n                        </label>\n                            <Field\n                                onClick={() => values.copyright === true && setFieldValue('accept', 'yes')}\n\n                                className=\"task-checkboxField-box\"\n                                value={values.copyright}\n                                style={{ color: '#134381', }}\n                                name=\"copyright\"\n                                component={Checkbox}\n                            >\n                           {errors.copyright && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000' , fontSize: '1.5rem' }}>{errors.copyright}</label>}\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}