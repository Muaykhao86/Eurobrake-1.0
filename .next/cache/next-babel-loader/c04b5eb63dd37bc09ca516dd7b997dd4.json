{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { StyledForm } from './Formstyles';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../../utils/auth';\nimport { Button } from '../Button';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, username, password, error, formData, response, data, logintoken, _error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, username = _this$state.username, password = _this$state.password, error = _this$state.error; // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n                // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n\n                formData = {\n                  username: username,\n                  password: password\n                };\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch('https://prelude.eurobrake.net/login', {\n                  method: 'POST',\n                  credentials: 'include',\n                  body: _JSON$stringify(formData),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 6:\n                response = _context.sent;\n                _context.next = 9;\n                return response.json();\n\n              case 9:\n                data = _context.sent;\n\n                if (!(data2.status === 'success')) {\n                  _context.next = 17;\n                  break;\n                }\n\n                logintoken = data.logintoken;\n                _context.next = 14;\n                return login({\n                  logintoken: logintoken\n                });\n\n              case 14:\n                return _context.abrupt(\"return\", {});\n\n              case 17:\n                _error = new Error(data.error);\n                _error.response = response;\n                throw _error;\n\n              case 20:\n                _context.next = 26;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](3);\n                console.error('Failed to login, please try again', _context.t0);\n\n                _this.setState({\n                  error: _context.t0.message\n                });\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 22]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(StyledForm, {\n        className: \"login_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"login_form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"login_form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Email:\"), __jsx(TextField, {\n        style: {\n          color: '#134381'\n        },\n        label: \"Required\",\n        className: \"login_form-input\",\n        type: \"text\",\n        name: \"username\",\n        onChange: this.saveToState,\n        value: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"login_form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"login_form-label\",\n        htmlFor: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Password:\"), __jsx(TextField, {\n        label: \"Required\",\n        className: \"login_form-input\",\n        type: \"password\",\n        name: \"password\",\n        onChange: this.saveToState,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), __jsx(Button, {\n        onClick: this.onSubmit,\n        value: \"Submit\",\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem 0\"\n        },\n        fs: \"1.8rem\",\n        padding: \".5rem 6rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Login\"), __jsx(\"a\", {\n        className: \"login_form-link\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Forgotten your password?\"));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport { LoginForm as default };","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js"],"names":["React","Component","StyledForm","fetch","TextField","login","logout","Button","LoginForm","props","e","setState","target","name","value","preventDefault","state","username","password","error","formData","method","credentials","body","headers","response","json","data","data2","status","logintoken","Error","console","message","color","saveToState","onSubmit","margin"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAAQC,MAAR,QAAqB,WAArB;;IAGqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,kEASL,UAACC,CAAD,EAAO;AACjB,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AACH,KAXkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAaR,iBAAOJ,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPA,gBAAAA,CAAC,CAACK,cAAF;AADO,8BAE+B,MAAKC,KAFpC,EAECC,QAFD,eAECA,QAFD,EAEWC,QAFX,eAEWA,QAFX,EAEqBC,KAFrB,eAEqBA,KAFrB,EAGP;AACA;;AACMC,gBAAAA,QALC,GAKU;AACbH,kBAAAA,QAAQ,EAAEA,QADG;AAEbC,kBAAAA,QAAQ,EAAEA;AAFG,iBALV;AAAA;AAAA;AAAA,uBAUoBf,KAAK,CAAC,qCAAD,EAAwC;AAChEkB,kBAAAA,MAAM,EAAE,MADwD;AAEhEC,kBAAAA,WAAW,EAAE,SAFmD;AAGhEC,kBAAAA,IAAI,EAAE,gBAAeH,QAAf,CAH0D;AAIhEI,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX;AAJuD,iBAAxC,CAVzB;;AAAA;AAUGC,gBAAAA,QAVH;AAAA;AAAA,uBAmBgBA,QAAQ,CAACC,IAAT,EAnBhB;;AAAA;AAmBGC,gBAAAA,IAnBH;;AAAA,sBAuBCC,KAAK,CAACC,MAAN,KAAiB,SAvBlB;AAAA;AAAA;AAAA;;AAwBSC,gBAAAA,UAxBT,GAwBwBH,IAxBxB,CAwBSG,UAxBT;AAAA;AAAA,uBAyBOzB,KAAK,CAAC;AAAEyB,kBAAAA,UAAU,EAAVA;AAAF,iBAAD,CAzBZ;;AAAA;AAAA,iDA0BQ,EA1BR;;AAAA;AA6BKX,gBAAAA,MA7BL,GA6Ba,IAAIY,KAAJ,CAAUJ,IAAI,CAACR,KAAf,CA7Bb;AA8BCA,gBAAAA,MAAK,CAACM,QAAN,GAAiBA,QAAjB;AA9BD,sBA+BON,MA/BP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCHa,gBAAAA,OAAO,CAACb,KAAR,CACI,mCADJ;;AAGA,sBAAKR,QAAL,CAAc;AAAEQ,kBAAAA,KAAK,EAAE,YAAMc;AAAf,iBAAd;;AArCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbQ;;AAAA;AAAA;AAAA;AAAA;;AAEf,UAAKjB,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAFe;AAOlB;;;;6BA8CQ;AACL,aAEW,MAAC,UAAD;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,OAAO,EAAC,OADR;AAEA,QAAA,SAAS,EAAC,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,SAAD;AACA,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAE;AAAR,SADP;AAEA,QAAA,KAAK,EAAC,UAFN;AAGA,QAAA,SAAS,EAAC,kBAHV;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,IAAI,EAAC,UALL;AAMA,QAAA,QAAQ,EAAE,KAAKC,WANf;AAOA,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,QAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADL,EAgBK;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,SAAS,EAAC,kBADV;AAEC,QAAA,OAAO,EAAC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAMI,MAAC,SAAD;AACA,QAAA,KAAK,EAAC,UADN;AAEA,QAAA,SAAS,EAAC,kBAFV;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,IAAI,EAAC,UAJL;AAKA,QAAA,QAAQ,EAAE,KAAKkB,WALf;AAMA,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,QANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAhBL,EA8BK,MAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKkB,QADd;AAEA,QAAA,KAAK,EAAC,QAFN;AAGA,QAAA,MAAM,EAAC,SAHP;AAIA,QAAA,UAAU,EAAC,SAJX;AAKA,QAAA,EAAE,EAAC,QALH;AAMA,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SANP;AAOA,QAAA,EAAE,EAAC,QAPH;AAQA,QAAA,OAAO,EAAC,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA9BL,EAwCK;AAAG,QAAA,SAAS,EAAC,iBAAb;AAA+B,QAAA,IAAI,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAxCL,CAFX;AA+CH;;;;EAtGkCpC,S;;SAAlBO,S","sourcesContent":["import React, { Component } from 'react'\nimport {StyledForm} from './Formstyles';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../../utils/auth';\nimport {Button} from '../Button';\n\n\nexport default class LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const { username, password, error } = this.state;\n        // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n        // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n        const formData = {\n            username: username,\n            password: password,\n        }\n        try {\n            const response = await fetch('https://prelude.eurobrake.net/login', {\n                method: 'POST', \n                credentials: 'include',\n                body: JSON.stringify(formData),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n            \n       \n\n            if (data2.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return {}\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            this.setState({ error: error.message });\n        }\n    }\n    render() {\n        return (\n           \n                   <StyledForm className=\"login_form\">\n                        <div className=\"login_form-field\">\n                            <label \n                            htmlFor=\"label\" \n                            className=\"login_form-label\">\n                                Email:\n                            </label>\n                            <TextField\n                            style={{color: '#134381'}}\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"text\"\n                            name=\"username\"\n                            onChange={this.saveToState} \n                            value={this.state.username} />\n                        </div>\n                        <div className=\"login_form-field\">\n                            <label \n                            className=\"login_form-label\"\n                             htmlFor=\"label\">\n                                Password:\n                            </label>\n                            <TextField\n                            label=\"Required\"\n                            className=\"login_form-input\" \n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState} \n                            value={this.state.password} />\n                        </div>\n                        <Button \n                        onClick={this.onSubmit} \n                        value=\"Submit\" \n                        bcolor=\"#134381\"\n                        background=\"#134381\"\n                        br=\"100rem\"\n                        style={{ margin: \"3rem 0\"}}\n                        fs=\"1.8rem\"\n                        padding=\".5rem 6rem\"\n                        >Login</Button>\n                        <a className=\"login_form-link\" href=\"\">Forgotten your password?</a>\n                   </StyledForm>\n          \n             \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}