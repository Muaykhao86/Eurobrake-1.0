{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Authorprofile.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Select } from 'formik-material-ui';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Button } from '../Button';\nimport { titles, countries } from './FormSelects';\nimport { AuthorSchema } from './FormControl';\nimport { StyledForm } from './Formstyles';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nexport const Authorprofile = props => {\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null);\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId\n  } = props;\n  console.log({\n    presets,\n    apiUrl\n  });\n  const url = apiUrl;\n  return __jsx(Formik, {\n    initialValues: presets || emptyInitial,\n    validationSchema: AuthorSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    validateForm,\n    errors,\n    setFieldTouched,\n    handleSubmit,\n    submitForm\n  }) => {\n    const allTouched = async () => {\n      console.log('touched!');\n      console.log({\n        errors\n      });\n      await _Object$keys(values).forEach(key => {\n        setFieldTouched(key, true);\n      });\n      await validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit());\n    };\n\n    const onSubmit = async () => {\n      await setLoading(true);\n      values.__csrf_token = csrf;\n      await console.log('submitting');\n      let res = await SendForm({\n        values,\n        url,\n        csrf\n      });\n      let data = await res;\n      let dataStatus = (await data) && data.status;\n      setStatus(dataStatus);\n      console.log({\n        data\n      });\n\n      let result = async () => {\n        await setLoading(false);\n        await setToggle(true);\n      };\n\n      return result();\n    };\n\n    return __jsx(React.Fragment, null, __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Title\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.title,\n      style: {\n        color: '#134381'\n      },\n      name: \"title\",\n      component: Select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, titles.map((option, i) => __jsx(MenuItem, {\n      key: i,\n      style: {\n        fontSize: '1.5rem',\n        cursor: 'pointer'\n      },\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, option.label)))), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"First Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.firstname,\n      style: {\n        color: '#134381'\n      },\n      name: \"firstname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Last Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.lastname,\n      style: {\n        color: '#134381'\n      },\n      name: \"lastname\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.email,\n      style: {\n        color: '#134381'\n      },\n      name: \"email\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Job Title:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.jobtitle,\n      style: {\n        color: '#134381'\n      },\n      name: \"jobtitle\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Company:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.company,\n      style: {\n        color: '#134381'\n      },\n      name: \"company\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Address:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address1,\n      style: {\n        color: '#134381'\n      },\n      name: \"address1\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address2,\n      style: {\n        color: '#134381'\n      },\n      name: \"address2\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.address3,\n      style: {\n        color: '#134381'\n      },\n      name: \"address3\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"City:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.city,\n      style: {\n        color: '#134381'\n      },\n      name: \"city\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"State/ County/ Province:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.scp,\n      style: {\n        color: '#134381'\n      },\n      name: \"scp\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Postal/ Zip code:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.postal,\n      style: {\n        color: '#134381'\n      },\n      name: \"postal\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Country\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.country,\n      style: {\n        color: '#134381'\n      },\n      name: \"country\",\n      component: Select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, countries.map((option, i) => __jsx(MenuItem, {\n      key: i,\n      style: {\n        fontSize: '1.5rem',\n        cursor: 'pointer'\n      },\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, option.label)))), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Phone:\"), __jsx(Field, {\n      placeholder: \"Please use the international code\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.phone,\n      style: {\n        color: '#134381'\n      },\n      name: \"phone\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Fax:\"), __jsx(Field, {\n      placeholder: \"Please use the international code\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.fax,\n      style: {\n        color: '#134381'\n      },\n      name: \"fax\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Choose a Password:\"), __jsx(Field, {\n      placeholder: \"If you dont wish to change your password please leave blank\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Confirm password:\"), __jsx(Field, {\n      placeholder: \"If you dont wish to change your password please leave blank\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"confirm_password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }) : __jsx(Button, {\n      onClick: () => allTouched(),\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      padding: \".5rem 4rem\",\n      style: {\n        margin: \"3rem\",\n        color: '#FFF'\n      },\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Submit\"), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      style: {\n        alignSelf: 'center',\n        textTransform: 'uppercase'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, Status)));\n  });\n};\nconst emptyInitial = {\n  title: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n  jobtitle: '',\n  company: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  city: '',\n  scp: '',\n  postal: '',\n  country: '',\n  phone: '',\n  fax: '',\n  password: '',\n  confirmed_password: '',\n  __csrf_token: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/Authorprofile.js"],"names":["React","Component","useState","useEffect","Formik","Form","Field","TextField","Select","MenuItem","CircularProgress","Button","titles","countries","AuthorSchema","StyledForm","SendForm","Typography","Authorprofile","props","Toggle","setToggle","Status","setStatus","Loading","setLoading","presets","csrf","apiUrl","paperId","console","log","url","emptyInitial","values","handleChange","validateForm","errors","setFieldTouched","handleSubmit","submitForm","allTouched","forEach","key","then","length","onSubmit","__csrf_token","res","data","dataStatus","status","result","title","color","map","option","i","fontSize","cursor","value","label","firstname","lastname","email","jobtitle","company","address1","address2","address3","city","scp","postal","country","phone","fax","password","margin","alignSelf","textTransform","confirmed_password"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Select} from 'formik-material-ui';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Button } from '../Button';\nimport {titles, countries} from './FormSelects';\nimport {AuthorSchema} from './FormControl';\nimport {StyledForm} from './Formstyles';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\n\n\nexport const Authorprofile = (props) => {\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    const [Loading, setLoading] = useState(false);\n\n    const { presets, csrf, apiUrl, paperId} = props;\n    console.log({ presets, apiUrl})\n    const url = apiUrl;\n  \n    return (\n        <Formik\n            initialValues={ presets || emptyInitial }\n            validationSchema={AuthorSchema}\n            enableReinitialize\n        >\n            {({ values, handleChange, validateForm, errors, setFieldTouched, handleSubmit, submitForm}) => {\n                   \n                   \n                   const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                 await setLoading(true);\n                values.__csrf_token = csrf\n                  await  console.log('submitting')\n                  let res =  await SendForm({values, url, csrf});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n                return (\n                    <>\n                    <StyledForm>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Title\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.title}\n                                style={{ color: '#134381' }}\n                                name=\"title\"\n                                component={Select}\n                            >\n                                {titles.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                First Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.firstname}\n                                style={{ color: '#134381' }}\n                                name=\"firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Last Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.lastname}\n                                style={{ color: '#134381' }}\n                                name=\"lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.email}\n                                style={{ color: '#134381' }}\n                                name=\"email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Job Title:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.jobtitle}\n                                style={{ color: '#134381' }}\n                                name=\"jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.company}\n                                style={{ color: '#134381' }}\n                                name=\"company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Address:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address1}\n                                style={{ color: '#134381' }}\n                                name=\"address1\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address2}\n                                style={{ color: '#134381' }}\n                                name=\"address2\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.address3}\n                                style={{ color: '#134381' }}\n                                name=\"address3\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                City:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.city}\n                                style={{ color: '#134381' }}\n                                name=\"city\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                State/ County/ Province:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.scp}\n                                style={{ color: '#134381' }}\n                                name=\"scp\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Postal/ Zip code:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.postal}\n                                style={{ color: '#134381' }}\n                                name=\"postal\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Country\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.country}\n                                style={{ color: '#134381' }}\n                                name=\"country\"\n                                component={Select}\n                            >\n                                {countries.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Phone:\n                        </label>\n                            <Field\n                                 placeholder=\"Please use the international code\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.phone}\n                                style={{ color: '#134381' }}\n                                name=\"phone\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Fax:\n                        </label>\n                            <Field\n                                 placeholder=\"Please use the international code\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.fax}\n                                style={{ color: '#134381' }}\n                                name=\"fax\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Choose a Password:\n                        </label>\n                            <Field\n                                placeholder=\"If you dont wish to change your password please leave blank\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"password\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Confirm password:\n                        </label>\n                            <Field\n                                placeholder=\"If you dont wish to change your password please leave blank\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"confirm_password\"\n                                component={TextField}\n                            />\n                        </div>\n  \n                       \n                                {Loading ? <CircularProgress size={24} className=\"loading\"/>\n                                :\n                        <Button \n                                onClick={() =>  allTouched()}\n                                bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                padding=\".5rem 4rem\"\n                                style={{ margin: \"3rem\", color: '#FFF' }}\n                                fontSize=\"1.7rem\">Submit</Button>\n                                }\n                    {Toggle && <Typography className=\"form-title\" style={{alignSelf: 'center', textTransform: 'uppercase'}}>{Status}</Typography>}\n\n                    </StyledForm>\n                    </>                \n                )\n            }}\n        </Formik>\n    )\n};\n\n\nconst emptyInitial = {\n    title: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    jobtitle: '',\n    company: '',\n    address1: '',\n    address2: '',\n    address3: '',\n    city: '',\n    scp: '',\n    postal: '',\n    country: '',\n    phone: '',\n    fax: '',\n    password: '',\n    confirmed_password: '',\n    __csrf_token: ''\n\n}\n"]},"metadata":{},"sourceType":"module"}