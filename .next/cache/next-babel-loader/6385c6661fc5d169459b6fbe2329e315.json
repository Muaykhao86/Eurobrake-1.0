{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport Link from 'next/link'; // async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport var LoginForm = function LoginForm() {\n  var _useState = useState(false),\n      Toggle = _useState[0],\n      setToggle = _useState[1];\n\n  var url = function url() {\n    return Toggle ? 'https://prelude.eurobrake.net/reset' : 'https://prelude.eurobrake.net/login';\n  };\n\n  console.log({\n    url: url\n  });\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange;\n    console.log(values);\n    return __jsx(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Please enter your email to reset your password\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Field, {\n      type: \"email\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.username,\n      style: {\n        color: '#134381'\n      },\n      name: \"username\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), !Toggle && __jsx(\"div\", {\n      className: \"form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Password:\"), __jsx(Field, {\n      type: \"password\",\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.password,\n      style: {\n        color: '#134381'\n      },\n      name: \"password\",\n      component: TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: function onClick() {\n        return SendForm({\n          url: url,\n          values: values\n        });\n      },\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem\"\n      },\n      padding: \".5rem 4rem\",\n      fontSize: \"1.7rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, Toggle ? 'Reset' : 'Login'), __jsx(\"a\", {\n      onClick: function onClick() {\n        return setToggle(function (Toggle) {\n          return !Toggle;\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"form-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, Toggle ? \"Back to login\" : \"Forgotten your password?\")));\n  });\n};\nvar emptyInitial = {\n  email: '',\n  password: ''\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/LoginForm.js"],"names":["React","Component","useState","Formik","Form","Field","TextField","StyledForm","Button","SendForm","Typography","Link","LoginForm","Toggle","setToggle","url","console","log","emptyInitial","values","handleChange","username","color","password","margin","email"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Formik, Form, Field, } from 'formik';\nimport { TextField} from 'formik-material-ui';\nimport { StyledForm } from './Formstyles';\nimport { Button } from '../Button';\nimport { SendForm } from './FormActions';\nimport { Typography } from '@material-ui/core';\nimport Link from 'next/link';\n\n\n// async (values, actions) => {\n//                 await SendForm({ values, url })\n//             }\n\nexport const LoginForm = () => {\n    const [Toggle, setToggle] = useState(false);\n    const url = () => Toggle ? 'https://prelude.eurobrake.net/reset' : 'https://prelude.eurobrake.net/login';\n    console.log({url})\n    return (\n        <Formik\n            initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange }) => {\n                console.log(values)\n                return (\n                    <StyledForm>\n                        {Toggle && <Typography className=\"form-title\">Please enter your email to reset your password</Typography>}\n\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                type=\"email\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.username}\n                                style={{ color: '#134381' }}\n                                name=\"username\"\n                                component={TextField}\n                            />\n                        </div>\n                        {!Toggle &&\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Password:\n                        </label>\n                            <Field\n                                type=\"password\"\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.password}\n                                style={{ color: '#134381' }}\n                                name=\"password\"\n                                component={TextField}\n                            />\n                        </div>\n                        }\n                        <Button \n                            onClick={() => SendForm({url, values})}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\" }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            {Toggle ? 'Reset' : 'Login'}\n                        </Button>\n                        <a onClick={() => setToggle(Toggle => !Toggle)}>\n                           <Typography className=\"form-link\">{Toggle ? `Back to login` : `Forgotten your password?`}</Typography> \n                        </a>\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\nconst emptyInitial = {\n    email: '',\n    password: '',\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}