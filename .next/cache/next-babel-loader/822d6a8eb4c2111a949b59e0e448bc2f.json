{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\nexport var login = function login(_ref) {\n  var logintoken = _ref.logintoken;\n  cookie.set('logintoken', logintoken, {\n    expires: 1\n  });\n  Router.push('/authorsAreaDash');\n}; // CHECK TOKEN, IF WE HAVE ONE RETURN TOKEN, IF WE DONT REDIRECT TO LOGIN PAGE\n\nexport var auth = function auth(ctx) {\n  var _cookies = cookies(ctx),\n      logintoken = _cookies.logintoken;\n\n  console.log('auth', logintoken); // If there's no token, it means the user is not logged in.\n\n  if (!logintoken) {\n    if (ctx.req) {\n      // If `ctx.req` is available it means we are on the server.\n      ctx.res.writeHead(302, {\n        Location: '/authorsArea'\n      });\n      ctx.res.end();\n    } else {\n      // This should only happen on client.\n      Router.push('/authorsArea');\n    }\n  }\n\n  return logintoken;\n}; // LOGOUT FUNCTION\n\nexport var logout =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return cookie.remove('logintoken');\n\n          case 2:\n            _context.next = 4;\n            return window.localStorage.setItem(\"logout\", _Date$now());\n\n          case 4:\n            _context.next = 6;\n            return Router.push(\"/authorsArea\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function logout(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // IF LOGGED IN/ HAS TOKEN RETURN THE COMPONENT \n\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var Wrapper = function Wrapper(props) {\n    var syncLogout = function syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/authorsArea');\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener('storage', syncLogout);\n      return function () {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(ctx) {\n      var logintoken, componentProps;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              logintoken = auth(ctx); // ! AUTH\n\n              _context2.t0 = WrappedComponent.getInitialProps;\n\n              if (!_context2.t0) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 5;\n              return WrappedComponent.getInitialProps(ctx);\n\n            case 5:\n              _context2.t0 = _context2.sent;\n\n            case 6:\n              componentProps = _context2.t0;\n              return _context2.abrupt(\"return\", _objectSpread({}, componentProps, {\n                logintoken: logintoken\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/utils/auth.js"],"names":["useEffect","Router","cookies","cookie","login","logintoken","set","expires","push","auth","ctx","console","log","req","res","writeHead","Location","end","logout","remove","window","localStorage","setItem","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","key","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport cookie from 'js-cookie';\n\n\n\n\n\n\nexport const login = ({logintoken} ) => {\n  \n  cookie.set('logintoken', logintoken, { expires: 1 })\n  Router.push('/authorsAreaDash')\n}\n\n// CHECK TOKEN, IF WE HAVE ONE RETURN TOKEN, IF WE DONT REDIRECT TO LOGIN PAGE\n\nexport const auth = ctx => {\n\n  const { logintoken } = cookies(ctx);\n  console.log('auth', logintoken)\n    // If there's no token, it means the user is not logged in.\n  if (!logintoken) {\n    if (ctx.req) {\n      // If `ctx.req` is available it means we are on the server.\n      ctx.res.writeHead(302, { Location: '/authorsArea' })\n      ctx.res.end()\n    } else {\n      // This should only happen on client.\n      Router.push('/authorsArea')\n    }\n  }\n\nreturn logintoken;\n\n}\n\n// LOGOUT FUNCTION\n\nexport const logout = async (ctx) => {\n  \n  await cookie.remove('logintoken')\n \n  // To trigger the event listener we save some random data into the `logout` key\n  await window.localStorage.setItem(\"logout\", Date.now());\n\n  await Router.push(\"/authorsArea\")\n};\n\n// IF LOGGED IN/ HAS TOKEN RETURN THE COMPONENT \n\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/authorsArea')\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout)\n\n      return () => {\n        window.removeEventListener('storage', syncLogout)\n        window.localStorage.removeItem('logout')\n      }\n    }, [null])\n\n    return <WrappedComponent {...props} />\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const logintoken = auth(ctx)                // ! AUTH\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx))\n    return { ...componentProps, logintoken }\n  }\n\n  return Wrapper\n}\n"]},"metadata":{},"sourceType":"module"}