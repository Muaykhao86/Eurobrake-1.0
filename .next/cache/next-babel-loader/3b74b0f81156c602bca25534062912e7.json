{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Poster.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport var Poster =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Poster, _Component);\n\n  function Poster(props) {\n    var _this;\n\n    _classCallCheck(this, Poster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Poster).call(this, props));\n    _this.state = {\n      taskType: ''\n    };\n    return _this;\n  }\n\n  _createClass(Poster, [{\n    key: \"render\",\n    value: function render() {\n      var emptyInitial = {\n        accept: '',\n        poster_filename: '',\n        author_notes: '',\n        ok_to_publish_poster: ''\n      };\n      var _this$props = this.props,\n          presets = _this$props.presets,\n          csrf = _this$props.csrf,\n          apiUrl = _this$props.apiUrl,\n          paperId = _this$props.paperId,\n          type = _this$props.type;\n      console.log('tasks', presets, csrf, apiUrl, paperId, type);\n      return (// ! NEED PRESETS FOR TASKS\n        __jsx(Formik, {\n          initialValues: emptyInitial,\n          enableReinitialize: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, function (_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange;\n          console.log(values, 'Tasks');\n          return __jsx(StyledTask, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, paperId), __jsx(Typography, {\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Upload your Poster PDF\"), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Please upload your poster PDF using the form below.\"), __jsx(\"div\", {\n            className: \"task-checkboxField\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-checkboxField-label\",\n            style: {\n              color: '#134381'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"I have read the \", __jsx(Link, {\n            href: \"/authorsAreaInstructions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            className: \"task-link_bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Instructions for Preparing your Powerpoint Presentation\")), \" and have followed the guidance notes available there.\"), __jsx(Field, {\n            className: \"task-checkboxField-box\",\n            value: values.accept,\n            style: {\n              color: '#134381'\n            },\n            name: \"accept\",\n            component: CheckboxWithLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          })), __jsx(\"div\", {\n            className: \"task-field\",\n            style: {\n              marginBottom: '2rem'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Pitch video slide upload\"), __jsx(Field, {\n            className: \"task-input\",\n            value: values.poster_filename,\n            style: {\n              color: '#134381'\n            },\n            name: \"poster_filename\",\n            component: SimpleFileUpload,\n            fullWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          })), __jsx(\"div\", {\n            className: \"task-notes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-notes-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Notes for reviewers:\"), __jsx(Field, {\n            className: \"task-notes-input\",\n            onClick: handleChange,\n            value: values.author_notes,\n            style: {\n              color: '#134381'\n            },\n            name: \"author_notes\",\n            component: \"textarea\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })), __jsx(Typography, {\n            gutterBottom: true,\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \"We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n            className: \"task-field-radio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"label\",\n            className: \"task-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \"Grant permission?\"), __jsx(Field, {\n            className: \"task-radio\",\n            value: values.ok_to_publish_poster,\n            style: {\n              color: '#134381'\n            },\n            name: \"ok_to_publish_poster\",\n            component: RadioGroup,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"Yes, I grant permission for my presentation to be included\", __jsx(\"input\", {\n            onChange: handleChange,\n            style: {\n              margin: '1rem'\n            },\n            type: \"radio\",\n            name: \"ok_to_publish_poster\",\n            value: \"yes\",\n            id: \"yes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            style: {\n              margin: '1rem'\n            },\n            htmlFor: \"label\",\n            className: \"task-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"No, I do not grant permission\", __jsx(\"input\", {\n            style: {\n              margin: '1rem'\n            },\n            onChange: handleChange,\n            type: \"radio\",\n            name: \"ok_to_publish_poster\",\n            value: \"no\",\n            id: \"no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          })))), __jsx(Button, {\n            onClick: function onClick() {\n              return console.log(values);\n            },\n            bcolor: \"#134381\",\n            background: \"#134381\",\n            br: \"100rem\",\n            style: {\n              margin: \"3rem\",\n              color: '#FFF'\n            },\n            padding: \".5rem 4rem\",\n            fontSize: \"1.7rem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, \"Send\"));\n        })\n      );\n    }\n  }]);\n\n  return Poster;\n}(Component);","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Poster.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","Poster","props","state","taskType","emptyInitial","accept","poster_filename","author_notes","ok_to_publish_poster","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","color","marginBottom","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class Poster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n \n}\n\nrender(){\n    const emptyInitial = {\n        accept: '',\n        poster_filename: '',        \n        author_notes: '',\n        ok_to_publish_poster: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange}) => {\n                console.log(values, 'Tasks')\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Upload your Poster PDF</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please upload your poster PDF using the form below.</Typography>\n\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            \n                            </Field>\n                        </div>\n                        <div className=\"task-field\" style={{marginBottom: '2rem'}}>\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                Pitch video slide upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.poster_filename}\n                                style={{ color: '#134381' }}\n                                name=\"poster_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                        </div>\n                       \n                        <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                       \n                        \n                         <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your pitch video slide available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_poster}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_poster\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    Yes, I grant permission for my presentation to be included\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_poster\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, I do not grant permission\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_poster\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                        </div>\n                       \n                        <Button \n                            onClick={() => console.log(values)}\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}