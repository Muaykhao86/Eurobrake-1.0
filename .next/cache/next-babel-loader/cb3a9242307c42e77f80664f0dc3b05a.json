{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport TextField from '@material-ui/core/TextField';\nimport { login, logout } from '../utils/auth';\nimport { Button } from './Button';\nconst StyledForm = styled.form.withConfig({\n  displayName: \"login__StyledForm\",\n  componentId: \"sc-1otdfux-0\"\n})([\"display:flex;flex-flow:column;justify-content:space-between;align-items:center;min-width:100%;.MuiInput-underline:after{color:\", \";}.MuiInputBase-root{font-family:\", \";font-size:2rem;color:\", \";}input:-internal-autofill-selected{}.login_form{&-field{margin:1rem 0;width:100%;display:flex;justify-content:space-between;align-items:flex-end;}&-label{font-family:\", \";font-size:2.6rem;color:\", \";}&-input{min-width:40rem;font-family:\", \";font-size:5rem;color:\", \";}&-link{font-family:\", \";font-size:1.7rem;color:\", \";}}\"], props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary, props => props.theme.MPLight, props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary, props => props.theme.MPBoldIt, props => props.theme.primary);\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const {\n        username,\n        password,\n        error\n      } = this.state; // const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : '' ;\n      // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n\n      const formData = {\n        username: username,\n        password: password\n      };\n\n      try {\n        const response = await fetch('https://prelude.eurobrake.net/login', {\n          method: 'POST',\n          credentials: 'include',\n          body: _JSON$stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response;\n        const data2 = await response.json();\n        console.log('login', _JSON$stringify(data2));\n\n        if (data2.status === 'success') {\n          const {\n            logintoken\n          } = data2;\n          await login({\n            logintoken\n          }); // this.setState(prev => ({ userLoggedIn: !prev }))\n\n          return {};\n        } else {\n          let error = new Error(data.error);\n          error.response = response;\n          throw error;\n        }\n      } catch (error) {\n        console.error('Failed to login, please try again', error);\n        this.setState({\n          error: error.message\n        });\n      }\n    });\n\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  render() {\n    return __jsx(StyledForm, {\n      className: \"login_form\"\n    }, __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"login_form-label\"\n    }, \"Email:\"), __jsx(TextField, {\n      style: {\n        color: '#134381'\n      },\n      label: \"Required\",\n      className: \"login_form-input\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.saveToState,\n      value: this.state.username\n    })), __jsx(\"div\", {\n      className: \"login_form-field\"\n    }, __jsx(\"label\", {\n      className: \"login_form-label\",\n      htmlFor: \"label\"\n    }, \"Password:\"), __jsx(TextField, {\n      label: \"Required\",\n      className: \"login_form-input\",\n      type: \"password\",\n      name: \"password\",\n      onChange: this.saveToState,\n      value: this.state.password\n    })), __jsx(Button, {\n      onClick: this.onSubmit,\n      value: \"Submit\",\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \"3rem 0\"\n      },\n      fs: \"1.8rem\",\n      padding: \".5rem 6rem\"\n    }, \"Login\"), __jsx(\"a\", {\n      className: \"login_form-link\",\n      href: \"\"\n    }, \"Forgotten your password?\"));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}