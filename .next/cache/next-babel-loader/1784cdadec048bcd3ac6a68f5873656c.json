{"ast":null,"code":"var _jsxFileName = \"/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Abstract.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage } from 'formik';\nimport { TextField, RadioGroup, Select, Checkbox } from 'formik-material-ui';\nimport { AddCircle, RemoveCircle, ArrowUpwardRounded, ArrowDownwardRounded } from '@material-ui/icons';\nimport cookie from 'js-cookie';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '../Button';\nimport { titles, countries } from './FormSelects';\nimport { AbstractSchema } from './FormControl';\nimport { StyledForm } from './Formstyles';\nimport { SendForm } from './FormActions';\nexport const AbstractForm = props => {\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: Toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: Status,\n    1: setStatus\n  } = useState(null); // if edit = true send back a preset form if not send a blank\n  // * above- dont think i need this now, can just check if there aere presets and if not just use epty schema\n\n  const {\n    presets,\n    csrf,\n    apiUrl,\n    paperId\n  } = props;\n  const url = `https://prelude.eurobrake.net/authors/edit/${paperId}`; // ? If they choose to edit a abstarct paper we pass the paper code and il get its presets to fill in\n\n  return __jsx(Formik, {\n    initialValues: presets || emptyInitial,\n    validationSchema: AbstractSchema,\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    isSubmitting,\n    isValidating,\n    handleChange,\n    setFieldValue,\n    setFieldTouched,\n    validateForm,\n    errors\n  }) => {\n    const allNo = ({\n      name\n    }) => {\n      if (false) {\n        const radios = document.querySelectorAll('input[name*=\"is_presenting_author\"]');\n        radios.forEach(input => {\n          input.name !== name && setFieldValue(input.name, input.value);\n        });\n      }\n    };\n\n    const onPresenterChange = event => {\n      const {\n        target\n      } = event;\n      const value = target.value;\n      const name = target.name;\n      {\n        /* value === 'no' ? setPresenter('') : setPresenter(name); */\n      }\n      setFieldValue(name, value);\n      allNo({\n        name\n      });\n      return console.log({\n        values\n      });\n    };\n\n    const allTouched = async () => {\n      await Object.keys(values).forEach(key => {\n        setFieldTouched(key, true);\n      });\n      await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit());\n    };\n\n    const onSubmit = async () => {\n      await setLoading(true);\n      values.__csrf_token = csrf;\n      await console.log('submitting');\n      let res = await SendForm({\n        values,\n        url,\n        csrf\n      });\n      let data = await res;\n      let dataStatus = (await data) && data.status;\n      setStatus(dataStatus);\n      console.log({\n        data\n      });\n\n      let result = async () => {\n        await setLoading(false);\n        await setToggle(true);\n      };\n\n      return result();\n    };\n\n    return __jsx(StyledForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Primary Author\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"Title\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_title,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_title\",\n      component: Select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, titles.map((option, i) => __jsx(MenuItem, {\n      key: i,\n      style: {\n        fontSize: '1.5rem',\n        cursor: 'pointer'\n      },\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, option.label)))), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"First Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_firstname,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_firstname\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Last Name:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_lastname,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_lastname\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Email:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_email,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_email\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Job Title:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_jobtitle,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_jobtitle\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, \"Company:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_company,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_company\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, \"Address:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_address1,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address1\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_address2,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address2\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_address3,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_address3\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, \"City:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_city,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_city\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, \"State/ County/ Province:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_scp,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_scp\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, \"Postal/ Zip code:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_postal,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_postal\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, \"Country\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_country,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_country\",\n      component: Select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, countries.map((option, i) => __jsx(MenuItem, {\n      key: i,\n      style: {\n        fontSize: '1.5rem',\n        cursor: 'pointer'\n      },\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }\n    }, option.label)))), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, \"Phone:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.author_phone,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_phone\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, \"Is this the presenting author?\"), __jsx(Field, {\n      className: \"form-field-radio\",\n      value: values.is_presenting_author,\n      style: {\n        color: '#134381',\n        alignSelf: 'flexStart',\n        margin: '0'\n      },\n      name: \"is_presenting_author\",\n      component: RadioGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      style: {\n        margin: ' 0'\n      },\n      htmlFor: \"label\",\n      className: \"form-label-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      checked: values.is_presenting_author === 'yes',\n      onChange: event => {\n        onPresenterChange(event);\n      },\n      type: \"radio\",\n      name: \"is_presenting_author\",\n      value: \"yes\",\n      style: {\n        margin: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 41\n      }\n    }), \"Yes\"), __jsx(\"label\", {\n      style: {\n        margin: '1rem 0'\n      },\n      htmlFor: \"label\",\n      className: \"form-label-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      onChange: event => {\n        onPresenterChange(event);\n      },\n      checked: values.is_presenting_author !== 'yes',\n      type: \"radio\",\n      name: \"is_presenting_author\",\n      value: \"no\",\n      style: {\n        margin: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 41\n      }\n    }), \"No\")), errors.is_presenting_author && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 61\n      }\n    }, errors.is_presenting_author)), __jsx(Typography, {\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"Your Abstract\"), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 26\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 30\n      }\n    }, \"Paper Title:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.papertitle,\n      style: {\n        color: '#134381'\n      },\n      name: \"papertitle\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 30\n      }\n    })), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 26\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"abstract\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 28\n      }\n    }, \"Abstract:\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.abstract,\n      style: {\n        color: '#134381',\n        minHeight: '15rem'\n      },\n      name: \"abstract\",\n      component: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 30\n      }\n    }), errors.abstract && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '0',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 48\n      }\n    }, errors.abstract)), __jsx(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 26\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"keywords\",\n      className: \"form-label\",\n      style: {\n        width: '33.33%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 28\n      }\n    }, \"\\\"Please enter around 5 keywords that describe the main focus of your abstract:\\\"\"), __jsx(Field, {\n      className: \"form-input\",\n      onClick: handleChange,\n      value: values.keywords,\n      style: {\n        color: '#134381',\n        minHeight: '15rem'\n      },\n      name: \"keywords\",\n      component: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 30\n      }\n    }), errors.keywords && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-3rem',\n        right: '0',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 45\n      }\n    }, errors.keywords)), __jsx(\"div\", {\n      className: \"form-field-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 26\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 29\n      }\n    }, \"Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?\"), __jsx(Field, {\n      className: \"form-field-radio\",\n      value: values.consider_for_journal,\n      style: {\n        color: '#134381',\n        alignSelf: 'flexStart',\n        margin: '0'\n      },\n      name: \"consider_for_journal\",\n      component: RadioGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      style: {\n        margin: ' 0'\n      },\n      htmlFor: \"label\",\n      className: \"form-label-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      checked: values.consider_for_journal === 'yes',\n      onChange: event => {\n        onPresenterChange(event);\n      },\n      type: \"radio\",\n      name: \"consider_for_journal\",\n      value: \"yes\",\n      style: {\n        margin: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 41\n      }\n    }), \"Yes\"), __jsx(\"label\", {\n      style: {\n        margin: '1rem 0'\n      },\n      htmlFor: \"label\",\n      className: \"form-label-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      onChange: event => {\n        onPresenterChange(event);\n      },\n      checked: values.consider_for_journal !== 'yes',\n      type: \"radio\",\n      name: \"consider_for_journal\",\n      value: \"no\",\n      style: {\n        margin: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 41\n      }\n    }), \"No\")), errors.consider_for_journal && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 61\n      }\n    }, errors.consider_for_journal)), __jsx(Typography, {\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 25\n      }\n    }, \"Secondary Author(s)\"), __jsx(FieldArray, {\n      name: `secondary_authors`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 29\n      }\n    }, ({\n      swap,\n      push,\n      remove,\n      setSubmitting\n    }) => values.secondary_authors && values.secondary_authors.length > 0 ? values.secondary_authors.map((author, index) => {\n      const {\n        is_presenting_author\n      } = author;\n      {\n        /* const second = `values.secondary_authors[${index}].is_presenting_author`; */\n      }\n      return __jsx(\"div\", {\n        key: index,\n        className: \"form-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 45\n        }\n      }, __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 53\n        }\n      }, \"Title:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].title`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].title`,\n        component: Select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 53\n        }\n      }, titles.map((option, i) => __jsx(MenuItem, {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 37\n        }\n      }, option.label)))), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 53\n        }\n      }, \"First Name:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].firstname`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].firstname`,\n        component: TextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 53\n        }\n      })), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 53\n        }\n      }, \"Last Name:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].lastname`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].lastname`,\n        component: TextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 53\n        }\n      })), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 53\n        }\n      }, \"Email:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].email`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].email`,\n        component: TextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 53\n        }\n      })), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 53\n        }\n      }, \"Company:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].company`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].company`,\n        component: TextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 53\n        }\n      })), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 53\n        }\n      }, \"Country:\"), __jsx(Field, {\n        className: \"form-input\",\n        onClick: handleChange,\n        value: `secondary_authors[${index}].country`,\n        style: {\n          color: '#134381'\n        },\n        name: `secondary_authors[${index}].country`,\n        component: Select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 54\n        }\n      }, countries.map((option, i) => __jsx(MenuItem, {\n        key: i,\n        style: {\n          fontSize: '1.5rem',\n          cursor: 'pointer'\n        },\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 37\n        }\n      }, option.label)))), __jsx(\"div\", {\n        className: \"form-field-radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 53\n        }\n      }, \"Is this the presenting Author?\"), __jsx(Field, {\n        className: \"form-field-radio\",\n        style: {\n          color: '#134381',\n          alignSelf: 'flexStart',\n          margin: '0'\n        },\n        value: `secondary_authors[${index}].is_presenting_author`,\n        component: RadioGroup,\n        name: `secondary_authors[${index}].is_presenting_author`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 53\n        }\n      }, __jsx(\"label\", {\n        style: {\n          margin: '0'\n        },\n        htmlFor: \"label\",\n        className: \"form-label-radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 57\n        }\n      }, __jsx(\"input\", {\n        checked: is_presenting_author === 'yes',\n        onChange: event => {\n          onPresenterChange(event);\n        },\n        type: \"radio\",\n        value: \"yes\",\n        name: `secondary_authors[${index}].is_presenting_author`,\n        style: {\n          margin: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 65\n        }\n      }), \"Yes\"), __jsx(\"label\", {\n        style: {\n          margin: '1rem 0 '\n        },\n        htmlFor: \"label\",\n        className: \"form-label-radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 57\n        }\n      }, __jsx(\"input\", {\n        checked: is_presenting_author !== 'yes',\n        onChange: event => {\n          onPresenterChange(event);\n        },\n        type: \"radio\",\n        value: \"no\",\n        name: `secondary_authors[${index}].is_presenting_author`,\n        style: {\n          margin: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 65\n        }\n      }), \"No\")), errors.is_presenting_author && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 61\n        }\n      }, errors.is_presenting_author)), __jsx(\"div\", {\n        className: \"form-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 49\n        }\n      }, __jsx(\"div\", {\n        className: \"form-field_action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 49\n        }\n      }, __jsx(Button, {\n        padding: \".5rem\",\n        bcolor: \"transparent\",\n        abs: \"false\",\n        bs: \"false\",\n        HBColor: \"transparent\",\n        transform: \"scale(1.4)\",\n        type: \"add\",\n        onClick: () => {\n          push({\n            title: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n            company: '',\n            country: '',\n            is_presenting_author: ''\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 49\n        }\n      }, __jsx(AddCircle, {\n        style: {\n          color: 'green',\n          fontSize: '3rem',\n          margin: '.5rem 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 53\n        }\n      })), __jsx(Button, {\n        padding: \".5rem\",\n        bcolor: \"transparent\",\n        abs: \"false\",\n        bs: \"false\",\n        HBColor: \"transparent\",\n        transform: \"scale(1.4)\",\n        type: \"remove\",\n        onClick: () => values.secondary_authors.length >= 1 && remove(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 49\n        }\n      }, __jsx(RemoveCircle, {\n        style: {\n          color: 'red',\n          fontSize: '3rem',\n          margin: '.5rem 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 53\n        }\n      })), __jsx(Button, {\n        padding: \".5rem\",\n        bcolor: \"transparent\",\n        abs: \"false\",\n        bs: \"false\",\n        HBColor: \"transparent\",\n        transform: \"scale(1.4)\",\n        type: \"upgrade\",\n        onClick: () => values.secondary_authors.length > 1 && index !== 0 && swap(index, index - 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 49\n        }\n      }, __jsx(ArrowUpwardRounded, {\n        style: {\n          color: 'red',\n          fontSize: '3rem',\n          margin: '.5rem 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 53\n        }\n      })), __jsx(Button, {\n        padding: \".5rem\",\n        bcolor: \"transparent\",\n        abs: \"false\",\n        bs: \"false\",\n        HBColor: \"transparent\",\n        transform: \"scale(1.4)\",\n        type: \"downgrade\",\n        onClick: () => values.secondary_authors.length > 1 && index !== values.secondary_authors.length - 1 && swap(index, index + 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 49\n        }\n      }, __jsx(ArrowDownwardRounded, {\n        style: {\n          color: 'red',\n          fontSize: '3rem',\n          margin: '.5rem 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 53\n        }\n      })))));\n    }) : __jsx(Button, {\n      abs: \"false\",\n      bs: \"false\",\n      bcolor: \"transparent\",\n      HBColor: \"transparent\",\n      transform: \"scale(1.4)\",\n      type: \"add\",\n      onClick: () => {\n        push({\n          title: '',\n          firstname: '',\n          lastname: '',\n          email: '',\n          company: '',\n          country: '',\n          is_presenting_author: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 49\n      }\n    }, __jsx(AddCircle, {\n      style: {\n        color: 'green',\n        fontSize: '3rem',\n        margin: '.5rem 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 53\n      }\n    }))), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 37\n      }\n    }) : __jsx(Button, {\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      fontSize: \"2rem\",\n      onClick: allTouched,\n      style: {\n        alignSelf: 'center',\n        color: '#FFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 24\n      }\n    }, \"submit\"), Toggle && __jsx(Typography, {\n      className: \"form-title\",\n      style: {\n        alignSelf: 'center',\n        textTransform: 'uppercase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 32\n      }\n    }, Status));\n  });\n};\nconst emptyInitial = {\n  author_title: '',\n  author_firstname: '',\n  author_lastname: '',\n  author_email: '',\n  author_jobtitle: '',\n  author_company: '',\n  author_address1: '',\n  author_address2: '',\n  author_address3: '',\n  author_city: '',\n  author_scp: '',\n  author_postal: '',\n  author_country: '',\n  author_phone: '',\n  is_presenting_author: '',\n  // submission_type: '',\n  // presentationtype_full: '',\n  papertitle: '',\n  // theme: '',\n  // subtheme: [],\n  abstract: '',\n  keywords: '',\n  // previouspapers: '',\n  consider_for_journal: '',\n  secondary_authors: [{\n    title: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    company: '',\n    country: '',\n    is_presenting_author: '' // ref: ''\n\n  }],\n  __csrf_token: ''\n}; // const presetEG = {\n//     abstract: \"lorem ipsum\",\n//     author_address1: \"10 Hamilton Road\",\n//     author_address2: null,\n//     author_address3: null,\n//     author_city: \"Sidcup\",\n//     author_company: \"Article Seven Limited\",\n//     author_country: \"GB\",\n//     author_email: \"andrew@article7.co.uk\",\n//     author_firstname: \"Andrew\",\n//     author_jobtitle: \"Director\",\n//     author_lastname: \"Green\",\n//     author_phone: \"+44 20 8305 1224\",\n//     author_postal: \"DA15 7HB\",\n//     author_scp: \"Kent\",\n//     author_title: \"Mr.\",\n//     consider_for_journal: \"no\",\n//     is_presenting_author: \"yes\",\n//     keywords: \"lorem, ipsum\",\n//     papertitle: \"Duis aute irure dolor\",\n//     presentationtype_full: \"programme\",\n//     previouspapers: null,\n//     secondary_authors: [\n//         {\n//             company: \"Article Seven\",\n//             country: \"GB\",\n//             email: \"ava@article7.co.uk\",\n//             firstname: \"Ava\",\n//             is_presenting_author: \"no\",\n//             lastname: \"Green\",\n//             ref: \"2399A3C8-1823-11EA-BBE7-BDC53B013130\",\n//             title: null,\n//         }],\n//     submission_type: \"full\",\n//     subtheme: [\"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\"],\n//     theme: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n//     __csrf_token: \"5d159fb224ed613dce89a64553f36f5eda1fa97c,2caaa318bb55c8c19d660a1e420d1c602dfc59f9,1576603105\"\n// }\n// ! NOT NEEDED ANYMORE !!!! \n//  <h1>Your Abstract</h1>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Submission Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.submission_type}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"submission_type\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a full technical paper submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"full\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make an oral-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"oral\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a poster-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n//                             </Field>\n//                         </div>\n//                         {values.submission_type === 'full' && <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Presentation Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.presentationtype_full}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"presentationtype_full\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an oral presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"programme\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an poster presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n//                             </Field>\n//                         </div>}\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Paper Title:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.papertitle}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"papertitle\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Which topic does your paper belong to?\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.theme}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"theme\"\n//                                 component={RadioGroup}\n//                             >\n//                                 {themes.map(theme =>\n//                                     <label\n//                                         style={{ margin: '1rem' }}\n//                                         htmlFor=\"label\"\n//                                         className=\"form-label\">\n//                                         {theme.label}\n//                                         <Field\n//                                             type=\"radio\"\n//                                             name=\"theme\"\n//                                             value={theme.value}\n//                                         />\n//                                     </label>)}\n//                             </Field>\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Please choose up to three sub-topics for your paper:\n//                         </label>\n//                             {\n//                                 values.theme === 'BC50E220-9412-11E8-85AF-D97B4D95EBB1' ?\n//                                     subTheme1.map((sub, i) => (\n//                                         <label\n//                                             htmlFor=\"label\"\n//                                             className=\"form-label\">\n//                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                             {sub.label}\n//                                         </label>\n//                                     )\n//                                     )\n//                                     :\n//                                     values.theme === '48C9561C-7865-11E7-AA75-C89000D85D50' ?\n//                                         subTheme2.map((sub, i) => (\n//                                             <label\n//                                                 htmlFor=\"label\"\n//                                                 className=\"form-label\">\n//                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                 {sub.label}\n//                                             </label>\n//                                         )\n//                                         )\n//                                         :\n//                                         values.theme === '5D49D9C2-7865-11E7-9112-887F12D54550' ?\n//                                             subTheme3.map((sub, i) => (\n//                                                 <label\n//                                                     htmlFor=\"label\"\n//                                                     className=\"form-label\">\n//                                                     <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                     {sub.label}\n//                                                 </label>\n//                                             )\n//                                             )\n//                                             :\n//                                             values.theme === '7C15061A-7865-11E7-8178-84D2A73AF9BC' ?\n//                                                 subTheme4.map((sub, i) => (\n//                                                     <label\n//                                                         htmlFor=\"label\"\n//                                                         className=\"form-label\">\n//                                                         <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                         {sub.label}\n//                                                     </label>\n//                                                 )\n//                                                 )\n//                                                 :\n//                                                 values.theme === '925B5F3C-7865-11E7-8659-8C8422753A7C' ?\n//                                                     subTheme5.map((sub, i) => (\n//                                                         <label\n//                                                             htmlFor=\"label\"\n//                                                             className=\"form-label\">\n//                                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                             {sub.label}\n//                                                         </label>\n//                                                     )\n//                                                     )\n//                                                     :\n//                                                     values.theme === 'B6F53F20-7865-11E7-A9B1-FC3D434D4D51' ?\n//                                                         subTheme6.map((sub, i) => (\n//                                                             <label\n//                                                                 htmlFor=\"label\"\n//                                                                 className=\"form-label\">\n//                                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                                 {sub.label}\n//                                                             </label>\n//                                                         )\n//                                                         )\n//                                                         : null\n//                             }\n//                             <ErrorMessage component={Typography} name=\"subtheme\" style={{ color: 'red', fontSize: '1.5rem' }} />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Abstract:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.abstract}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"abstract\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Keywords:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.keywords}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"keywords\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Previous Papers:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.previouspapers}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"previouspapers\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.consider_for_journal}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"consider_for_journal\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n// * DEFINITION \n// form: Array(26)\n// 0:\n// title: \"Primary Author\"\n// type: \"heading\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide your first name.\"\n// name: \"author_firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide your second (family) name.\"\n// name: \"author_lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide your email address.\"\n// name: \"author_email\"\n// label: \"Email address:\"\n// type: \"email\"\n// divider: 1\n// __proto__: Object\n// 5:\n// required: \"Please provide your job title.\"\n// name: \"author_jobtitle\"\n// label: \"Job title:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 6:\n// required: \"Please provide your company or organisation.\"\n// name: \"author_company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 7:\n// required: \"Please provide your street address.\"\n// name: \"author_address1\"\n// label: \"Address:\"\n// type: \"text\"\n// __proto__: Object\n// 8:\n// name: \"author_address2\"\n// type: \"text\"\n// __proto__: Object\n// 9:\n// name: \"author_address3\"\n// type: \"text\"\n// __proto__: Object\n// 10:\n// required: \"Please provide your city.\"\n// name: \"author_city\"\n// label: \"City:\"\n// type: \"text\"\n// __proto__: Object\n// 11:\n// name: \"author_scp\"\n// label: \"State/county/province:\"\n// type: \"text\"\n// __proto__: Object\n// 12:\n// name: \"author_postal\"\n// label: \"Postal/zip code:\"\n// type: \"text\"\n// __proto__: Object\n// 13:\n// required: \"Please provide your country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 14:\n// required: \"Please provide your telephone number, including international code.\"\n// notes: \"Please include the international code.\"\n// name: \"author_phone\"\n// label: \"Telephone:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 15:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// 16:\n// title: \"Your Abstract\"\n// type: \"heading\"\n// __proto__: Object\n// 17:\n// name: \"papertitle\"\n// required: \"Please provide the title of your proposed submission.\"\n// notes: \"Please use Title Case. DO NOT use block capitals.\"\n// type: \"textarea\"\n// label: \"Title of your proposed submission:\"\n// divider: 0\n// __proto__: Object\n// 18:\n// html: \"↵\t\t\t\t\t<p class=\"f_intro\"><strong>Please type or paste the text of your abstract below (maximum 750 words).</strong></p> ↵\t \t\t\t\t<p class=\"f_intro\">Your abstract should clearly set out the main scientific, technical, economic and / or practical points to be addressed in your paper. In particular your abstract should indicate those aspects of the work which are new, innovative and unique.</p>↵\t\t\t\t\"\n// type: \"html\"\n// divider: 1\n// __proto__: Object\n// 19:\n// required: \"Please provide the abstract for your submission.\"\n// name: \"abstract\"\n// label: \"Your abstract:\"\n// type: \"textarea\"\n// __proto__: Object\n// 20:\n// name: \"keywords\"\n// required: \"Please provide some keywords for your abstract.\"\n// notes: \"Please separate keywords with commas.  Please do not use block capitals.\"\n// type: \"textarea\"\n// label: \"Please enter around 5 keywords that describe the main focus of your abstract:\"\n// divider: 1\n// __proto__: Object\n// 21:\n// name: \"previouspapers\"\n// label: \"Please give details of any previous papers you have published on this subject (if applicable)\"\n// type: \"textarea\"\n// divider: 1\n// __proto__: Object\n// 22:\n// options: (2) [{…}, {…}]\n// name: \"consider_for_journal\"\n// default: \"no\"\n// notes: \"Please note that your paper may require additional revisions in order to meet the qualifying criteria.\"\n// type: \"radio\"\n// label: \"Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?\"\n// divider: 1\n// __proto__: Object\n// 23:\n// title: \"Secondary Author(s)\"\n// type: \"heading\"\n// __proto__: Object\n// 24:\n// fields: Array(8)\n// 0:\n// name: \"ref\"\n// type: \"hidden\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide each secondary author's first name.\"\n// name: \"firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide each secondary author's last name.\"\n// name: \"lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide each secondary author's email address.\"\n// name: \"email\"\n// label: \"Email address:\"\n// type: \"email\"\n// __proto__: Object\n// 5:\n// required: \"Please provide each secondary author's company or organisation.\"\n// name: \"company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 6:\n// required: \"Please provide each secondary author's country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 7:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// length: 8\n// __proto__: Array(0)\n// name: \"secondary_authors\"\n// type: \"repeater\"\n// __proto__: Object\n// 25:\n// label: \"Submit changes\"\n// type: \"submit\"\n// divider: 1\n// __proto__: Object\n// length: 26\n// __proto__: Array(0)\n// expects: \"json\"\n// logintoken: \"w070P7OsRIoxRr6KfcafJl\"\n// __proto__: Object","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/Eurobrake-1.0/components/forms/Abstract.js"],"names":["React","Component","useState","useRef","useEffect","Formik","Form","Field","FieldArray","FastField","ErrorMessage","TextField","RadioGroup","Select","Checkbox","AddCircle","RemoveCircle","ArrowUpwardRounded","ArrowDownwardRounded","cookie","CircularProgress","MenuItem","Typography","Button","titles","countries","AbstractSchema","StyledForm","SendForm","AbstractForm","props","Loading","setLoading","Toggle","setToggle","Status","setStatus","presets","csrf","apiUrl","paperId","url","emptyInitial","values","isSubmitting","isValidating","handleChange","setFieldValue","setFieldTouched","validateForm","errors","allNo","name","radios","document","querySelectorAll","forEach","input","value","onPresenterChange","event","target","console","log","allTouched","Object","keys","key","then","length","onSubmit","__csrf_token","res","data","dataStatus","status","result","author_title","color","map","option","i","fontSize","cursor","label","author_firstname","author_lastname","author_email","author_jobtitle","author_company","author_address1","author_address2","author_address3","author_city","author_scp","author_postal","author_country","author_phone","is_presenting_author","alignSelf","margin","position","bottom","right","papertitle","abstract","minHeight","width","keywords","consider_for_journal","swap","push","remove","setSubmitting","secondary_authors","author","index","title","firstname","lastname","email","company","country","textTransform"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,YAArD,QAA0E,QAA1E;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAyD,oBAAzD;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,kBAAlC,EAAsDC,oBAAtD,QAAmF,oBAAnF;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAQC,UAAR,MAAyB,8BAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,eAAhC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AAIA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwB9B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAAC+B,MAAD;AAAA,OAASC;AAAT,MAAsBhC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACiC,MAAD;AAAA,OAASC;AAAT,MAAsBlC,QAAQ,CAAC,IAAD,CAApC,CAHmC,CAInC;AACA;;AACA,QAAM;AAAEmC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,MAAoCV,KAA1C;AACA,QAAMW,GAAG,GAAI,8CAA6CD,OAAQ,EAAlE,CAPmC,CAQnC;;AACA,SACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAEH,OAAO,IAAIK,YAD9B;AAGI,IAAA,gBAAgB,EAAEhB,cAHtB;AAII,IAAA,kBAAkB,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK,CAAC;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,YAAtC;AAAoDC,IAAAA,aAApD;AAAmEC,IAAAA,eAAnE;AAAoFC,IAAAA,YAApF;AAAkGC,IAAAA;AAAlG,GAAD,KAAgH;AAE7G,UAAMC,KAAK,GAAG,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACtB,iBAAmB;AACnB,cAAMC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,qCAA1B,CAAf;AACAF,QAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAI;AACpBA,UAAAA,KAAK,CAACL,IAAN,KAAeA,IAAf,IAAuBL,aAAa,CAACU,KAAK,CAACL,IAAP,EAAaK,KAAK,CAACC,KAAnB,CAApC;AACH,SAFD;AAEG;AACN,KAND;;AAOA,UAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,YAAM;AAAEC,QAAAA;AAAF,UAAaD,KAAnB;AACA,YAAMF,KAAK,GAAGG,MAAM,CAACH,KAArB;AACA,YAAMN,IAAI,GAAGS,MAAM,CAACT,IAApB;AACA;AAAC;AAA8D;AAC/DL,MAAAA,aAAa,CAACK,IAAD,EAAOM,KAAP,CAAb;AACAP,MAAAA,KAAK,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAL;AACA,aAAOU,OAAO,CAACC,GAAR,CAAY;AAAEpB,QAAAA;AAAF,OAAZ,CAAP;AACH,KARD;;AAUA,UAAMqB,UAAU,GAAG,YAAY;AAC1B,YAAMC,MAAM,CAACC,IAAP,CAAYvB,MAAZ,EAAoBa,OAApB,CAA4BW,GAAG,IAAI;AACtCnB,QAAAA,eAAe,CAACmB,GAAD,EAAM,IAAN,CAAf;AAA2B,OADxB,CAAN;AAEE,YAAMlB,YAAY,GAAGmB,IAAf,CAAoBlB,MAAM,IAAIe,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBmB,MAApB,KAA+B,CAA/B,IAAoCC,QAAQ,EAA1E,CAAN;AACN,KAJD;;AAME,UAAMA,QAAQ,GAAG,YAAY;AAC9B,YAAMtC,UAAU,CAAC,IAAD,CAAhB;AACDW,MAAAA,MAAM,CAAC4B,YAAP,GAAsBjC,IAAtB;AACE,YAAOwB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP;AACA,UAAIS,GAAG,GAAI,MAAM5C,QAAQ,CAAC;AAACe,QAAAA,MAAD;AAASF,QAAAA,GAAT;AAAcH,QAAAA;AAAd,OAAD,CAAzB;AACA,UAAImC,IAAI,GAAG,MAAOD,GAAlB;AACA,UAAIE,UAAU,GAAE,OAAOD,IAAP,KAAeA,IAAI,CAACE,MAApC;AACAvC,MAAAA,SAAS,CAACsC,UAAD,CAAT;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACU,QAAAA;AAAD,OAAZ;;AACA,UAAIG,MAAM,GAAG,YAAY;AACzB,cAAO5C,UAAU,CAAC,KAAD,CAAjB;AACA,cAAME,SAAS,CAAC,IAAD,CAAf;AACE,OAHF;;AAKF,aAAO0C,MAAM,EAAb;AAED,KAhBG;;AAoBF,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE9B,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACkC,YAHlB;AAII,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,cALT;AAMI,MAAA,SAAS,EAAEjE,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKW,MAAM,CAACuD,GAAP,CAAW,CAACC,MAAD,EAASC,CAAT,KACR,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAzB;AAAoE,MAAA,KAAK,EAAEH,MAAM,CAACtB,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0FsB,MAAM,CAACI,KAAjG,CADH,CARL,CANJ,CAFJ,EAoBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEtC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC0C,gBAHlB;AAII,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,kBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CApBJ,EAmCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC2C,eAHlB;AAII,MAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,iBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAnCJ,EAkDI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC4C,YAHlB;AAII,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,cALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAlDJ,EAiEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC6C,eAHlB;AAII,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,iBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAjEJ,EAgFI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC8C,cAHlB;AAII,MAAA,KAAK,EAAE;AAAEX,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,gBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAhFJ,EA+FI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC+C,eAHlB;AAII,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,iBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA/FJ,EA8GI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACgD,eAHlB;AAII,MAAA,KAAK,EAAE;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,iBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA9GJ,EA6HI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACiD,eAHlB;AAII,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,iBALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA7HJ,EA4II;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACkD,WAHlB;AAII,MAAA,KAAK,EAAE;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA5IJ,EA2JI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACmD,UAHlB;AAII,MAAA,KAAK,EAAE;AAAEhB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,YALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA3JJ,EA0KI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACoD,aAHlB;AAII,MAAA,KAAK,EAAE;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,eALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA1KJ,EAyLI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACqD,cAHlB;AAII,MAAA,KAAK,EAAE;AAAElB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,gBALT;AAMI,MAAA,SAAS,EAAEjE,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKY,SAAS,CAACsD,GAAV,CAAc,CAACC,MAAD,EAASC,CAAT,KACX,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAzB;AAAoE,MAAA,KAAK,EAAEH,MAAM,CAACtB,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0FsB,MAAM,CAACI,KAAjG,CADH,CARL,CANJ,CAzLJ,EA2MI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEtC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACsD,YAHlB;AAII,MAAA,KAAK,EAAE;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,cALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA3MJ,EA0NI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,kBADd;AAEI,MAAA,KAAK,EAAEgC,MAAM,CAACuD,oBAFlB;AAGI,MAAA,KAAK,EAAE;AAAEpB,QAAAA,KAAK,EAAE,SAAT;AAAqBqB,QAAAA,SAAS,EAAE,WAAhC;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAHX;AAII,MAAA,IAAI,EAAC,sBAJT;AAKI,MAAA,SAAS,EAAExF,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AACI,MAAA,KAAK,EAAE;AAAEwF,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACA,MAAA,OAAO,EAAEzD,MAAM,CAACuD,oBAAP,KAAgC,KADzC;AAEA,MAAA,QAAQ,EAAGtC,KAAD,IAAW;AACjBD,QAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,OAJD;AAMA,MAAA,IAAI,EAAC,OANL;AAOA,MAAA,IAAI,EAAC,sBAPL;AAQA,MAAA,KAAK,EAAC,KARN;AASJ,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE;AAAV,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,QAPJ,EAyBI;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACA,MAAA,QAAQ,EAAGxC,KAAD,IAAW;AACjBD,QAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,OAHD;AAKA,MAAA,OAAO,EAAEjB,MAAM,CAACuD,oBAAP,KAAgC,KALzC;AAMA,MAAA,IAAI,EAAC,OANL;AAOA,MAAA,IAAI,EAAC,sBAPL;AAQA,MAAA,KAAK,EAAC,IARN;AASJ,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,OAzBJ,CANJ,EAkDKlD,MAAM,CAACgD,oBAAP,IAA+B;AAAO,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,MAAhD;AAAwDzB,QAAAA,KAAK,EAAE,SAA/D;AAA0EI,QAAAA,QAAQ,EAAE;AAApF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+GhC,MAAM,CAACgD,oBAAtH,CAlDpC,CA1NJ,EA+QI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA/QJ,EAgRK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEpD,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC6D,UAHlB;AAII,MAAA,KAAK,EAAE;AAAE1B,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,IAAI,EAAC,YALT;AAMI,MAAA,SAAS,EAAEnE,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAhRL,EA+RK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACM,MAAA,OAAO,EAAC,UADd;AAEM,MAAA,SAAS,EAAC,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAEmC,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC8D,QAHlB;AAII,MAAA,KAAK,EAAE;AAAE3B,QAAAA,KAAK,EAAE,SAAT;AAAqB4B,QAAAA,SAAS,EAAE;AAAhC,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAcGxD,MAAM,CAACuD,QAAP,IAAmB;AAAO,MAAA,KAAK,EAAE;AAACJ,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE,OAA/B;AAAwCC,QAAAA,KAAK,EAAE,GAA/C;AAAoDzB,QAAAA,KAAK,EAAE,SAA3D;AAAsEI,QAAAA,QAAQ,EAAE;AAAhF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0GhC,MAAM,CAACuD,QAAjH,CAdtB,CA/RL,EAiTK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACM,MAAA,OAAO,EAAC,UADd;AAEM,MAAA,SAAS,EAAC,YAFhB;AAE6B,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE;AAAR,OAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FADF,EAMI,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,OAAO,EAAE7D,YAFb;AAGI,MAAA,KAAK,EAAEH,MAAM,CAACiE,QAHlB;AAII,MAAA,KAAK,EAAE;AAAE9B,QAAAA,KAAK,EAAE,SAAT;AAAqB4B,QAAAA,SAAS,EAAE;AAAhC,OAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,SAAS,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAcAxD,MAAM,CAAC0D,QAAP,IAAmB;AAAO,MAAA,KAAK,EAAE;AAAEP,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,GAAhD;AAAqDzB,QAAAA,KAAK,EAAE,SAA5D;AAAuEI,QAAAA,QAAQ,EAAE;AAAjF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4GhC,MAAM,CAAC0D,QAAnH,CAdnB,CAjTL,EAkUK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJADH,EAMG,MAAC,KAAD;AACI,MAAA,SAAS,EAAC,kBADd;AAEI,MAAA,KAAK,EAAEjE,MAAM,CAACkE,oBAFlB;AAGI,MAAA,KAAK,EAAE;AAAE/B,QAAAA,KAAK,EAAE,SAAT;AAAqBqB,QAAAA,SAAS,EAAE,WAAhC;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAHX;AAII,MAAA,IAAI,EAAC,sBAJT;AAKI,MAAA,SAAS,EAAExF,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AACI,MAAA,KAAK,EAAE;AAAEwF,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACA,MAAA,OAAO,EAAEzD,MAAM,CAACkE,oBAAP,KAAgC,KADzC;AAEA,MAAA,QAAQ,EAAGjD,KAAD,IAAW;AACjBD,QAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,OAJD;AAMA,MAAA,IAAI,EAAC,OANL;AAOA,MAAA,IAAI,EAAC,sBAPL;AAQA,MAAA,KAAK,EAAC,KARN;AASJ,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE;AAAV,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,QAPJ,EAyBI;AACI,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ;AACA,MAAA,QAAQ,EAAGxC,KAAD,IAAW;AACjBD,QAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,OAHD;AAKA,MAAA,OAAO,EAAEjB,MAAM,CAACkE,oBAAP,KAAgC,KALzC;AAMA,MAAA,IAAI,EAAC,OANL;AAOA,MAAA,IAAI,EAAC,sBAPL;AAQA,MAAA,KAAK,EAAC,IARN;AASJ,MAAA,KAAK,EAAE;AAAET,QAAAA,MAAM,EAAE;AAAV,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,OAzBJ,CANH,EAkDIlD,MAAM,CAAC2D,oBAAP,IAA+B;AAAO,MAAA,KAAK,EAAE;AAAER,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,MAAhD;AAAwDzB,QAAAA,KAAK,EAAE,SAA/D;AAA0EI,QAAAA,QAAQ,EAAE;AAApF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+GhC,MAAM,CAAC2D,oBAAtH,CAlDnC,CAlUL,EAuXI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAvXJ,EAwXQ,MAAC,UAAD;AAAY,MAAA,IAAI,EAAG,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,MAAd;AAAsBC,MAAAA;AAAtB,KAAD,KACGtE,MAAM,CAACuE,iBAAP,IACAvE,MAAM,CAACuE,iBAAP,CAAyB7C,MAAzB,GAAkC,CADlC,GAGI1B,MAAM,CAACuE,iBAAP,CAAyBnC,GAAzB,CAA6B,CAACoC,MAAD,EAASC,KAAT,KAAmB;AAC5C,YAAM;AAAClB,QAAAA;AAAD,UAAyBiB,MAA/B;AACA;AAAC;AAAgF;AAClF,aACC;AAAK,QAAA,GAAG,EAAEC,KAAV;AAAiB,QAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAEtE,YAFb;AAGI,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,SAHtC;AAII,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,SALrC;AAMI,QAAA,SAAS,EAAEvG,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQnBW,MAAM,CAACuD,GAAP,CAAW,CAACC,MAAD,EAASC,CAAT,KACR,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAzB;AAAoE,QAAA,KAAK,EAAEH,MAAM,CAACtB,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0FsB,MAAM,CAACI,KAAjG,CADH,CARmB,CANJ,CADJ,EAmBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAEtC,YAFb;AAGI,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,aAHtC;AAII,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,aALrC;AAMI,QAAA,SAAS,EAAEzG,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAnBJ,EAkCI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAEmC,YAFb;AAGI,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,YAHtC;AAII,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,YALrC;AAMI,QAAA,SAAS,EAAEzG,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAlCJ,EAiDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAEmC,YAFb;AAGI,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,SAHtC;AAII,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,SALrC;AAMI,QAAA,SAAS,EAAEzG,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAjDJ,EAgEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAEmC,YAFb;AAGI,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,WAHtC;AAII,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,WALrC;AAMI,QAAA,SAAS,EAAEzG,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAhEJ,EA+EI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMK,MAAC,KAAD;AACG,QAAA,SAAS,EAAC,YADb;AAEG,QAAA,OAAO,EAAEmC,YAFZ;AAGG,QAAA,KAAK,EAAG,qBAAoBsE,KAAM,WAHrC;AAIG,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAJV;AAKG,QAAA,IAAI,EAAG,qBAAoBsC,KAAM,WALpC;AAMG,QAAA,SAAS,EAAEvG,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQpBY,SAAS,CAACsD,GAAV,CAAc,CAACC,MAAD,EAASC,CAAT,KACX,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAzB;AAAoE,QAAA,KAAK,EAAEH,MAAM,CAACtB,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0FsB,MAAM,CAACI,KAAjG,CADH,CARoB,CANL,CA/EJ,EAiGI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAMI,MAAC,KAAD;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAE,SAAT;AAAoBqB,UAAAA,SAAS,EAAE,WAA/B;AAA4CC,UAAAA,MAAM,EAAE;AAApD,SAFX;AAGI,QAAA,KAAK,EAAG,qBAAoBgB,KAAM,wBAHtC;AAII,QAAA,SAAS,EAAExG,UAJf;AAKI,QAAA,IAAI,EAAG,qBAAoBwG,KAAM,wBALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI;AACI,QAAA,KAAK,EAAE;AAAEhB,UAAAA,MAAM,EAAE;AAAV,SADX;AAEI,QAAA,OAAO,EAAC,OAFZ;AAGI,QAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQ;AACA,QAAA,OAAO,EAAEF,oBAAoB,KAAK,KADlC;AAEA,QAAA,QAAQ,EAAGtC,KAAD,IAAW;AACjBD,UAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,SAJD;AAMA,QAAA,IAAI,EAAC,OANL;AAOA,QAAA,KAAK,EAAC,KAPN;AAQA,QAAA,IAAI,EAAG,qBAAoBwD,KAAM,wBARjC;AASA,QAAA,KAAK,EAAE;AAAEhB,UAAAA,MAAM,EAAE;AAAV,SATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR,QAPJ,EAyBI;AACI,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SADX;AAEI,QAAA,OAAO,EAAC,OAFZ;AAGI,QAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQ;AACA,QAAA,OAAO,EAAEF,oBAAoB,KAAK,KADlC;AAEA,QAAA,QAAQ,EAAGtC,KAAD,IAAW;AACjBD,UAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,SAJD;AAMA,QAAA,IAAI,EAAC,OANL;AAOA,QAAA,KAAK,EAAC,IAPN;AAQA,QAAA,IAAI,EAAG,qBAAoBwD,KAAM,wBARjC;AASA,QAAA,KAAK,EAAE;AAAEhB,UAAAA,MAAM,EAAE;AAAV,SATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR,OAzBJ,CANJ,EAkDnBlD,MAAM,CAACgD,oBAAP,IAA+B;AAAO,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,MAAM,EAAE,OAAhC;AAAyCC,UAAAA,KAAK,EAAE,MAAhD;AAAwDzB,UAAAA,KAAK,EAAE,SAA/D;AAA0EI,UAAAA,QAAQ,EAAE;AAApF,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+GhC,MAAM,CAACgD,oBAAtH,CAlDZ,CAjGJ,EAsJI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,MAAC,MAAD;AACA,QAAA,OAAO,EAAC,OADR;AAEA,QAAA,MAAM,EAAC,aAFP;AAGA,QAAA,GAAG,EAAC,OAHJ;AAIA,QAAA,EAAE,EAAC,OAJH;AAKA,QAAA,OAAO,EAAC,aALR;AAMA,QAAA,SAAS,EAAC,YANV;AAOA,QAAA,IAAI,EAAC,KAPL;AAOW,QAAA,OAAO,EAAE,MAAM;AACtBa,UAAAA,IAAI,CAAC;AACDM,YAAAA,KAAK,EAAE,EADN;AAEDC,YAAAA,SAAS,EAAE,EAFV;AAGDC,YAAAA,QAAQ,EAAE,EAHT;AAIDC,YAAAA,KAAK,EAAE,EAJN;AAKDC,YAAAA,OAAO,EAAE,EALR;AAMDC,YAAAA,OAAO,EAAE,EANR;AAODxB,YAAAA,oBAAoB,EAAE;AAPrB,WAAD,CAAJ;AASH,SAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkBI,MAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEpB,UAAAA,KAAK,EAAE,OAAT;AAAoBI,UAAAA,QAAQ,EAAE,MAA9B;AAAsCkB,UAAAA,MAAM,EAAE;AAA9C,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CAFA,EAsBA,MAAC,MAAD;AACA,QAAA,OAAO,EAAC,OADR;AAEA,QAAA,MAAM,EAAC,aAFP;AAGC,QAAA,GAAG,EAAC,OAHL;AAIC,QAAA,EAAE,EAAC,OAJJ;AAKA,QAAA,OAAO,EAAC,aALR;AAMA,QAAA,SAAS,EAAC,YANV;AAOA,QAAA,IAAI,EAAC,QAPL;AAOc,QAAA,OAAO,EAAE,MAAMzD,MAAM,CAACuE,iBAAP,CAAyB7C,MAAzB,IAAmC,CAAnC,IAAwC2C,MAAM,CAACI,KAAD,CAP3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE,KAAT;AAAiBI,UAAAA,QAAQ,EAAE,MAA3B;AAAmCkB,UAAAA,MAAM,EAAE;AAA3C,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CAtBA,EAgCA,MAAC,MAAD;AACA,QAAA,OAAO,EAAC,OADR;AAEA,QAAA,MAAM,EAAC,aAFP;AAGC,QAAA,GAAG,EAAC,OAHL;AAIC,QAAA,EAAE,EAAC,OAJJ;AAKA,QAAA,OAAO,EAAC,aALR;AAMA,QAAA,SAAS,EAAC,YANV;AAOA,QAAA,IAAI,EAAC,SAPL;AAOe,QAAA,OAAO,EAAE,MAAMzD,MAAM,CAACuE,iBAAP,CAAyB7C,MAAzB,GAAkC,CAAlC,IAAuC+C,KAAK,KAAK,CAAjD,IAAsDN,IAAI,CAACM,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAPxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,MAAC,kBAAD;AAAoB,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE,KAAT;AAAiBI,UAAAA,QAAQ,EAAE,MAA3B;AAAmCkB,UAAAA,MAAM,EAAE;AAA3C,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CAhCA,EA0CA,MAAC,MAAD;AACA,QAAA,OAAO,EAAC,OADR;AAEA,QAAA,MAAM,EAAC,aAFP;AAGC,QAAA,GAAG,EAAC,OAHL;AAIC,QAAA,EAAE,EAAC,OAJJ;AAKA,QAAA,OAAO,EAAC,aALR;AAMA,QAAA,SAAS,EAAC,YANV;AAOA,QAAA,IAAI,EAAC,WAPL;AAOiB,QAAA,OAAO,EAAE,MAAMzD,MAAM,CAACuE,iBAAP,CAAyB7C,MAAzB,GAAkC,CAAlC,IAAuC+C,KAAK,KAAKzE,MAAM,CAACuE,iBAAP,CAAyB7C,MAAzB,GAAkC,CAAnF,IAAwFyC,IAAI,CAACM,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAP5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,MAAC,oBAAD;AAAsB,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE,KAAT;AAAkBI,UAAAA,QAAQ,EAAE,MAA5B;AAAoCkB,UAAAA,MAAM,EAAE;AAA5C,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CA1CA,CAFA,CAtJJ,CADD;AAgND,KAnNF,CAHJ,GA0NY,MAAC,MAAD;AACA,MAAA,GAAG,EAAC,OADJ;AAEA,MAAA,EAAE,EAAC,OAFH;AAGA,MAAA,MAAM,EAAC,aAHP;AAIA,MAAA,OAAO,EAAC,aAJR;AAKA,MAAA,SAAS,EAAC,YALV;AAMA,MAAA,IAAI,EAAC,KANL;AAMW,MAAA,OAAO,EAAE,MAAM;AACtBW,QAAAA,IAAI,CAAC;AACDM,UAAAA,KAAK,EAAE,EADN;AAEDC,UAAAA,SAAS,EAAE,EAFV;AAGDC,UAAAA,QAAQ,EAAE,EAHT;AAIDC,UAAAA,KAAK,EAAE,EAJN;AAKDC,UAAAA,OAAO,EAAE,EALR;AAMDC,UAAAA,OAAO,EAAE,EANR;AAODxB,UAAAA,oBAAoB,EAAE;AAPrB,SAAD,CAAJ;AASH,OAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEpB,QAAAA,KAAK,EAAE,OAAT;AAAoBI,QAAAA,QAAQ,EAAE,MAA9B;AAAsCkB,QAAAA,MAAM,EAAE;AAA9C,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CA5NpB,CAxXR,EA0mBKrE,OAAO,GAAI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GACT,MAAC,MAAD;AACE,MAAA,MAAM,EAAC,SADT;AAES,MAAA,UAAU,EAAC,SAFpB;AAGS,MAAA,EAAE,EAAC,QAHZ;AAIS,MAAA,QAAQ,EAAC,MAJlB;AAKC,MAAA,OAAO,EAAEiC,UALV;AAMI,MAAA,KAAK,EAAE;AAAEmC,QAAAA,SAAS,EAAE,QAAb;AAAuBrB,QAAAA,KAAK,EAAE;AAA9B,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3mBH,EAonBC7C,MAAM,IAAI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,KAAK,EAAE;AAACkE,QAAAA,SAAS,EAAE,QAAZ;AAAsBwB,QAAAA,aAAa,EAAE;AAArC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8FxF,MAA9F,CApnBX,CADJ;AAynBH,GA5qBL,CADJ;AAgrBH,CAzrBM;AA6rBP,MAAMO,YAAY,GAAG;AACjBmC,EAAAA,YAAY,EAAE,EADG;AAEjBQ,EAAAA,gBAAgB,EAAE,EAFD;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,YAAY,EAAE,EAJG;AAKjBC,EAAAA,eAAe,EAAE,EALA;AAMjBC,EAAAA,cAAc,EAAE,EANC;AAOjBC,EAAAA,eAAe,EAAE,EAPA;AAQjBC,EAAAA,eAAe,EAAE,EARA;AASjBC,EAAAA,eAAe,EAAE,EATA;AAUjBC,EAAAA,WAAW,EAAE,EAVI;AAWjBC,EAAAA,UAAU,EAAE,EAXK;AAYjBC,EAAAA,aAAa,EAAE,EAZE;AAajBC,EAAAA,cAAc,EAAE,EAbC;AAcjBC,EAAAA,YAAY,EAAE,EAdG;AAejBC,EAAAA,oBAAoB,EAAE,EAfL;AAgBjB;AACA;AACAM,EAAAA,UAAU,EAAE,EAlBK;AAmBjB;AACA;AACAC,EAAAA,QAAQ,EAAE,EArBO;AAsBjBG,EAAAA,QAAQ,EAAE,EAtBO;AAuBjB;AACAC,EAAAA,oBAAoB,EAAE,EAxBL;AAyBjBK,EAAAA,iBAAiB,EAAE,CAAC;AAChBG,IAAAA,KAAK,EAAE,EADS;AAEhBC,IAAAA,SAAS,EAAE,EAFK;AAGhBC,IAAAA,QAAQ,EAAE,EAHM;AAIhBC,IAAAA,KAAK,EAAE,EAJS;AAKhBC,IAAAA,OAAO,EAAE,EALO;AAMhBC,IAAAA,OAAO,EAAE,EANO;AAOhBxB,IAAAA,oBAAoB,EAAE,EAPN,CAQhB;;AARgB,GAAD,CAzBF;AAmCjB3B,EAAAA,YAAY,EAAE;AAnCG,CAArB,C,CAwsourcesContent":["import React, { Component, useState, useRef, useEffect } from 'react'\nimport { Formik, Form, Field, FieldArray, FastField, ErrorMessage, } from 'formik';\nimport { TextField, RadioGroup, Select, Checkbox, } from 'formik-material-ui';\nimport { AddCircle, RemoveCircle, ArrowUpwardRounded, ArrowDownwardRounded, } from '@material-ui/icons';\nimport cookie from 'js-cookie';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport  Typography  from '@material-ui/core/Typography';\nimport { Button } from '../Button';\nimport {titles, countries} from './FormSelects';\nimport {AbstractSchema} from './FormControl';\nimport {StyledForm} from './Formstyles';\nimport {SendForm} from './FormActions';\n\n\n\nexport const AbstractForm = (props) => {\n    const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n    // if edit = true send back a preset form if not send a blank\n    // * above- dont think i need this now, can just check if there aere presets and if not just use epty schema\n    const { presets, csrf, apiUrl, paperId} = props;\n    const url = `https://prelude.eurobrake.net/authors/edit/${paperId}`;\n    // ? If they choose to edit a abstarct paper we pass the paper code and il get its presets to fill in\n    return (\n        <Formik\n            initialValues={presets || emptyInitial}\n            \n            validationSchema={AbstractSchema}\n            enableReinitialize\n        >\n            {({ values, isSubmitting, isValidating, handleChange, setFieldValue, setFieldTouched, validateForm, errors }) => {\n          \n                const allNo = ({name}) => {\n                    if(process.browser){\n                    const radios = document.querySelectorAll('input[name*=\"is_presenting_author\"]');\n                    radios.forEach(input => {\n                        input.name !== name && setFieldValue(input.name, input.value)\n                    })}\n                }\n                const onPresenterChange = (event) => {\n                    const { target } = event;\n                    const value = target.value;\n                    const name = target.name;\n                    {/* value === 'no' ? setPresenter('') : setPresenter(name); */}\n                    setFieldValue(name, value);\n                    allNo({ name });\n                    return console.log({ values })\n                }\n                \n                const allTouched = async () => {\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n\n                  const onSubmit = async () => {\n                 await setLoading(true);\n                values.__csrf_token = csrf\n                  await  console.log('submitting')\n                  let res =  await SendForm({values, url, csrf});\n                  let data = await  res;\n                  let dataStatus= await  data && data.status;\n                  setStatus(dataStatus)\n                  console.log({data})\n                  let result = async () => {\n                  await  setLoading(false)\n                  await setToggle(true)\n                   }    \n                  \n                return result()\n                 \n              }\n\n\n                \n                return (\n                    <StyledForm>\n                        <Typography className=\"form-title\">Primary Author</Typography>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Title\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_title}\n                                style={{ color: '#134381' }}\n                                name=\"author_title\"\n                                component={Select}\n                            >\n                                {titles.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                First Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_firstname}\n                                style={{ color: '#134381' }}\n                                name=\"author_firstname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Last Name:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_lastname}\n                                style={{ color: '#134381' }}\n                                name=\"author_lastname\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Email:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_email}\n                                style={{ color: '#134381' }}\n                                name=\"author_email\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Job Title:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_jobtitle}\n                                style={{ color: '#134381' }}\n                                name=\"author_jobtitle\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Company:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_company}\n                                style={{ color: '#134381' }}\n                                name=\"author_company\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Address:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address1}\n                                style={{ color: '#134381' }}\n                                name=\"author_address1\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address2}\n                                style={{ color: '#134381' }}\n                                name=\"author_address2\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n\n                            </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_address3}\n                                style={{ color: '#134381' }}\n                                name=\"author_address3\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                City:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_city}\n                                style={{ color: '#134381' }}\n                                name=\"author_city\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                State/ County/ Province:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_scp}\n                                style={{ color: '#134381' }}\n                                name=\"author_scp\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Postal/ Zip code:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_postal}\n                                style={{ color: '#134381' }}\n                                name=\"author_postal\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Country\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_country}\n                                style={{ color: '#134381' }}\n                                name=\"author_country\"\n                                component={Select}\n                            >\n                                {countries.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                            </Field>\n                        </div>\n                        <div className=\"form-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Phone:\n                        </label>\n                            <Field\n                                className=\"form-input\"\n                                onClick={handleChange}\n                                value={values.author_phone}\n                                style={{ color: '#134381' }}\n                                name=\"author_phone\"\n                                component={TextField}\n                            />\n                        </div>\n                        <div className=\"form-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                                Is this the presenting author?\n                        </label>\n                            <Field\n                                className=\"form-field-radio\"\n                                value={values.is_presenting_author}\n                                style={{ color: '#134381' , alignSelf: 'flexStart', margin: '0'}}\n                                name=\"is_presenting_author\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: ' 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label-radio\">\n                                        <input\n                                        checked={values.is_presenting_author === 'yes'}\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"yes\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    Yes\n                                </label>\n                                <label\n                                    style={{ margin: '1rem 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label-radio\">\n                                        <input\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        checked={values.is_presenting_author !== 'yes'}\n                                        type=\"radio\"\n                                        name=\"is_presenting_author\"\n                                        value=\"no\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    No\n                                </label>\n                            </Field>\n                            {errors.is_presenting_author && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.is_presenting_author}</label>}\n\n                        </div>\n                        <Typography className=\"form-title\">Your Abstract</Typography> \n                         <div className=\"form-field\">\n                             <label\n                                 htmlFor=\"label\"\n                                 className=\"form-label\">\n                                 Paper Title:\n                         </label>\n                             <Field\n                                 className=\"form-input\"\n                                 onClick={handleChange}\n                                 value={values.papertitle}\n                                 style={{ color: '#134381' }}\n                                 name=\"papertitle\"\n                                 component={TextField}\n                             />\n                         </div>\n                         <div className=\"form-field\">\n                           <label\n                                 htmlFor=\"abstract\"\n                                 className=\"form-label\">\n                                 Abstract:\n                         </label>\n                             <Field\n                                 className=\"form-input\"\n                                 onClick={handleChange}\n                                 value={values.abstract}\n                                 style={{ color: '#134381' , minHeight: '15rem'}}\n                                 name=\"abstract\"\n                                 component=\"textarea\"\n                             />\n                           {errors.abstract && <label style={{position: 'absolute', bottom: '-1rem', right: '0', color: '#ff0000', fontSize: '1.5rem'}}>{errors.abstract}</label>}\n                            {/* {errors.abstract && values.abstract && values.abstract.match(/[\\w\\d\\’\\'-]+/gi) && <label style={{position: 'absolute', bottom: '-3rem', right: '0', color: '#ff0000', fontSize: '1.5rem'}}>{'Words' + ' ' + values.abstract.match(/[\\w\\d\\’\\'-]+/gi).length}</label>} */}\n                            \n                        </div>\n                         <div className=\"form-field\">\n                           <label\n                                 htmlFor=\"keywords\"\n                                 className=\"form-label\" style={{width: '33.33%'}}>\n                                 \"Please enter around 5 keywords that describe the main focus of your abstract:\"\n                         </label>\n                             <Field\n                                 className=\"form-input\"\n                                 onClick={handleChange}\n                                 value={values.keywords}\n                                 style={{ color: '#134381' , minHeight: '15rem'}}\n                                 name=\"keywords\"\n                                 component=\"textarea\"\n                             />\n                        {errors.keywords && <label style={{ position: 'absolute', bottom: '-3rem', right: '0', color: '#ff0000', fontSize: '1.5rem' }}>{errors.keywords}</label>}\n                        {/* {errors.keywords && values.keywords && values.keywords.match(/[\\w\\d\\’\\'-]+/gi) && <label style={{position: 'absolute', bottom: '0', right: '12rem', color: '#ff0000', fontSize: '1.5rem'}}>{'Words' + ' ' + values.keywords.match(/[\\w\\d\\’\\'-]+/gi).length}</label>} */}\n                         </div>\n                         <div className=\"form-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"form-label\">\n                               Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?\n                        </label>\n                            <Field\n                                className=\"form-field-radio\"\n                                value={values.consider_for_journal}\n                                style={{ color: '#134381' , alignSelf: 'flexStart', margin: '0'}}\n                                name=\"consider_for_journal\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: ' 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label-radio\">\n                                        <input\n                                        checked={values.consider_for_journal === 'yes'}\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        type=\"radio\"\n                                        name=\"consider_for_journal\"\n                                        value=\"yes\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    Yes\n                                </label>\n                                <label\n                                    style={{ margin: '1rem 0' }}\n                                    htmlFor=\"label\"\n                                    className=\"form-label-radio\">\n                                        <input\n                                        onChange={(event) => {\n                                            onPresenterChange(event)\n                                        }\n                                        }\n                                        checked={values.consider_for_journal !== 'yes'}\n                                        type=\"radio\"\n                                        name=\"consider_for_journal\"\n                                        value=\"no\"\n                                    style={{ margin: '1rem' }}\n\n                                    />\n                                    No\n                                </label>\n                            </Field>\n                            {errors.consider_for_journal && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.consider_for_journal}</label>}\n                        </div>\n\n                        <Typography className=\"form-title\">Secondary Author(s)</Typography>\n                            <FieldArray name={`secondary_authors`} >\n                                {({ swap, push, remove, setSubmitting }) => (\n                                    values.secondary_authors &&\n                                    values.secondary_authors.length > 0 ?\n                                    (\n                                        values.secondary_authors.map((author, index) => {\n                                            const {is_presenting_author} = author; \n                                            {/* const second = `values.secondary_authors[${index}].is_presenting_author`; */}\n                                           return (\n                                            <div key={index} className=\"form-secondary\">\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Title:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].title`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].title`}\n                                                        component={Select}\n                                                        >\n                                {titles.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                            </Field>\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        First Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].firstname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].firstname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Last Name:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].lastname`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].lastname`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Email:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].email`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].email`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Company:\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].company`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].company`}\n                                                        component={TextField}\n                                                    />\n                                                </div>\n                                                <div className=\"form-field\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Country:\n                                                    </label>\n                                                     <Field\n                                                        className=\"form-input\"\n                                                        onClick={handleChange}\n                                                        value={`secondary_authors[${index}].country`}\n                                                        style={{ color: '#134381' }}\n                                                        name={`secondary_authors[${index}].country`}\n                                                        component={Select}\n                                                    >\n                                {countries.map((option, i) =>\n                                    <MenuItem key={i} style={{ fontSize: '1.5rem', cursor: 'pointer' }} value={option.value}>{option.label}</MenuItem>)}\n                                                    </Field>\n                                                </div>\n                                                <div className=\"form-field-radio\">\n                                                    <label\n                                                        htmlFor=\"label\"\n                                                        className=\"form-label\">\n                                                        Is this the presenting Author?\n                                                    </label>\n                                                    <Field\n                                                        className=\"form-field-radio\"\n                                                        style={{ color: '#134381', alignSelf: 'flexStart', margin: '0' }}\n                                                        value={`secondary_authors[${index}].is_presenting_author`}\n                                                        component={RadioGroup}\n                                                        name={`secondary_authors[${index}].is_presenting_author`}\n                                                    >\n                                                        <label\n                                                            style={{ margin: '0' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"form-label-radio\">\n                                                                <input\n                                                                checked={is_presenting_author === 'yes'}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"yes\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                                style={{ margin: '1rem' }}\n\n                                                            />\n                                                            Yes\n                                                        </label>\n                                                        <label\n                                                            style={{ margin: '1rem 0 ' }}\n                                                            htmlFor=\"label\"\n                                                            className=\"form-label-radio\">\n                                                                <input\n                                                                checked={is_presenting_author !== 'yes'}\n                                                                onChange={(event) => {\n                                                                    onPresenterChange(event)\n                                                                }\n                                                                }\n                                                                type=\"radio\"\n                                                                value=\"no\"\n                                                                name={`secondary_authors[${index}].is_presenting_author`}\n                                                                style={{ margin: '1rem' }}\n\n                                                            />\n                                                            No\n                                                        </label>\n                                                    </Field>\n                            {errors.is_presenting_author && <label style={{ position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem' }}>{errors.is_presenting_author}</label>}\n\n                                                </div>\n                                                <div className=\"form-field\">\n\n                                                <div className=\"form-field_action\">\n\n                                                <Button \n                                                padding=\".5rem\"\n                                                bcolor=\"transparent\"\n                                                abs=\"false\"\n                                                bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"add\" onClick={() => {\n                                                    push({\n                                                        title: '',\n                                                        firstname: '',\n                                                        lastname: '',\n                                                        email: '',\n                                                        company: '',\n                                                        country: '',\n                                                        is_presenting_author: ''\n                                                    });\n                                                }}>\n                                                    <AddCircle style={{ color: 'green'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                                <Button \n                                                padding='.5rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"remove\" onClick={() => values.secondary_authors.length >= 1 && remove(index)}>\n                                                    <RemoveCircle style={{ color: 'red' , fontSize: '3rem', margin: '.5rem 0' }} />\n                                                </Button>\n                                                <Button \n                                                padding='.5rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"upgrade\" onClick={() => values.secondary_authors.length > 1 && index !== 0 && swap(index, index - 1)}>\n                                                    <ArrowUpwardRounded style={{ color: 'red' , fontSize: '3rem', margin: '.5rem 0' }} />\n                                                </Button>\n                                                <Button \n                                                padding='.5rem'\n                                                bcolor=\"transparent\"\n                                                 abs=\"false\"\n                                                 bs=\"false\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"downgrade\" onClick={() => values.secondary_authors.length > 1 && index !== values.secondary_authors.length - 1 && swap(index, index + 1)}>\n                                                    <ArrowDownwardRounded style={{ color: 'red'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                                </div>\n                                                </div>\n                                            </div>\n                                        )})\n                                    )\n                                    :\n                                    (\n                                                <Button \n                                                abs=\"false\"\n                                                bs=\"false\"\n                                                bcolor=\"transparent\"\n                                                HBColor=\"transparent\"\n                                                transform=\"scale(1.4)\"\n                                                type=\"add\" onClick={() => {\n                                                    push({\n                                                        title: '',\n                                                        firstname: '',\n                                                        lastname: '',\n                                                        email: '',\n                                                        company: '',\n                                                        country: '',\n                                                        is_presenting_author: ''\n                                                    });\n                                                }}>\n                                                    <AddCircle style={{ color: 'green'  , fontSize: '3rem', margin: '.5rem 0'}} />\n                                                </Button>\n                                    ) \n                                    )}\n                            </FieldArray>\n                        {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ alignSelf: 'center', color: '#FFF' }}>\n                            submit\n                        </Button>}\n                    {Toggle && <Typography className=\"form-title\" style={{alignSelf: 'center', textTransform: 'uppercase'}}>{Status }</Typography>}\n\n                    </StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\nconst emptyInitial = {\n    author_title: '',\n    author_firstname: '',\n    author_lastname: '',\n    author_email: '',\n    author_jobtitle: '',\n    author_company: '',\n    author_address1: '',\n    author_address2: '',\n    author_address3: '',\n    author_city: '',\n    author_scp: '',\n    author_postal: '',\n    author_country: '',\n    author_phone: '',\n    is_presenting_author: '',\n    // submission_type: '',\n    // presentationtype_full: '',\n    papertitle: '',\n    // theme: '',\n    // subtheme: [],\n    abstract: '',\n    keywords: '',\n    // previouspapers: '',\n    consider_for_journal: '',\n    secondary_authors: [{\n        title: '',\n        firstname: '',\n        lastname: '',\n        email: '',\n        company: '',\n        country: '',\n        is_presenting_author: '',\n        // ref: ''\n    }],\n    __csrf_token: '',\n\n}\n                       \n\n// const presetEG = {\n//     abstract: \"lorem ipsum\",\n//     author_address1: \"10 Hamilton Road\",\n//     author_address2: null,\n//     author_address3: null,\n//     author_city: \"Sidcup\",\n//     author_company: \"Article Seven Limited\",\n//     author_country: \"GB\",\n//     author_email: \"andrew@article7.co.uk\",\n//     author_firstname: \"Andrew\",\n//     author_jobtitle: \"Director\",\n//     author_lastname: \"Green\",\n//     author_phone: \"+44 20 8305 1224\",\n//     author_postal: \"DA15 7HB\",\n//     author_scp: \"Kent\",\n//     author_title: \"Mr.\",\n//     consider_for_journal: \"no\",\n//     is_presenting_author: \"yes\",\n//     keywords: \"lorem, ipsum\",\n//     papertitle: \"Duis aute irure dolor\",\n//     presentationtype_full: \"programme\",\n//     previouspapers: null,\n//     secondary_authors: [\n//         {\n//             company: \"Article Seven\",\n//             country: \"GB\",\n//             email: \"ava@article7.co.uk\",\n//             firstname: \"Ava\",\n//             is_presenting_author: \"no\",\n//             lastname: \"Green\",\n//             ref: \"2399A3C8-1823-11EA-BBE7-BDC53B013130\",\n//             title: null,\n//         }],\n//     submission_type: \"full\",\n//     subtheme: [\"3DB1BDC0-9414-11E8-81E9-D82DD1471F92\"],\n//     theme: \"925B5F3C-7865-11E7-8659-8C8422753A7C\",\n//     __csrf_token: \"5d159fb224ed613dce89a64553f36f5eda1fa97c,2caaa318bb55c8c19d660a1e420d1c602dfc59f9,1576603105\"\n// }\n\n// ! NOT NEEDED ANYMORE !!!! \n//  <h1>Your Abstract</h1>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Submission Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.submission_type}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"submission_type\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a full technical paper submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"full\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make an oral-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"oral\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     I will make a poster-only submission\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"submission_type\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n\n//                             </Field>\n//                         </div>\n//                         {values.submission_type === 'full' && <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Presentation Type:\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.presentationtype_full}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"presentationtype_full\"\n//                                 component={RadioGroup}\n//                             >\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an oral presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"programme\"\n//                                     />\n//                                 </label>\n//                                 <label\n//                                     style={{ margin: '1rem' }}\n//                                     htmlFor=\"label\"\n//                                     className=\"form-label\">\n//                                     My full paper submission will be accompanied by an poster presentation\n//                             <Field\n//                                         type=\"radio\"\n//                                         name=\"presentationtype_full\"\n//                                         value=\"poster\"\n//                                     />\n//                                 </label>\n\n//                             </Field>\n//                         </div>}\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Paper Title:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.papertitle}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"papertitle\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Which topic does your paper belong to?\n//                         </label>\n//                             <Field\n//                                 className=\"form-radio\"\n//                                 onClick={handleChange}\n//                                 value={values.theme}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"theme\"\n//                                 component={RadioGroup}\n//                             >\n//                                 {themes.map(theme =>\n//                                     <label\n//                                         style={{ margin: '1rem' }}\n//                                         htmlFor=\"label\"\n//                                         className=\"form-label\">\n//                                         {theme.label}\n//                                         <Field\n//                                             type=\"radio\"\n//                                             name=\"theme\"\n//                                             value={theme.value}\n//                                         />\n//                                     </label>)}\n//                             </Field>\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Please choose up to three sub-topics for your paper:\n//                         </label>\n//                             {\n//                                 values.theme === 'BC50E220-9412-11E8-85AF-D97B4D95EBB1' ?\n//                                     subTheme1.map((sub, i) => (\n//                                         <label\n//                                             htmlFor=\"label\"\n//                                             className=\"form-label\">\n//                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                             {sub.label}\n//                                         </label>\n//                                     )\n//                                     )\n//                                     :\n//                                     values.theme === '48C9561C-7865-11E7-AA75-C89000D85D50' ?\n//                                         subTheme2.map((sub, i) => (\n//                                             <label\n//                                                 htmlFor=\"label\"\n//                                                 className=\"form-label\">\n//                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                 {sub.label}\n//                                             </label>\n//                                         )\n//                                         )\n//                                         :\n//                                         values.theme === '5D49D9C2-7865-11E7-9112-887F12D54550' ?\n//                                             subTheme3.map((sub, i) => (\n//                                                 <label\n//                                                     htmlFor=\"label\"\n//                                                     className=\"form-label\">\n//                                                     <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                     {sub.label}\n//                                                 </label>\n//                                             )\n//                                             )\n//                                             :\n//                                             values.theme === '7C15061A-7865-11E7-8178-84D2A73AF9BC' ?\n//                                                 subTheme4.map((sub, i) => (\n//                                                     <label\n//                                                         htmlFor=\"label\"\n//                                                         className=\"form-label\">\n//                                                         <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                         {sub.label}\n//                                                     </label>\n//                                                 )\n//                                                 )\n//                                                 :\n//                                                 values.theme === '925B5F3C-7865-11E7-8659-8C8422753A7C' ?\n//                                                     subTheme5.map((sub, i) => (\n//                                                         <label\n//                                                             htmlFor=\"label\"\n//                                                             className=\"form-label\">\n//                                                             <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                             {sub.label}\n//                                                         </label>\n//                                                     )\n//                                                     )\n//                                                     :\n//                                                     values.theme === 'B6F53F20-7865-11E7-A9B1-FC3D434D4D51' ?\n//                                                         subTheme6.map((sub, i) => (\n//                                                             <label\n//                                                                 htmlFor=\"label\"\n//                                                                 className=\"form-label\">\n//                                                                 <Field key={i} id={`Box-${i}`} type=\"checkbox\" name=\"subtheme\" value={sub.value} />\n//                                                                 {sub.label}\n//                                                             </label>\n//                                                         )\n//                                                         )\n//                                                         : null\n//                             }\n//                             <ErrorMessage component={Typography} name=\"subtheme\" style={{ color: 'red', fontSize: '1.5rem' }} />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Abstract:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.abstract}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"abstract\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Keywords:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.keywords}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"keywords\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Previous Papers:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.previouspapers}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"previouspapers\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n//                         <div className=\"form-field\">\n//                             <label\n//                                 htmlFor=\"label\"\n//                                 className=\"form-label\">\n//                                 Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?:\n//                         </label>\n//                             <Field\n//                                 className=\"form-input\"\n//                                 onClick={handleChange}\n//                                 value={values.consider_for_journal}\n//                                 style={{ color: '#134381' }}\n//                                 name=\"consider_for_journal\"\n//                                 component={TextField}\n//                             />\n//                         </div>\n\n\n\n// * DEFINITION \n\n// form: Array(26)\n// 0:\n// title: \"Primary Author\"\n// type: \"heading\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide your first name.\"\n// name: \"author_firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide your second (family) name.\"\n// name: \"author_lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide your email address.\"\n// name: \"author_email\"\n// label: \"Email address:\"\n// type: \"email\"\n// divider: 1\n// __proto__: Object\n// 5:\n// required: \"Please provide your job title.\"\n// name: \"author_jobtitle\"\n// label: \"Job title:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 6:\n// required: \"Please provide your company or organisation.\"\n// name: \"author_company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 7:\n// required: \"Please provide your street address.\"\n// name: \"author_address1\"\n// label: \"Address:\"\n// type: \"text\"\n// __proto__: Object\n// 8:\n// name: \"author_address2\"\n// type: \"text\"\n// __proto__: Object\n// 9:\n// name: \"author_address3\"\n// type: \"text\"\n// __proto__: Object\n// 10:\n// required: \"Please provide your city.\"\n// name: \"author_city\"\n// label: \"City:\"\n// type: \"text\"\n// __proto__: Object\n// 11:\n// name: \"author_scp\"\n// label: \"State/county/province:\"\n// type: \"text\"\n// __proto__: Object\n// 12:\n// name: \"author_postal\"\n// label: \"Postal/zip code:\"\n// type: \"text\"\n// __proto__: Object\n// 13:\n// required: \"Please provide your country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"author_country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 14:\n// required: \"Please provide your telephone number, including international code.\"\n// notes: \"Please include the international code.\"\n// name: \"author_phone\"\n// label: \"Telephone:\"\n// type: \"text\"\n// divider: 1\n// __proto__: Object\n// 15:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// 16:\n// title: \"Your Abstract\"\n// type: \"heading\"\n// __proto__: Object\n// 17:\n// name: \"papertitle\"\n// required: \"Please provide the title of your proposed submission.\"\n// notes: \"Please use Title Case. DO NOT use block capitals.\"\n// type: \"textarea\"\n// label: \"Title of your proposed submission:\"\n// divider: 0\n// __proto__: Object\n// 18:\n// html: \"↵\t\t\t\t\t<p class=\"f_intro\"><strong>Please type or paste the text of your abstract below (maximum 750 words).</strong></p> ↵\t \t\t\t\t<p class=\"f_intro\">Your abstract should clearly set out the main scientific, technical, economic and / or practical points to be addressed in your paper. In particular your abstract should indicate those aspects of the work which are new, innovative and unique.</p>↵\t\t\t\t\"\n// type: \"html\"\n// divider: 1\n// __proto__: Object\n// 19:\n// required: \"Please provide the abstract for your submission.\"\n// name: \"abstract\"\n// label: \"Your abstract:\"\n// type: \"textarea\"\n// __proto__: Object\n// 20:\n// name: \"keywords\"\n// required: \"Please provide some keywords for your abstract.\"\n// notes: \"Please separate keywords with commas.  Please do not use block capitals.\"\n// type: \"textarea\"\n// label: \"Please enter around 5 keywords that describe the main focus of your abstract:\"\n// divider: 1\n// __proto__: Object\n// 21:\n// name: \"previouspapers\"\n// label: \"Please give details of any previous papers you have published on this subject (if applicable)\"\n// type: \"textarea\"\n// divider: 1\n// __proto__: Object\n// 22:\n// options: (2) [{…}, {…}]\n// name: \"consider_for_journal\"\n// default: \"no\"\n// notes: \"Please note that your paper may require additional revisions in order to meet the qualifying criteria.\"\n// type: \"radio\"\n// label: \"Do you wish your paper to be considered for inclusion in a list of the best papers given at EuroBrake to be published in an academic journal?\"\n// divider: 1\n// __proto__: Object\n// 23:\n// title: \"Secondary Author(s)\"\n// type: \"heading\"\n// __proto__: Object\n// 24:\n// fields: Array(8)\n// 0:\n// name: \"ref\"\n// type: \"hidden\"\n// __proto__: Object\n// 1:\n// options: (13) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"title\"\n// label: \"Title:\"\n// type: \"select\"\n// __proto__: Object\n// 2:\n// required: \"Please provide each secondary author's first name.\"\n// name: \"firstname\"\n// label: \"First name(s):\"\n// type: \"text\"\n// __proto__: Object\n// 3:\n// required: \"Please provide each secondary author's last name.\"\n// name: \"lastname\"\n// label: \"Second (family) name:\"\n// type: \"text\"\n// __proto__: Object\n// 4:\n// required: \"Please provide each secondary author's email address.\"\n// name: \"email\"\n// label: \"Email address:\"\n// type: \"email\"\n// __proto__: Object\n// 5:\n// required: \"Please provide each secondary author's company or organisation.\"\n// name: \"company\"\n// label: \"Company/organisation:\"\n// type: \"text\"\n// __proto__: Object\n// 6:\n// required: \"Please provide each secondary author's country.\"\n// options: (83) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// name: \"country\"\n// label: \"Country:\"\n// type: \"select\"\n// __proto__: Object\n// 7:\n// options: (2) [{…}, {…}]\n// name: \"is_presenting_author\"\n// default: \"no\"\n// required: \"Please indicate the presenting author.\"\n// type: \"radio\"\n// label: \"Is this the presenting author?\"\n// divider: 1\n// __proto__: Object\n// length: 8\n// __proto__: Array(0)\n// name: \"secondary_authors\"\n// type: \"repeater\"\n// __proto__: Object\n// 25:\n// label: \"Submit changes\"\n// type: \"submit\"\n// divider: 1\n// __proto__: Object\n// length: 26\n// __proto__: Array(0)\n// expects: \"json\"\n// logintoken: \"w070P7OsRIoxRr6KfcafJl\"\n// __proto__: Object"]},"metadata":{},"sourceType":"module"}