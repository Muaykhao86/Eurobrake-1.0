{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PPT.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport { PPTSchema } from '../TaskControl';\nexport var PPT = function PPT(props) {\n  var _useState = useState(false),\n      Loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      Toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(null),\n      Status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var emptyInitial = {\n    accept: '',\n    ppt_filename: '',\n    author_notes: ''\n  };\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId,\n      type = props.type;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type);\n  var url = \"https://prelude.eurobrake.net/authors/tasks/ppt/\".concat(paperId);\n  return __jsx(Formik, {\n    initialValues: emptyInitial,\n    validationSchema: PPTSchema,\n    enableReinitialize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, function (_ref) {\n    var _jsx;\n\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        setFieldTouched = _ref.setFieldTouched,\n        isValidating = _ref.isValidating,\n        validateForm = _ref.validateForm,\n        handleSubmit = _ref.handleSubmit,\n        errors = _ref.errors;\n\n    var allTouched =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('touched!');\n                console.log({\n                  errors: errors\n                });\n                _context.next = 4;\n                return _Object$keys(values).forEach(function (key) {\n                  setFieldTouched(key, true);\n                });\n\n              case 4:\n                _context.next = 6;\n                return validateForm().then(function (errors) {\n                  return _Object$keys(errors).length === 0 && onSubmit();\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function allTouched() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoading(true);\n                values.__csrf_token = csrf;\n                console.log('submitting');\n                _context2.next = 5;\n                return SendFile({\n                  values: values,\n                  url: url,\n                  csrf: csrf\n                });\n\n              case 5:\n                res = _context2.sent;\n                _context2.next = 8;\n                return res;\n\n              case 8:\n                _context2.t0 = _context2.sent;\n\n                if (!_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.t0 = res.status;\n\n              case 11:\n                data = _context2.t0;\n                console.log({\n                  status: status\n                });\n                data && setStatus(data) && setToggle(true) && setLoading(false);\n                return _context2.abrupt(\"return\");\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function onSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    console.log(errors);\n    return __jsx(StyledTask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, paperId), __jsx(Typography, {\n      className: \"task-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Please upload your PowerPoint persentation using the form below\"), __jsx(\"div\", {\n      className: \"task-checkboxField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-checkboxField-label\",\n      style: {\n        color: '#134381'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"I have read the \", __jsx(Link, {\n      href: \"/authorsAreaInstructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"task-link_bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Instructions for Preparing your Powerpoint Presentation\")), \" and have followed the guidance notes available there.\"), __jsx(Field, {\n      className: \"task-checkboxField-box\",\n      value: values.accept,\n      style: {\n        color: '#134381'\n      },\n      name: \"accept\",\n      component: CheckboxWithLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), errors.accept && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-1rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, errors.accept)), __jsx(\"div\", {\n      className: \"task-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"File upload\"), __jsx(Field, {\n      className: \"task-input\",\n      value: values.ppt_filename,\n      style: {\n        color: '#134381'\n      },\n      name: \"ppt_filename\",\n      component: SimpleFileUpload,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), errors.ppt_filename && __jsx(\"label\", {\n      style: {\n        position: 'absolute',\n        bottom: '-2rem',\n        right: '1rem',\n        color: '#ff0000',\n        fontSize: '1.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, errors.ppt_filename)), __jsx(\"div\", {\n      className: \"task-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"label\",\n      className: \"task-notes-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Notes for reviewers:\"), __jsx(Field, {\n      className: \"task-notes-input\",\n      onClick: handleChange,\n      value: values.author_notes,\n      style: {\n        color: '#134381'\n      },\n      name: \"author_notes\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), Loading ? __jsx(CircularProgress, {\n      size: 24,\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }) : __jsx(Button, (_jsx = {\n      bcolor: \"#134381\",\n      background: \"#134381\",\n      br: \"100rem\",\n      style: {\n        margin: \".5rem 0\"\n      },\n      fontSize: \"2rem\",\n      onClick: allTouched\n    }, _defineProperty(_jsx, \"style\", {\n      fontSize: \"1rem\",\n      height: '2rem',\n      alignSelf: 'center'\n    }), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    }), _defineProperty(_jsx, \"__self\", this), _jsx), Status ? Status : 'submit'));\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/PPT.js"],"names":["React","Component","useState","Link","Typography","CircularProgress","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","Button","SendFile","StyledTask","PPTSchema","PPT","props","Loading","setLoading","Toggle","setToggle","Status","setStatus","emptyInitial","accept","ppt_filename","author_notes","presets","csrf","apiUrl","paperId","type","console","log","url","values","handleChange","setFieldTouched","isValidating","validateForm","handleSubmit","errors","allTouched","forEach","key","then","length","onSubmit","__csrf_token","res","status","data","color","position","bottom","right","fontSize","margin","height","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendFile } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport {PPTSchema} from '../TaskControl';\n\n\n\nexport const PPT = (props) => {\n  const [Loading, setLoading] = useState(false);\n    const [Toggle, setToggle] = useState(false);\n    const [Status, setStatus] = useState(null);\n\n    const emptyInitial = {\n        accept: '',\n        ppt_filename: '',\n        author_notes: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    const url = `https://prelude.eurobrake.net/authors/tasks/ppt/${paperId}`;\n    \n    \n    return (\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PPTSchema}\n\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldTouched, isValidating, validateForm, handleSubmit, errors }) => {\n                 const allTouched = async () => {\n                       console.log('touched!')\n                       console.log({errors})\n                     await Object.keys(values).forEach(key => {   \n                        setFieldTouched(key, true)});\n\n                       await validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())\n                }\n                   \n                   const onSubmit = async () => {\n                    setLoading(true);\n                  values.__csrf_token = csrf\n                    console.log('submitting')\n                  let res =  await SendFile({values, url, csrf});\n                  let data = await  res && res.status;\n                  console.log({status})\n                 data && setStatus(data) && setToggle(true) && setLoading(false)\n                  return \n              }\n              console.log(errors)\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Please upload your PowerPoint persentation using the form below</Typography>\n                         <div className=\"task-checkboxField\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-checkboxField-label\"\n                                style={{ color: '#134381' }}\n\n                                >\n                                I have read the <Link href=\"/authorsAreaInstructions\"><a className=\"task-link_bold\" >Instructions for Preparing your Powerpoint Presentation</a></Link> and have followed the guidance notes available there.\n                        </label>\n                            <Field\n                                className=\"task-checkboxField-box\"\n                                value={values.accept}\n                                style={{ color: '#134381', }}\n                                name=\"accept\"\n                                component={CheckboxWithLabel}\n                            >\n                            </Field>\n                            {errors.accept && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.accept}</label>}\n                        </div>\n                         <div className=\"task-field\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-label\">\n                                File upload\n                        </label>\n                            <Field\n                                className=\"task-input\"\n                                value={values.ppt_filename}\n                                style={{ color: '#134381' }}\n                                name=\"ppt_filename\"\n                                component={SimpleFileUpload}\n                                fullWidth\n                            />\n                            {errors.ppt_filename && <label style={{position: 'absolute', bottom: '-2rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ppt_filename}</label>}\n                        </div>\n                         <div className=\"task-notes\">\n                           <label\n                                 htmlFor=\"label\"\n                                 className=\"task-notes-label\">\n                                 Notes for reviewers:\n                         </label>\n                             <Field\n                                 className=\"task-notes-input\"\n                                 onClick={handleChange}\n                                 value={values.author_notes}\n                                 style={{ color: '#134381' }}\n                                 name=\"author_notes\"\n                                 component=\"textarea\"\n                             />\n                         </div>\n                       \n                         {Loading ?  <CircularProgress size={24} className=\"loading\"/> : \n                       <Button \n                         bcolor=\"#134381\"\n                                background=\"#134381\"\n                                br=\"100rem\"\n                                style={{ margin: \".5rem 0\" }}\n                                fontSize=\"2rem\"\n                        onClick={allTouched}\n                           style={{ fontSize: \"1rem\", height: '2rem', alignSelf: 'center'}}>\n                            {Status ? Status : 'submit'}\n                        </Button>}\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}