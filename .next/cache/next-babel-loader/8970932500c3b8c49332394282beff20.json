{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Permissions.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport { PermissionSchema } from '../TaskControl';\nexport var Permissions = function Permissions(props) {\n  var emptyInitial = {\n    ok_to_publish_ppt: ''\n  };\n  var presets = props.presets,\n      csrf = props.csrf,\n      apiUrl = props.apiUrl,\n      paperId = props.paperId,\n      type = props.type;\n  console.log('tasks', presets, csrf, apiUrl, paperId, type);\n  var url = \"https://prelude.eurobrake.net/authors/tasks/permissions/\".concat(paperId);\n  return (// ! NEED PRESETS FOR TASKS\n    __jsx(Formik, {\n      initialValues: emptyInitial,\n      validationSchema: PermissionSchema,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, function (_ref) {\n      var values = _ref.values,\n          handleChange = _ref.handleChange,\n          setFieldValue = _ref.setFieldValue,\n          isValidating = _ref.isValidating,\n          validateForm = _ref.validateForm,\n          handleSubmit = _ref.handleSubmit,\n          errors = _ref.errors;\n      console.log(values, 'Tasks');\n\n      var onSubmit = function onSubmit() {\n        values.__csrf_token = csrf;\n        console.log('submitting', values);\n        SendForm({\n          values: values,\n          url: url,\n          csrf: csrf\n        });\n      };\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Permissions\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.\"), __jsx(\"div\", {\n        className: \"task-field-radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Grant permission?\"), __jsx(Field, {\n        className: \"task-radio\",\n        value: values.ok_to_publish_ppt,\n        style: {\n          color: '#134381'\n        },\n        name: \"ok_to_publish_ppt\",\n        component: RadioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label-radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        onChange: handleChange,\n        style: {\n          margin: '1rem'\n        },\n        type: \"radio\",\n        name: \"ok_to_publish_ppt\",\n        value: \"yes\",\n        id: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"Yes, I grant permission for my presentation to be included\"), __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label-radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        style: {\n          margin: '1rem'\n        },\n        onChange: handleChange,\n        type: \"radio\",\n        name: \"ok_to_publish_ppt\",\n        value: \"no\",\n        id: \"no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"No, I do not grant permission\")), errors.ok_to_publish_ppt && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, errors.ok_to_publish_ppt)), __jsx(Button, {\n        onClick: function onClick() {\n          return validateForm().then(function (errors) {\n            return _Object$keys(errors).length === 0 && onSubmit();\n          });\n        },\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem\",\n          color: '#FFF'\n        },\n        padding: \".5rem 4rem\",\n        fontSize: \"1.7rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Send\"));\n    })\n  );\n};","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/Permissions.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","InstructionsPopup","PermissionSchema","Permissions","props","emptyInitial","ok_to_publish_ppt","presets","csrf","apiUrl","paperId","type","console","log","url","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","onSubmit","__csrf_token","color","margin","position","bottom","right","fontSize","then","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\nimport InstructionsPopup from '../../InstructionsPopup';\nimport {PermissionSchema} from '../TaskControl';\n\n\nexport const Permissions = (props) => {\n    const emptyInitial = {\n       ok_to_publish_ppt: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    const url = `https://prelude.eurobrake.net/authors/tasks/permissions/${paperId}`;\n    \n    return (\n        // ! NEED PRESETS FOR TASKS\n\n\n        <Formik\n         initialValues={emptyInitial}\n            validationSchema={PermissionSchema}\n\n            enableReinitialize\n        >\n            {({ values, handleChange, setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n                console.log(values, 'Tasks')\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting', values)\n                    SendForm({values, url, csrf})\n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Permissions</Typography>\n                        <Typography gutterBottom className=\"task-label\">We would like to support you to promote your work to EuroBrake attendees by making your presentation available on a private area of the conference website via a password protected link sent round after the event.</Typography>\n                         \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Grant permission?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.ok_to_publish_ppt}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_ppt\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                    Yes, I grant permission for my presentation to be included\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label-radio\">\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"ok_to_publish_ppt\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                    No, I do not grant permission\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_ppt && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_ppt}</label>}\n                        </div>\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}