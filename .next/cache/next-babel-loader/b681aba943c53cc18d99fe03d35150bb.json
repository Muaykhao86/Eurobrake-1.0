{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup } from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles'; // async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class AcceptPoster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskType: ''\n    };\n  }\n\n  render() {\n    const emptyInitial = {\n      accept_poster_invitation: ''\n    };\n    const {\n      presets,\n      csrf,\n      apiUrl,\n      paperId,\n      type\n    } = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    return __jsx(Formik, {\n      initialValues: emptyInitial,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, ({\n      values,\n      handleChange,\n      setFieldValue,\n      isValidating,\n      validateForm,\n      handleSubmit,\n      errors\n    }) => {\n      console.log(values, 'Tasks');\n\n      const handleCheckBox = async () => {\n        const accept = values.accept;\n        const copyright = values.copyright;\n        accept === true && setFieldValue('accept', 'yes');\n        accept === false && setFieldValue('accept', '');\n        copyright === true && setFieldValue('copyright', 'yes');\n        copyright === false && setFieldValue('copyright', '');\n        return;\n      };\n\n      const onSubmit = () => {\n        values.__csrf_token = csrf;\n        console.log('submitting', values);\n      };\n\n      return __jsx(StyledTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, paperId), __jsx(Typography, {\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Accept invitation to present a poster submission\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Your abstract has been accepted as a poster presentation at EuroBrake 2020.\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.\"), __jsx(Typography, {\n        gutterBottom: true,\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Please use the options below to accept or decline this poster presentation offer.\"), __jsx(\"div\", {\n        className: \"task-field-radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"label\",\n        className: \"task-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Accept invitation?\"), __jsx(Field, {\n        className: \"task-radio\",\n        value: values.accept_poster_invitation,\n        style: {\n          color: '#134381'\n        },\n        name: \"ok_to_publish_pitchvideo\",\n        component: RadioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Yes, I will make a poster presentation\", __jsx(\"input\", {\n        onChange: handleChange,\n        style: {\n          margin: '1rem'\n        },\n        type: \"radio\",\n        name: \"accept_poster_invitation\",\n        value: \"yes\",\n        id: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        style: {\n          margin: '1rem'\n        },\n        htmlFor: \"label\",\n        className: \"task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"No, please withdraw my paper from EuroBrake 2020\", __jsx(\"input\", {\n        style: {\n          margin: '1rem'\n        },\n        onChange: handleChange,\n        type: \"radio\",\n        name: \"accept_poster_invitation\",\n        value: \"no\",\n        id: \"no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), errors.ok_to_publish_ppt && __jsx(\"label\", {\n        style: {\n          position: 'absolute',\n          bottom: '-1rem',\n          right: '1rem',\n          color: '#ff0000',\n          fontSize: '1.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, errors.ok_to_publish_ppt)), __jsx(Button, {\n        onClick: () => validateForm().then(errors => _Object$keys(errors).length === 0 && onSubmit()),\n        bcolor: \"#134381\",\n        background: \"#134381\",\n        br: \"100rem\",\n        style: {\n          margin: \"3rem\",\n          color: '#FFF'\n        },\n        padding: \".5rem 4rem\",\n        fontSize: \"1.7rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Send\"));\n    });\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/TaskType/AcceptPoster.js"],"names":["React","Component","useState","Link","Typography","Formik","Field","TextField","SimpleFileUpload","CheckboxWithLabel","Checkbox","RadioGroup","Button","SendForm","StyledTask","AcceptPoster","constructor","props","state","taskType","render","emptyInitial","accept_poster_invitation","presets","csrf","apiUrl","paperId","type","console","log","values","handleChange","setFieldValue","isValidating","validateForm","handleSubmit","errors","handleCheckBox","accept","copyright","onSubmit","__csrf_token","color","margin","ok_to_publish_ppt","position","bottom","right","fontSize","then","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Link from 'next/link';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik,  Field, } from 'formik';\nimport { TextField, SimpleFileUpload, CheckboxWithLabel, Checkbox, RadioGroup} from 'formik-material-ui';\nimport { Button } from '../../Button';\nimport { SendForm } from '../FormActions';\nimport { StyledTask } from '../TaskStyles';\n\n\n\n// async (values, actions) => {\n//                 await Sendtask({ values, url })\n//             }\n\nexport class AcceptPoster extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n        taskType: ''\n    }\n\n}\n\nrender(){\n    const emptyInitial = {\n       accept_poster_invitation: ''\n    }\n\n    const {presets, csrf, apiUrl, paperId, type} = this.props;\n    console.log('tasks', presets, csrf, apiUrl, paperId, type);\n    \n    return (\n        <Formik\n         initialValues={emptyInitial}\n            enableReinitialize\n        >\n            {({ values, handleChange,  setFieldValue, isValidating, validateForm, handleSubmit, errors}) => {\n                console.log(values, 'Tasks')\n                   const handleCheckBox = async () => {\n                    const accept = values.accept;\n                    const copyright = values.copyright;\n                    accept === true && setFieldValue('accept', 'yes')\n                    accept === false && setFieldValue('accept', '')\n                    copyright === true && setFieldValue('copyright', 'yes')\n                    copyright === false && setFieldValue('copyright', '')\n                   return\n                }\n\n                const onSubmit = () => {\n                  values.__csrf_token = csrf\n                    console.log('submitting', values)\n              }\n                return (\n                    <StyledTask>\n                        <Typography className=\"task-title\">{paperId}</Typography>\n                        <Typography className=\"task-title\">Accept invitation to present a poster submission</Typography>\n                        <Typography gutterBottom className=\"task-title\" >Your abstract has been accepted as a poster presentation at EuroBrake 2020.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Posters will form a key part of EuroBrake 2020 with the poster session taking place in the main exhibition hall.</Typography>\n                        <Typography gutterBottom className=\"task-label\" >Please use the options below to accept or decline this poster presentation offer.</Typography>     \n                         <div className=\"task-field-radio\">\n                            <label\n                                htmlFor=\"label\"\n                                className=\"task-title\">\n                                Accept invitation?\n                        </label>\n                            <Field\n                                className=\"task-radio\"\n                                value={values.accept_poster_invitation}\n                                style={{ color: '#134381' }}\n                                name=\"ok_to_publish_pitchvideo\"\n                                component={RadioGroup}\n                            >\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                         Yes, I will make a poster presentation\n                                        <input\n                                        onChange={handleChange}                                        \n                                        style={{ margin: '1rem' }}\n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"yes\"\n                                        id=\"yes\"\n                                    />\n                                </label>\n                                <label\n                                    style={{ margin: '1rem' }}\n                                    htmlFor=\"label\"\n                                    className=\"task-label\">\n                                    No, please withdraw my paper from EuroBrake 2020\n                                        <input\n                                    style={{ margin: '1rem' }}\n                                        onChange={handleChange}                                        \n                                        type=\"radio\"\n                                        name=\"accept_poster_invitation\"\n                                        value=\"no\"\n                                        id=\"no\"\n                                    />\n                                </label>\n                            </Field>\n                            {errors.ok_to_publish_ppt && <label style={{position: 'absolute', bottom: '-1rem', right: '1rem', color: '#ff0000', fontSize: '1.5rem'}}>{errors.ok_to_publish_ppt}</label>}\n                        </div>\n                        <Button \n                            onClick={() => validateForm().then(errors => Object.keys(errors).length === 0 && onSubmit())}\n\n                            bcolor=\"#134381\"\n                            background=\"#134381\"\n                            br=\"100rem\"\n                            style={{ margin: \"3rem\", color: '#FFF' }}\n                            padding=\".5rem 4rem\"\n                            fontSize=\"1.7rem\">\n                            Send\n                        </Button>\n                        \n                    </StyledTask>\n                )\n            }}\n        </Formik>\n    )\n};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}