{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst DemoDiv = styled.div.withConfig({\n  displayName: \"login__DemoDiv\",\n  componentId: \"cxdurq-0\"\n})([\"display:flex;flex-direction:column;align-self:center;max-width:\", \";\"], props => props.theme.maxWidth);\nconst Demo = styled.h1.withConfig({\n  displayName: \"login__Demo\",\n  componentId: \"cxdurq-1\"\n})([\"padding:10rem;margin:5rem;color:orangered;\"]);\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const {\n        authorLogin,\n        uesername,\n        password,\n        error\n      } = this.state;\n      const apiUrl = authorLogin ? 'https://prelude.eurobrake.net/login' : ''; // action=\"//2019.eurobrake.net/exhibition/exhibitors/login\" SHOULD BE LOGIN FORM FOR EXHIBITORS\n\n      console.log('click');\n      const formData = {\n        username: username,\n        password: password\n      };\n\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          credentials: 'include',\n          body: _JSON$stringify(formData)\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          return {\n            loggedIn: data\n          };\n        } else {\n          console.log('login failed');\n          let error = new Error(response.statusText);\n          error.response = response;\n          return _Promise.reject(error);\n        }\n      } catch (error) {\n        console.error('Failed to login, please try again', error);\n        throw new Error(error);\n      }\n    });\n\n    this.state = {\n      username: '',\n      password: '',\n      authorLogin: true,\n      error: ''\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      form\n    } = this.props.form;\n    return __jsx(DemoDiv, {\n      onSubmit: this.onSubmit\n    }, __jsx(\"div\", {\n      className: \"\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\"\n    }, form[0].label), __jsx(\"input\", {\n      type: \"text\",\n      name: form[0].name,\n      onChange: this.saveToState,\n      value: this.state.username\n    })), __jsx(\"div\", {\n      className: \"\"\n    }, __jsx(\"label\", {\n      htmlFor: \"label\"\n    }, form[1].label), __jsx(\"input\", {\n      type: \"password\",\n      name: form[1].name,\n      onChange: this.saveToState,\n      value: this.state.password\n    })), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }));\n  }\n\n} // !!! NOTE IF I GO TO '/' IT GETS RID OF THE LOGGED IN COOKIE !!!\n\n_defineProperty(login, \"getInitialProps\", async function (ctx) {\n  console.log(ctx);\n  const res = await fetch('https://prelude.eurobrake.net/dashboard');\n  const data = await res.json().catch(error => console.log(error));\n  ;\n  return {\n    form: data\n  };\n});","map":null,"metadata":{},"sourceType":"module"}