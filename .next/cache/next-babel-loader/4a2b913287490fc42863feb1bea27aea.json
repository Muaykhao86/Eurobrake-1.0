{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login } from '../../utils/auth';\nexport function GetFormSSR(_x) {\n  return _GetFormSSR.apply(this, arguments);\n}\n\nfunction _GetFormSSR() {\n  _GetFormSSR = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var url, context, _cookies, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _ref.url, context = _ref.context;\n            // use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n            _cookies = cookies(context), logintoken = _cookies.logintoken;\n            console.log({\n              logintoken: logintoken\n            });\n            _context.prev = 3;\n            apiUrl = url;\n            _context.next = 7;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              cache: 'no-cache',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            data = _context.sent;\n\n            if (!(data.status === 'success')) {\n              _context.next = 17;\n              break;\n            }\n\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token);\n            return _context.abrupt(\"return\", data);\n\n          case 17:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 20:\n            _context.next = 26;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](3);\n            console.error('Failed to get form, please try again', _context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 26:\n            return _context.abrupt(\"return\");\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 22]]);\n  }));\n  return _GetFormSSR.apply(this, arguments);\n}\n\nexport function GetForm(_x2) {\n  return _GetForm.apply(this, arguments);\n}\n\nfunction _GetForm() {\n  _GetForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(url) {\n    var _cookie$get, logintoken, apiUrl, response, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _cookie$get = cookie.get(), logintoken = _cookie$get.logintoken;\n            console.log({\n              logintoken: logintoken\n            });\n            _context2.prev = 2;\n            apiUrl = url;\n            _context2.next = 6;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              cache: 'no-cache',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return response.json();\n\n          case 9:\n            data = _context2.sent;\n\n            if (!(data.status === 'success')) {\n              _context2.next = 16;\n              break;\n            }\n\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token);\n            return _context2.abrupt(\"return\", data);\n\n          case 16:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.error('Failed to get form, please try again', _context2.t0);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 25:\n            return _context2.abrupt(\"return\");\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 21]]);\n  }));\n  return _GetForm.apply(this, arguments);\n}\n\nexport function SendFile(_x3) {\n  return _SendFile.apply(this, arguments);\n}\n\nfunction _SendFile() {\n  _SendFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref2) {\n    var values, url, csrf, _cookie$get2, logintoken, formData, apiUrl, response, data, error, _apiUrl, _response, _data, _error;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            values = _ref2.values, url = _ref2.url, csrf = _ref2.csrf;\n            _cookie$get2 = cookie.get(), logintoken = _cookie$get2.logintoken;\n            formData = new FormData();\n            values.accept && values.accept === true ? values.accept = 'yes' : null;\n            values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n\n            _Object$keys(values).forEach(function (key) {\n              formData.append(key, values[key]);\n            });\n\n            console.log({\n              logintoken: logintoken,\n              url: url\n            });\n\n            if (!(logintoken && csrf)) {\n              _context3.next = 32;\n              break;\n            }\n\n            _context3.prev = 8;\n            apiUrl = url;\n            _context3.next = 12;\n            return fetch(apiUrl, {\n              method: 'POST',\n              body: formData,\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken\n              }\n            });\n\n          case 12:\n            response = _context3.sent;\n            _context3.next = 15;\n            return response.json();\n\n          case 15:\n            data = _context3.sent;\n            _context3.next = 18;\n            return console.log({\n              data: data\n            });\n\n          case 18:\n            if (!(data.status === 'success')) {\n              _context3.next = 23;\n              break;\n            }\n\n            console.log('getForm', data);\n            return _context3.abrupt(\"return\", data);\n\n          case 23:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 26:\n            _context3.next = 32;\n            break;\n\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3[\"catch\"](8);\n            console.error('Failed to get form, please try again', _context3.t0);\n            return _context3.abrupt(\"return\", _context3.t0);\n\n          case 32:\n            if (!(url === 'https://prelude.eurobrake.net/esop')) {\n              _context3.next = 57;\n              break;\n            }\n\n            _context3.prev = 33;\n            _apiUrl = url;\n            _context3.next = 37;\n            return fetch(_apiUrl, {\n              method: 'POST',\n              body: formData\n            });\n\n          case 37:\n            _response = _context3.sent;\n            _context3.next = 40;\n            return _response.json();\n\n          case 40:\n            _data = _context3.sent;\n            _context3.next = 43;\n            return console.log({\n              data: _data\n            });\n\n          case 43:\n            if (!(_data.status === 'success')) {\n              _context3.next = 48;\n              break;\n            }\n\n            console.log('getForm', _data);\n            return _context3.abrupt(\"return\", _data);\n\n          case 48:\n            _error = new Error(_data.error);\n            _error.response = _response;\n            throw _error;\n\n          case 51:\n            _context3.next = 57;\n            break;\n\n          case 53:\n            _context3.prev = 53;\n            _context3.t1 = _context3[\"catch\"](33);\n            console.error('Failed to send form, please try again', _context3.t1);\n            return _context3.abrupt(\"return\", _context3.t1);\n\n          case 57:\n            return _context3.abrupt(\"return\");\n\n          case 58:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[8, 28], [33, 53]]);\n  }));\n  return _SendFile.apply(this, arguments);\n}\n\nexport function SendForm(_x4) {\n  return _SendForm.apply(this, arguments);\n}\n\nfunction _SendForm() {\n  _SendForm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(_ref3) {\n    var csrf, values, url, FT, form, _cookie$get3, logintoken, apiUrl, response, data, error, _response2, _data2, _logintoken, _error2, _response3, _data3, _error3, _response4, _data4, _error4, _response5, _data5, _error5;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            csrf = _ref3.csrf, values = _ref3.values, url = _ref3.url, FT = _ref3.FT;\n            values && values.accept && values.accept === true ? values.accept = 'yes' : null;\n            values && values.copyright && values.copyright === true ? values.copyright = 'yes' : null; // console.log('sendform',values)\n\n            form = _JSON$stringify(values);\n            _cookie$get3 = cookie.get(), logintoken = _cookie$get3.logintoken; // console.log({url, form, FT, csrf});\n\n            if (!(logintoken && csrf && form)) {\n              _context4.next = 27;\n              break;\n            }\n\n            _context4.prev = 6;\n            apiUrl = url;\n            _context4.next = 10;\n            return fetch(apiUrl, {\n              method: 'POST',\n              body: form,\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken,\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 10:\n            response = _context4.sent;\n            _context4.next = 13;\n            return response.json();\n\n          case 13:\n            data = _context4.sent;\n\n            if (!(data.status === 'success')) {\n              _context4.next = 18;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", data);\n\n          case 18:\n            error = new Error(data.error);\n            error.response = response;\n            throw error;\n\n          case 21:\n            _context4.next = 27;\n            break;\n\n          case 23:\n            _context4.prev = 23;\n            _context4.t0 = _context4[\"catch\"](6);\n            console.error('Failed to send form, please try again', _context4.t0);\n            return _context4.abrupt(\"return\", _context4.t0);\n\n          case 27:\n            if (!(url === 'https://prelude.eurobrake.net/authors/login')) {\n              _context4.next = 51;\n              break;\n            }\n\n            _context4.prev = 28;\n            _context4.next = 31;\n            return fetch(url, {\n              method: 'POST',\n              credentials: 'include',\n              body: form,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 31:\n            _response2 = _context4.sent;\n            _context4.next = 34;\n            return _response2.json();\n\n          case 34:\n            _data2 = _context4.sent;\n\n            if (!(_data2.status === 'success')) {\n              _context4.next = 42;\n              break;\n            }\n\n            _logintoken = _data2.logintoken;\n            _context4.next = 39;\n            return login({\n              logintoken: _logintoken\n            });\n\n          case 39:\n            return _context4.abrupt(\"return\", _data2);\n\n          case 42:\n            _error2 = new Error(_data2.error);\n            _error2.response = _response2;\n            throw _error2;\n\n          case 45:\n            _context4.next = 51;\n            break;\n\n          case 47:\n            _context4.prev = 47;\n            _context4.t1 = _context4[\"catch\"](28);\n            console.error('Failed to login, please try again', _context4.t1);\n            return _context4.abrupt(\"return\", _context4.t1);\n\n          case 51:\n            if (!(FT === 'reset')) {\n              _context4.next = 72;\n              break;\n            }\n\n            _context4.prev = 52;\n            _context4.next = 55;\n            return fetch(url, {\n              method: 'POST',\n              credentials: 'include',\n              body: form,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 55:\n            _response3 = _context4.sent;\n            _context4.next = 58;\n            return _response3.json();\n\n          case 58:\n            _data3 = _context4.sent;\n\n            if (!(_data3.status === 'success')) {\n              _context4.next = 63;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", _data3);\n\n          case 63:\n            _error3 = new Error(_data3.error);\n            _error3.response = _response3;\n            throw _error3;\n\n          case 66:\n            _context4.next = 72;\n            break;\n\n          case 68:\n            _context4.prev = 68;\n            _context4.t2 = _context4[\"catch\"](52);\n            console.error('Failed to reset, please try again', _context4.t2);\n            return _context4.abrupt(\"return\", _context4.t2);\n\n          case 72:\n            if (!(FT === 'newsletter' || FT === 'contact')) {\n              _context4.next = 93;\n              break;\n            }\n\n            _context4.prev = 73;\n            _context4.next = 76;\n            return fetch(url, {\n              method: 'POST',\n              credentials: 'include',\n              body: form,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 76:\n            _response4 = _context4.sent;\n            _context4.next = 79;\n            return _response4.json();\n\n          case 79:\n            _data4 = _context4.sent;\n\n            if (!(_data4.status === 'success')) {\n              _context4.next = 84;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", _data4);\n\n          case 84:\n            _error4 = new Error(_data4.error);\n            _error4.response = _response4;\n            throw _error4;\n\n          case 87:\n            _context4.next = 93;\n            break;\n\n          case 89:\n            _context4.prev = 89;\n            _context4.t3 = _context4[\"catch\"](73);\n            console.error('Failed to send form, please try again', _context4.t3);\n            return _context4.abrupt(\"return\", _context4.t3);\n\n          case 93:\n            if (!(FT === 'withdraw')) {\n              _context4.next = 114;\n              break;\n            }\n\n            _context4.prev = 94;\n            _context4.next = 97;\n            return fetch(url, {\n              method: 'POST',\n              body: _JSON$stringify(csrf),\n              credentials: 'include',\n              headers: {\n                Authorization: 'Bearer ' + logintoken,\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 97:\n            _response5 = _context4.sent;\n            _context4.next = 100;\n            return _response5.json();\n\n          case 100:\n            _data5 = _context4.sent;\n\n            if (!(_data5.status === 'success')) {\n              _context4.next = 105;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", _data5);\n\n          case 105:\n            _error5 = new Error(_data5.error);\n            _error5.response = _response5;\n            throw _error5;\n\n          case 108:\n            _context4.next = 114;\n            break;\n\n          case 110:\n            _context4.prev = 110;\n            _context4.t4 = _context4[\"catch\"](94);\n            console.error('Failed to withdraw, please try again', _context4.t4);\n            return _context4.abrupt(\"return\", _context4.t4);\n\n          case 114:\n            return _context4.abrupt(\"return\");\n\n          case 115:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[6, 23], [28, 47], [52, 68], [73, 89], [94, 110]]);\n  }));\n  return _SendForm.apply(this, arguments);\n}","map":{"version":3,"sources":["/mnt/c/Users/D.Hardiman/desktop/eurobrake/components/forms/FormActions.js"],"names":["cookie","cookies","fetch","login","GetFormSSR","url","context","logintoken","console","log","apiUrl","credentials","cache","headers","Authorization","response","json","data","status","__csrf_token","error","Error","GetForm","get","SendFile","values","csrf","formData","FormData","accept","copyright","forEach","key","append","method","body","SendForm","FT","form"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport cookies from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport { login} from '../../utils/auth';\n\n\nexport async function GetFormSSR({url, context}) {\n    // use `nextCookie` to get the cookie and pass the token to the frontend in the `props`.\n    const { logintoken } = cookies(context);\n    console.log({logintoken})\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        return error\n    }\n    return\n}\n\nexport async function GetForm(url) {\n    const { logintoken } = cookie.get();\n    console.log({ logintoken })\n    try {\n        const apiUrl = url;\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n             cache: 'no-cache',\n            headers: {\n                Authorization: 'Bearer ' + logintoken,\n            }\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            console.log('getForm', data);\n            console.log('tkn', data.__csrf_token)\n            return data;\n        } else {\n            let error = new Error(data.error)\n            error.response = response\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'Failed to get form, please try again', error\n        )\n        return error\n    }\n    return \n}\n\nexport async function SendFile({ values, url, csrf }) {\n    const { logintoken } = cookie.get();\n    const formData = new FormData();\n    values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    \n    \n    Object.keys(values).forEach(key => {   \n      formData.append(key, values[key])});\n    \n  \n    console.log({ logintoken,  url})\n    if (logintoken && csrf ) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                }\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to get form, please try again', error\n            )\n            return error\n        }\n    }\n    if (url === 'https://prelude.eurobrake.net/esop') {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                body: formData,\n            });\n            const data = await response.json();\n            await console.log({ data })\n            if (data.status === 'success') {\n                console.log('getForm', data);\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n        }\n    }\n\n    return\n}\n\n\nexport async function SendForm({ csrf, values, url, FT }) {\n     values && values.accept && values.accept === true ? values.accept = 'yes' : null;\n    values && values.copyright && values.copyright === true ? values.copyright = 'yes' : null;\n    // console.log('sendform',values)\n    const form = JSON.stringify(values);\n    const { logintoken } = cookie.get();\n        // console.log({url, form, FT, csrf});\n    if (logintoken && csrf && form) {\n        try {\n            const apiUrl = url;\n            const response = await fetch(apiUrl, {\n                method: 'POST', \n                body: form,\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n                // console.log('getForm', data);\n                return data\n            } else {\n                let error = new Error(data.error)\n                error.response = response   \n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n        }\n    }\n    if(url === 'https://prelude.eurobrake.net/authors/login' ){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n                const { logintoken } = data;\n                await login({ logintoken })\n                return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to login, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'reset' ){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to reset, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'newsletter' || FT === 'contact'){\n        // console.log({url, form});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                credentials: 'include',\n                body: form,\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to send form, please try again', error\n            )\n            return error\n         }\n        }\n    if(FT === 'withdraw' ){\n        // console.log({url, csrf});\n        try {\n            const response = await fetch(url, {\n                method: 'POST', \n                body: JSON.stringify(csrf),\n                credentials: 'include',\n                headers: {\n                    Authorization: 'Bearer ' + logintoken,\n                    'Content-Type': 'application/json'\n                },\n            });\n         \n            const data = await response.json()\n\n            if (data.status === 'success') {\n            // console.log('getForm', data);\n            return data\n\n            } else {\n                let error = new Error(data.error)\n                error.response = response\n                throw error\n            }\n        } catch (error) {\n            console.error(\n                'Failed to withdraw, please try again', error\n            )\n            return error\n         }\n        }\n    return\n    }\n\n"]},"metadata":{},"sourceType":"module"}